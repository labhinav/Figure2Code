labels,values,title,value_heading,code
"['silver', 'hero', 'snow', 'pilot', 'show']","[60, 30, 50, 0, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['silver', 'hero', 'snow', 'pilot', 'show']
values = [60, 30, 50, 0, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#99a0a8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['farm', 'drug', 'peace', 'owner']","[40, 10, 10, 30]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['farm', 'drug', 'peace', 'owner']
values = [40, 10, 10, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#30daee')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['supply', 'harm']","[2, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['supply', 'harm']
values = [2, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#375d51')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['travel', 'type']","[5, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['travel', 'type']
values = [5, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b07139')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['anode', 'garage', 'mode']","[40, 90, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['anode', 'garage', 'mode']
values = [40, 90, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#900197')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cabin', 'move', 'injury', 'blue', 'sewage', 'escape', 'memory', 'court', 'branch']","[3, 4, 3, 9, 4, 9, 4, 9, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cabin', 'move', 'injury', 'blue', 'sewage', 'escape', 'memory', 'court', 'branch']
values = [3, 4, 3, 9, 4, 9, 4, 9, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c68005')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wind', 'poem', 'pipe', 'change']","[2, 6, 5, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wind', 'poem', 'pipe', 'change']
values = [2, 6, 5, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#aae344')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sign', 'skin', 'strip']","[5, 9, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sign', 'skin', 'strip']
values = [5, 9, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#fa9fe0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['garden', 'writer', 'shop', 'spot', 'today', 'driver', 'beat', 'idea']","[10000000, 1000, 100000, 10000000, 10000, 1000, 100, 1000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['garden', 'writer', 'shop', 'spot', 'today', 'driver', 'beat', 'idea']
values = [10000000, 1000, 100000, 10000000, 10000, 1000, 100, 1000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#228b4e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fit', 'wise', 'basket', 'man']","[6, 2, 4, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fit', 'wise', 'basket', 'man']
values = [6, 2, 4, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e647c5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['animal', 'lack', 'stream']","[7, 7, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['animal', 'lack', 'stream']
values = [7, 7, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#dd7921')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['vector', 'form', 'pink']","[70, 20, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vector', 'form', 'pink']
values = [70, 20, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#16d6f8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['unit', 'dance', 'bundle', 'loss', 'virtue', 'eye', 'suit', 'brand']","[70, 90, 80, 30, 80, 70, 90, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['unit', 'dance', 'bundle', 'loss', 'virtue', 'eye', 'suit', 'brand']
values = [70, 90, 80, 30, 80, 70, 90, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e00967')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ocean', 'store', 'museum', 'stop']","[8, 6, 7, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ocean', 'store', 'museum', 'stop']
values = [8, 6, 7, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#142227')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lesson', 'pile', 'school', 'data', 'color', 'store', 'pink', 'lamp', 'clerk']","[3, 4, 1, 1, 3, 6, 7, 6, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lesson', 'pile', 'school', 'data', 'color', 'store', 'pink', 'lamp', 'clerk']
values = [3, 4, 1, 1, 3, 6, 7, 6, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#5062f0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['jar', 'agent']","[60, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['jar', 'agent']
values = [60, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d2fa22')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['shirt', 'harbor', 'tip', 'center', 'medium', 'evil', 'world']","[4, 9, 8, 6, 1, 1, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shirt', 'harbor', 'tip', 'center', 'medium', 'evil', 'world']
values = [4, 9, 8, 6, 1, 1, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f073ef')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['chance', 'cause', 'dress']","[8, 3, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chance', 'cause', 'dress']
values = [8, 3, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d8ce42')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['art', 'mark', 'killer', 'bowl']","[4, 9, 5, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['art', 'mark', 'killer', 'bowl']
values = [4, 9, 5, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#81143d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['living', 'sewage', 'sight', 'weight', 'mile', 'chip']","[9, 4, 4, 6, 1, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['living', 'sewage', 'sight', 'weight', 'mile', 'chip']
values = [9, 4, 4, 6, 1, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#97a52e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wit', 'artist', 'news', 'milk']","[6, 9, 2, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wit', 'artist', 'news', 'milk']
values = [6, 9, 2, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a7aff7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['twelve', 'glance', 'golf', 'wagon', 'anger', 'health', 'fan', 'paper']","[7, 4, 6, 4, 3, 6, 1, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['twelve', 'glance', 'golf', 'wagon', 'anger', 'health', 'fan', 'paper']
values = [7, 4, 6, 4, 3, 6, 1, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#54b92c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['craft', 'notion', 'result', 'health', 'sun']","[2, 9, -8, 5, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['craft', 'notion', 'result', 'health', 'sun']
values = [2, 9, -8, 5, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a93e6d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['spread', 'desk', 'stroke', 'star', 'land']","[60, 60, 0, 60, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['spread', 'desk', 'stroke', 'star', 'land']
values = [60, 60, 0, 60, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ff3c73')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fund', 'winter', 'joy', 'result', 'garage']","[6, 1, 7, 6, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fund', 'winter', 'joy', 'result', 'garage']
values = [6, 1, 7, 6, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#79bb9d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['piece', 'female', 'value', 'stock', 'flux', 'run']","[3, 6, 8, 5, 7, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['piece', 'female', 'value', 'stock', 'flux', 'run']
values = [3, 6, 8, 5, 7, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#16fe9e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['track', 'prison', 'powder', 'line']","[6, 6, 2, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['track', 'prison', 'powder', 'line']
values = [6, 6, 2, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#5d2261')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sale', 'pain', 'mind', 'neck', 'study', 'reply']","[4, 1, 6, 2, 6, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sale', 'pain', 'mind', 'neck', 'study', 'reply']
values = [4, 1, 6, 2, 6, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#93e79a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['chin', 'art', 'drama', 'butter', 'show']","[6, 4, 4, 9, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chin', 'art', 'drama', 'butter', 'show']
values = [6, 4, 4, 9, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#5bc70e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bag', 'ring']","[8, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bag', 'ring']
values = [8, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#cfb921')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['island', 'profit', 'loan']","[6, 1, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['island', 'profit', 'loan']
values = [6, 1, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#87b0bf')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mark', 'female', 'storm', 'iodine']","[1, 7, 5, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mark', 'female', 'storm', 'iodine']
values = [1, 7, 5, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#82b94e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pistol', 'plant', 'demand']","[10000, 10000, 1000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pistol', 'plant', 'demand']
values = [10000, 10000, 1000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ff225e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cloud', 'pain', 'base', 'point', 'week', 'making']","[1000000000, 100000000, 1000000, 100, 1000000, 10000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cloud', 'pain', 'base', 'point', 'week', 'making']
values = [1000000000, 100000000, 1000000, 100, 1000000, 10000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#6cddbf')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['flesh', 'stream', 'heat']","[9, 2, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['flesh', 'stream', 'heat']
values = [9, 2, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ad5eea')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['knife', 'choice']","[3, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['knife', 'choice']
values = [3, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#64f9ac')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['era', 'move']","[2, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['era', 'move']
values = [2, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#021946')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['comedy', 'file', 'cereal', 'work', 'wind', 'touch', 'size']","[-8, 4, -5, 6, 3, 1, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['comedy', 'file', 'cereal', 'work', 'wind', 'touch', 'size']
values = [-8, 4, -5, 6, 3, 1, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#328385')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stop', 'well', 'scale']","[80, 60, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stop', 'well', 'scale']
values = [80, 60, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b4639e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['region', 'desire', 'sky']","[8, 6, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['region', 'desire', 'sky']
values = [8, 6, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#63d37e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['corn', 'novel', 'point', 'stay', 'bottom', 'finger']","[8, 7, 9, 4, 7, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['corn', 'novel', 'point', 'stay', 'bottom', 'finger']
values = [8, 7, 9, 4, 7, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a0ba44')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cut', 'death', 'corner', 'bomb', 'vein', 'limit']","[6, 7, 4, 5, 5, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cut', 'death', 'corner', 'bomb', 'vein', 'limit']
values = [6, 7, 4, 5, 5, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a9c512')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dive', 'board', 'pass', 'result', 'joke']","[30, 30, 60, 60, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dive', 'board', 'pass', 'result', 'joke']
values = [30, 30, 60, 60, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b0e7b3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['studio', 'town', 'circle', 'merger', 'money', 'bath', 'prison']","[10, 100000000, 10000, 10000, 10000, 100000000, 10000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['studio', 'town', 'circle', 'merger', 'money', 'bath', 'prison']
values = [10, 100000000, 10000, 10000, 10000, 100000000, 10000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#fff2ec')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cry', 'grace', 'trend', 'harm', 'center']","[1, -9, -3, 9, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cry', 'grace', 'trend', 'harm', 'center']
values = [1, -9, -3, 9, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#660eea')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['affair', 'humor', 'love', 'dark', 'impact']","[9, 9, 5, 4, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['affair', 'humor', 'love', 'dark', 'impact']
values = [9, 9, 5, 4, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#44d9e4')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bundle', 'extent', 'drive']","[2, 7, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bundle', 'extent', 'drive']
values = [2, 7, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#870a00')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rise', 'piece', 'phrase', 'core', 'worry', 'fence', 'bag']","[9, 8, 5, 4, 8, 5, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rise', 'piece', 'phrase', 'core', 'worry', 'fence', 'bag']
values = [9, 8, 5, 4, 8, 5, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3dc4be')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['herd', 'wise', 'camera']","[1, 1, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['herd', 'wise', 'camera']
values = [1, 1, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#228168')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stairs', 'member', 'reform', 'favor']","[70, 70, 60, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stairs', 'member', 'reform', 'favor']
values = [70, 70, 60, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#daa01b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sir', 'axis', 'series', 'death', 'state', 'evil']","[4, 5, 1, 6, 2, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sir', 'axis', 'series', 'death', 'state', 'evil']
values = [4, 5, 1, 6, 2, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3afb71')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['path', 'stick', 'craft', 'report']","[3, 9, 3, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['path', 'stick', 'craft', 'report']
values = [3, 9, 3, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#87e543')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['volume', 'level']","[20, 30]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['volume', 'level']
values = [20, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1dc6ee')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['war', 'answer', 'judge', 'tale', 'wave', 'diet']","[40, 60, 90, 80, 20, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['war', 'answer', 'judge', 'tale', 'wave', 'diet']
values = [40, 60, 90, 80, 20, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8a0a94')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['temple', 'beach', 'fan', 'rate']","[8, 6, 2, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['temple', 'beach', 'fan', 'rate']
values = [8, 6, 2, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#fc7c66')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pound', 'hope', 'bullet', 'center']","[8, 4, 1, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pound', 'hope', 'bullet', 'center']
values = [8, 4, 1, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9a107c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cream', 'hero', 'gyro', 'teeth', 'point', 'right', 'fury', 'love', 'cabin']","[3, 9, 2, 4, 3, 2, 3, 2, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cream', 'hero', 'gyro', 'teeth', 'point', 'right', 'fury', 'love', 'cabin']
values = [3, 9, 2, 4, 3, 2, 3, 2, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f8b1ac')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['race', 'evil', 'word']","[20, 60, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['race', 'evil', 'word']
values = [20, 60, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#cb23d6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['work', 'merger', 'memory', 'moon', 'break']","[4, 1, 8, 3, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['work', 'merger', 'memory', 'moon', 'break']
values = [4, 1, 8, 3, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3f709e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['river', 'earth', 'copy']","[3, 9, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['river', 'earth', 'copy']
values = [3, 9, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b4bd2d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['paper', 'column', 'death', 'cycle', 'match']","[60, 60, 40, 50, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['paper', 'column', 'death', 'cycle', 'match']
values = [60, 60, 40, 50, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3cf15d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['foil', 'west', 'novel', 'closet', 'suite']","[1000000000, 100000000, 100, 100, 10000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['foil', 'west', 'novel', 'closet', 'suite']
values = [1000000000, 100000000, 100, 100, 10000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b303c1')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dress', 'smell', 'study', 'self', 'rhythm', 'virtue', 'smoke', 'theory']","[40, 50, 30, 40, 90, 20, 20, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dress', 'smell', 'study', 'self', 'rhythm', 'virtue', 'smoke', 'theory']
values = [40, 50, 30, 40, 90, 20, 20, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7e0fd5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['widow', 'snake', 'county', 'shirt', 'hope', 'escape']","[4, 8, 6, 2, 2, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['widow', 'snake', 'county', 'shirt', 'hope', 'escape']
values = [4, 8, 6, 2, 2, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#09b520')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['beach', 'matter', 'novel', 'wood']","[60, 10, 90, 20]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['beach', 'matter', 'novel', 'wood']
values = [60, 10, 90, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8a2c68')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['plant', 'comedy', 'wall', 'ease', 'pause']","[1000000, 100000000, 10000, 1000, 100]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['plant', 'comedy', 'wall', 'ease', 'pause']
values = [1000000, 100000000, 10000, 1000, 100]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7f839f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['music', 'novel', 'food', 'memory', 'saline', 'date', 'result', 'award', 'campus']","[80, 60, 60, 20, 50, 90, 50, 80, 20]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['music', 'novel', 'food', 'memory', 'saline', 'date', 'result', 'award', 'campus']
values = [80, 60, 60, 20, 50, 90, 50, 80, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#44d531')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fellow', 'one', 'belief', 'hell', 'refund']","[1000000000, 10000, 1000000, 1000, 10000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fellow', 'one', 'belief', 'hell', 'refund']
values = [1000000000, 10000, 1000000, 1000, 10000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2d7814')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['entry', 'beat', 'right']","[40, 60, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['entry', 'beat', 'right']
values = [40, 60, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d7f5a9')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['escape', 'wound', 'hotel', 'summer', 'number', 'word']","[10, 10, 30, 30, 70, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['escape', 'wound', 'hotel', 'summer', 'number', 'word']
values = [10, 10, 30, 30, 70, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#beac95')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bundle', 'air', 'sake', 'blood']","[1, 2, 2, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bundle', 'air', 'sake', 'blood']
values = [1, 2, 2, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1be8db')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fly', 'noise', 'event']","[70, 90, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fly', 'noise', 'event']
values = [70, 90, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#15bd27')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['list', 'while', 'term', 'knife', 'fight', 'course']","[3, 2, 2, 3, 3, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['list', 'while', 'term', 'knife', 'fight', 'course']
values = [3, 2, 2, 3, 3, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#5a81e5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['artery', 'rhythm', 'home', 'mass']","[3, 4, 3, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['artery', 'rhythm', 'home', 'mass']
values = [3, 4, 3, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a5eb83')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mile', 'year']","[2, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mile', 'year']
values = [2, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#236c77')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['firm', 'head', 'watch']","[4, 8, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['firm', 'head', 'watch']
values = [4, 8, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0c3764')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['row', 'drama', 'core']","[3, 9, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['row', 'drama', 'core']
values = [3, 9, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b31657')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['doctor', 'soil', 'regime', 'novel']","[4, 5, 8, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['doctor', 'soil', 'regime', 'novel']
values = [4, 5, 8, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#81d252')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sea', 'agent', 'beauty']","[80, 70, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sea', 'agent', 'beauty']
values = [80, 70, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7e420c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['league', 'lot', 'artery', 'pile', 'list', 'cut', 'wall', 'stairs']","[1, 8, 5, 3, 7, 6, 7, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['league', 'lot', 'artery', 'pile', 'list', 'cut', 'wall', 'stairs']
values = [1, 8, 5, 3, 7, 6, 7, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#fc9030')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fight', 'porch', 'movie', 'mind']","[10, 100000000, 1000, 10000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fight', 'porch', 'movie', 'mind']
values = [10, 100000000, 1000, 10000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#5dd83a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wave', 'week']","[7, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wave', 'week']
values = [7, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c570de')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['closet', 'attack', 'ladder', 'news', 'guilt', 'dining']","[30, 60, 50, 80, 60, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['closet', 'attack', 'ladder', 'news', 'guilt', 'dining']
values = [30, 60, 50, 80, 60, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#557a72')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bundle', 'blind', 'boss']","[1000000000, 100, 1000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bundle', 'blind', 'boss']
values = [1000000000, 100, 1000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8e6d4e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['plain', 'turn', 'roll', 'boy', 'owner', 'car']","[20, 20, 20, 60, 60, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['plain', 'turn', 'roll', 'boy', 'owner', 'car']
values = [20, 20, 20, 60, 60, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a2b905')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['family', 'pool', 'crowd', 'noon', 'horse', 'curve', 'tree']","[6, 3, 5, 5, 6, 5, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['family', 'pool', 'crowd', 'noon', 'horse', 'curve', 'tree']
values = [6, 3, 5, 5, 6, 5, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#504b87')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gay', 'fellow', 'artery', 'air', 'cellar']","[9, 5, 3, 7, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gay', 'fellow', 'artery', 'air', 'cellar']
values = [9, 5, 3, 7, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9cdfff')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['profit', 'union', 'visit', 'step']","[6, 6, 5, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['profit', 'union', 'visit', 'step']
values = [6, 6, 5, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2d0bba')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['clerk', 'agent', 'doubt', 'fear']","[4, 3, 7, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['clerk', 'agent', 'doubt', 'fear']
values = [4, 3, 7, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3f4f92')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['motor', 'base']","[40, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['motor', 'base']
values = [40, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9ceec7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['flood', 'driver', 'store', 'curve']","[5, 1, 3, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['flood', 'driver', 'store', 'curve']
values = [5, 1, 3, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#867075')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['search', 'sex', 'animal', 'roll']","[5, 7, 3, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['search', 'sex', 'animal', 'roll']
values = [5, 7, 3, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d718f2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['crisis', 'belief', 'drink', 'night']","[4, 4, 5, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crisis', 'belief', 'drink', 'night']
values = [4, 4, 5, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#04805e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lap', 'type', 'cream', 'legend', 'beer', 'smoke', 'sample', 'fluid']","[80, 20, 60, 20, 50, 50, 60, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lap', 'type', 'cream', 'legend', 'beer', 'smoke', 'sample', 'fluid']
values = [80, 20, 60, 20, 50, 50, 60, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#eacddc')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['spite', 'estate', 'load', 'pause', 'farmer', 'corner', 'stop']","[70, 20, 50, 90, 40, 30, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['spite', 'estate', 'load', 'pause', 'farmer', 'corner', 'stop']
values = [70, 20, 50, 90, 40, 30, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#224b37')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['male', 'sight', 'relief', 'ship']","[90, 90, 40, 90]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['male', 'sight', 'relief', 'ship']
values = [90, 90, 40, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f31ffb')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pastor', 'steel']","[3, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pastor', 'steel']
values = [3, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#029de2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['board', 'entry', 'comedy']","[100000000, 10, 1000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['board', 'entry', 'comedy']
values = [100000000, 10, 1000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#29db98')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['shop', 'drift', 'grant', 'policy']","[8, 9, 5, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shop', 'drift', 'grant', 'policy']
values = [8, 9, 5, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#367d93')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sign', 'taste', 'kind', 'speech', 'shift', 'regime', 'name']","[2, 4, 8, 2, 6, 1, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sign', 'taste', 'kind', 'speech', 'shift', 'regime', 'name']
values = [2, 4, 8, 2, 6, 1, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#50ec0b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['steel', 'walk', 'wall', 'brass', 'bowl', 'vector', 'today', 'prison']","[2, 6, 8, 7, -3, 6, 1, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['steel', 'walk', 'wall', 'brass', 'bowl', 'vector', 'today', 'prison']
values = [2, 6, 8, 7, -3, 6, 1, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7559bf')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['anyone', 'style', 'scheme']","[10, 80, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['anyone', 'style', 'scheme']
values = [10, 80, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#518fe1')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['crowd', 'left', 'goal']","[6, 1, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crowd', 'left', 'goal']
values = [6, 1, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#887de0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stage', 'till']","[7, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stage', 'till']
values = [7, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#5f48d6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['thick', 'gay', 'dog', 'verse', 'cast', 'dear']","[4, 2, 9, 6, 2, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['thick', 'gay', 'dog', 'verse', 'cast', 'dear']
values = [4, 2, 9, 6, 2, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ae3d08')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sound', 'risk', 'factor', 'cross']","[50, 10, 20, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sound', 'risk', 'factor', 'cross']
values = [50, 10, 20, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b19a52')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['death', 'money', 'making']","[4, 1, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['death', 'money', 'making']
values = [4, 1, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8318fc')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['site', 'bride', 'piece', 'pair', 'copy', 'handle']","[9, 5, 1, 5, 8, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['site', 'bride', 'piece', 'pair', 'copy', 'handle']
values = [9, 5, 1, 5, 8, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f7d6ae')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gas', 'forest', 'height', 'defeat', 'bird', 'anger', 'tape', 'power']","[2, 7, 6, 4, 8, 3, 4, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gas', 'forest', 'height', 'defeat', 'bird', 'anger', 'tape', 'power']
values = [2, 7, 6, 4, 8, 3, 4, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#63dada')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['table', 'verse']","[7, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['table', 'verse']
values = [7, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#80b3b5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rain', 'winter', 'holder', 'self', 'dealer']","[9, 6, 9, 9, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rain', 'winter', 'holder', 'self', 'dealer']
values = [9, 6, 9, 9, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#894065')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['barrel', 'bottom', 'stuff', 'call']","[7, 8, 7, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['barrel', 'bottom', 'stuff', 'call']
values = [7, 8, 7, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4e58f8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bomb', 'seed', 'circle']","[4, 8, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bomb', 'seed', 'circle']
values = [4, 8, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#08cd73')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['player', 'weight', 'period', 'crop', 'run', 'close', 'sense']","[9, 8, 6, 5, 8, 6, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['player', 'weight', 'period', 'crop', 'run', 'close', 'sense']
values = [9, 8, 6, 5, 8, 6, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#db610b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['regard', 'rhythm', 'yield', 'clerk', 'fall', 'pink', 'critic', 'park', 'wire']","[5, 3, 1, 7, 3, 3, 5, 5, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['regard', 'rhythm', 'yield', 'clerk', 'fall', 'pink', 'critic', 'park', 'wire']
values = [5, 3, 1, 7, 3, 3, 5, 5, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b24a08')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['half', 'grant', 'lawyer', 'water', 'cup', 'safety']","[70, 50, 10, 20, 60, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['half', 'grant', 'lawyer', 'water', 'cup', 'safety']
values = [70, 50, 10, 20, 60, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3bc617')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['answer', 'cream', 'theory', 'terror', 'expert', 'tie', 'today']","[7, 8, -7, 6, 1, -9, -6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['answer', 'cream', 'theory', 'terror', 'expert', 'tie', 'today']
values = [7, 8, -7, 6, 1, -9, -6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c894c8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['person', 'making', 'phone', 'honor']","[7, 2, 1, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['person', 'making', 'phone', 'honor']
values = [7, 2, 1, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#18b32b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lap', 'pilot', 'answer', 'proof', 'canvas', 'sir', 'staff']","[20, 30, 40, 80, 40, 20, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lap', 'pilot', 'answer', 'proof', 'canvas', 'sir', 'staff']
values = [20, 30, 40, 80, 40, 20, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#90d802')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['chance', 'coffee', 'board']","[1, 6, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chance', 'coffee', 'board']
values = [1, 6, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#eb2db3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['speech', 'flight', 'fruit', 'place', 'colony']","[5, 7, 8, 1, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['speech', 'flight', 'fruit', 'place', 'colony']
values = [5, 7, 8, 1, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#559b14')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['skin', 'trial', 'guard', 'aid', 'auto', 'cabin']","[10, 70, 50, 30, 20, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['skin', 'trial', 'guard', 'aid', 'auto', 'cabin']
values = [10, 70, 50, 30, 20, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f8a039')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['nation', 'terror', 'pound', 'burden']","[80, 90, 20, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['nation', 'terror', 'pound', 'burden']
values = [80, 90, 20, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ca9108')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stone', 'cap']","[1, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stone', 'cap']
values = [1, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9e2566')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['strain', 'day', 'copy', 'grace', 'sort', 'thirty', 'wife', 'union', 'corps']","[2, 3, 2, 5, 3, 6, 2, 6, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['strain', 'day', 'copy', 'grace', 'sort', 'thirty', 'wife', 'union', 'corps']
values = [2, 3, 2, 5, 3, 6, 2, 6, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#10b10f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['oil', 'lap', 'front', 'cereal', 'floor']","[2, 5, 1, 7, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['oil', 'lap', 'front', 'cereal', 'floor']
values = [2, 5, 1, 7, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7f88c0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['income', 'dust', 'mail', 'twelve']","[6, 8, 6, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['income', 'dust', 'mail', 'twelve']
values = [6, 8, 6, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b3fe30')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bus', 'bath', 'bit', 'finger']","[4, 3, 1, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bus', 'bath', 'bit', 'finger']
values = [4, 3, 1, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3a41f9')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['campus', 'basket', 'hell', 'line']","[1, 3, 8, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['campus', 'basket', 'hell', 'line']
values = [1, 3, 8, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#6b9247')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['safety', 'cereal', 'stake', 'boat', 'danger', 'lack', 'hero']","[2, 8, 9, 7, 9, 6, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['safety', 'cereal', 'stake', 'boat', 'danger', 'lack', 'hero']
values = [2, 8, 9, 7, 9, 6, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#01f13f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['set', 'ladder', 'sister', 'trend', 'rhythm', 'wood']","[10, 50, 10, 20, 20, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['set', 'ladder', 'sister', 'trend', 'rhythm', 'wood']
values = [10, 50, 10, 20, 20, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ae828a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['light', 'powder', 'period', 'glory', 'spot']","[1, 4, 9, 8, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['light', 'powder', 'period', 'glory', 'spot']
values = [1, 4, 9, 8, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d19c57')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bank', 'dress']","[8, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bank', 'dress']
values = [8, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3513d9')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['label', 'unity', 'loss', 'marine', 'speed']","[10, 30, 40, 60, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['label', 'unity', 'loss', 'marine', 'speed']
values = [10, 30, 40, 60, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#30ca29')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rank', 'planet', 'shadow', 'gyro', 'vice', 'carbon', 'table']","[1, 2, 5, 1, 4, 3, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rank', 'planet', 'shadow', 'gyro', 'vice', 'carbon', 'table']
values = [1, 2, 5, 1, 4, 3, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#bec2ae')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['latter', 'chair', 'wait', 'paper', 'focus', 'police', 'policy', 'cry']","[2, 8, 8, 1, 9, 3, 1, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['latter', 'chair', 'wait', 'paper', 'focus', 'police', 'policy', 'cry']
values = [2, 8, 8, 1, 9, 3, 1, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0bfa22')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['coach', 'cup', 'loan']","[3, 7, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['coach', 'cup', 'loan']
values = [3, 7, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9f91d3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pain', 'lesson', 'knife', 'farmer']","[7, 2, 5, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pain', 'lesson', 'knife', 'farmer']
values = [7, 2, 5, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9792a2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stop', 'stage', 'lie']","[0, 7, 0]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stop', 'stage', 'lie']
values = [0, 7, 0]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#280e09')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['editor', 'soul', 'ticket', 'brick', 'age', 'focus', 'tape']","[9, 5, 3, 7, 9, 7, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['editor', 'soul', 'ticket', 'brick', 'age', 'focus', 'tape']
values = [9, 5, 3, 7, 9, 7, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#afb711')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gyro', 'cool', 'limit', 'fit', 'strain', 'factor', 'master']","[4, 8, 2, 7, 5, 4, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gyro', 'cool', 'limit', 'fit', 'strain', 'factor', 'master']
values = [4, 8, 2, 7, 5, 4, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8c4e14')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['round', 'sand', 'stone', 'actor']","[50, 10, 60, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['round', 'sand', 'stone', 'actor']
values = [50, 10, 60, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ecbae4')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bone', 'god']","[9, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bone', 'god']
values = [9, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7fe09b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tea', 'motion', 'barn', 'patrol', 'mean', 'step']","[80, 30, 70, 30, 50, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tea', 'motion', 'barn', 'patrol', 'mean', 'step']
values = [80, 30, 70, 30, 50, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1d5f1b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cash', 'part', 'panel', 'leg', 'data']","[5, 6, 8, 7, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cash', 'part', 'panel', 'leg', 'data']
values = [5, 6, 8, 7, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7ffc66')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['corps', 'axis', 'string', 'film']","[1, 6, 4, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['corps', 'axis', 'string', 'film']
values = [1, 6, 4, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#db3a2a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['joke', 'cross', 'stage', 'ball']","[1, 9, 9, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['joke', 'cross', 'stage', 'ball']
values = [1, 9, 9, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#fb57c8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['shift', 'twenty', 'stock', 'bullet', 'crisis', 'bed']","[30, 50, 60, 20, 60, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shift', 'twenty', 'stock', 'bullet', 'crisis', 'bed']
values = [30, 50, 60, 20, 60, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#eec601')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sugar', 'horse', 'string', 'pencil']","[2, 1, 6, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sugar', 'horse', 'string', 'pencil']
values = [2, 1, 6, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c1611f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['habit', 'baby']","[4, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['habit', 'baby']
values = [4, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#75b14e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['set', 'plate']","[8, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['set', 'plate']
values = [8, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0237c6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tip', 'volume', 'site', 'knife', 'beef']","[6, 4, 8, 5, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tip', 'volume', 'site', 'knife', 'beef']
values = [6, 4, 8, 5, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#691c20')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fiber', 'sphere']","[10, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fiber', 'sphere']
values = [10, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#14a59f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['goal', 'engine', 'gold', 'graph', 'saline', 'site', 'mood']","[100000000, 10000, 100000000, 10000, 1000, 1000, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['goal', 'engine', 'gold', 'graph', 'saline', 'site', 'mood']
values = [100000000, 10000, 100000000, 10000, 1000, 1000, 100000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0ac05d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fund', 'crash', 'future', 'lumber', 'cheek', 'boy']","[3, 0, 4, 7, 3, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fund', 'crash', 'future', 'lumber', 'cheek', 'boy']
values = [3, 0, 4, 7, 3, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c1734d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['club', 'coat', 'ball', 'bulk', 'deal', 'killer', 'night']","[40, 40, 10, 30, 90, 60, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['club', 'coat', 'ball', 'bulk', 'deal', 'killer', 'night']
values = [40, 40, 10, 30, 90, 60, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b7901f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['planet', 'school']","[30, 30]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['planet', 'school']
values = [30, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#073b86')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mark', 'cabin']","[4, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mark', 'cabin']
values = [4, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#df09e7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['type', 'view']","[60, 30]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['type', 'view']
values = [60, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#bd85ce')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['task', 'tent', 'town', 'input']","[2, 5, 5, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['task', 'tent', 'town', 'input']
values = [2, 5, 5, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#17961a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['matter', 'ratio', 'fault', 'rain', 'self']","[80, 50, 80, 80, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['matter', 'ratio', 'fault', 'rain', 'self']
values = [80, 50, 80, 80, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#16b128')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['vector', 'diet', 'meat', 'artery', 'atom']","[9, 5, 9, 1, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vector', 'diet', 'meat', 'artery', 'atom']
values = [9, 5, 9, 1, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#21d7e5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fee', 'moon']","[9, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fee', 'moon']
values = [9, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#42fe3b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cup', 'bench', 'belief', 'court', 'lock', 'brief']","[3, 7, 9, 8, 9, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cup', 'bench', 'belief', 'court', 'lock', 'brief']
values = [3, 7, 9, 8, 9, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#80fd8b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['motel', 'critic', 'arm', 'vein', 'unity', 'era']","[6, 4, 1, 4, 8, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['motel', 'critic', 'arm', 'vein', 'unity', 'era']
values = [6, 4, 1, 4, 8, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#adfbb8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sort', 'iodine', 'grant', 'dining', 'noise', 'patrol', 'trail']","[90, 60, 40, 60, 70, 10, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sort', 'iodine', 'grant', 'dining', 'noise', 'patrol', 'trail']
values = [90, 60, 40, 60, 70, 10, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#350a68')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['chorus', 'cut', 'summer', 'size', 'claim', 'speed', 'youth', 'doctor', 'legs']","[6, 8, 3, 8, 9, 6, 1, 9, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chorus', 'cut', 'summer', 'size', 'claim', 'speed', 'youth', 'doctor', 'legs']
values = [6, 8, 3, 8, 9, 6, 1, 9, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#aa2667')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['heat', 'hero']","[7, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['heat', 'hero']
values = [7, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f7a7a1')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['shift', 'wind', 'unity']","[1, 6, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shift', 'wind', 'unity']
values = [1, 6, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#24d1b6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['desk', 'column', 'code', 'denial', 'gyro', 'valley', 'harbor']","[80, 50, 20, 60, 40, 10, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['desk', 'column', 'code', 'denial', 'gyro', 'valley', 'harbor']
values = [80, 50, 20, 60, 40, 10, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ec7e21')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bent', 'till', 'wash']","[3, 9, 0]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bent', 'till', 'wash']
values = [3, 9, 0]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d05afb')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tea', 'match']","[7, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tea', 'match']
values = [7, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#6cb891')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['energy', 'public', 'look', 'factor', 'cap', 'safety', 'record']","[7, 4, 3, 1, 9, 8, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['energy', 'public', 'look', 'factor', 'cap', 'safety', 'record']
values = [7, 4, 3, 1, 9, 8, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3be6ba')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['decade', 'basket', 'hung', 'copy', 'anode', 'market']","[60, 10, 30, 20, 50, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['decade', 'basket', 'hung', 'copy', 'anode', 'market']
values = [60, 10, 30, 20, 50, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#77ab54')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['flood', 'barn']","[10000000, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['flood', 'barn']
values = [10000000, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#49fde0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fiber', 'store', 'joy', 'muscle', 'mess']","[8, 4, 4, 2, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fiber', 'store', 'joy', 'muscle', 'mess']
values = [8, 4, 4, 2, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3b1367')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['chain', 'burden', 'client', 'coast', 'male', 'region']","[7, 3, 7, 6, 3, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chain', 'burden', 'client', 'coast', 'male', 'region']
values = [7, 3, 7, 6, 3, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0a3add')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['father', 'dome', 'stairs', 'model']","[7, 3, 7, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['father', 'dome', 'stairs', 'model']
values = [7, 3, 7, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#63bd54')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['voting', 'chain', 'matter', 'clerk']","[1, 9, 8, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['voting', 'chain', 'matter', 'clerk']
values = [1, 9, 8, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#07985d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['note', 'sake', 'milk', 'favor', 'horse']","[1, 2, 5, 3, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['note', 'sake', 'milk', 'favor', 'horse']
values = [1, 2, 5, 3, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d4fce9')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cap', 'blonde', 'cut']","[7, 4, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cap', 'blonde', 'cut']
values = [7, 4, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4e72a4')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['murder', 'lap', 'damage']","[50, 70, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['murder', 'lap', 'damage']
values = [50, 70, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4a2627')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cast', 'band', 'well', 'road', 'talent']","[4, 6, 7, 5, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cast', 'band', 'well', 'road', 'talent']
values = [4, 6, 7, 5, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#594f7a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['size', 'brain', 'agency', 'realm', 'blood']","[3, 6, 9, 4, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['size', 'brain', 'agency', 'realm', 'blood']
values = [3, 6, 9, 4, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7cf6f4')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['enemy', 'chief']","[30, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['enemy', 'chief']
values = [30, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#124cc3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['middle', 'jury', 'guard']","[3, 7, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['middle', 'jury', 'guard']
values = [3, 7, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a922d1')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['anger', 'crop']","[6, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['anger', 'crop']
values = [6, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1e2a2a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wound', 'branch', 'cover', 'movie', 'corner']","[6, 8, 2, 3, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wound', 'branch', 'cover', 'movie', 'corner']
values = [6, 8, 2, 3, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e55714')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['race', 'cross', 'damage', 'player']","[3, 3, 5, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['race', 'cross', 'damage', 'player']
values = [3, 3, 5, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#880c36')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['match', 'lunch', 'excuse', 'god', 'sauce', 'health']","[5, 5, 9, 6, 5, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['match', 'lunch', 'excuse', 'god', 'sauce', 'health']
values = [5, 5, 9, 6, 5, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f89cd0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['score', 'motel', 'break', 'plate', 'fury', 'suite']","[5, 6, 2, 2, 8, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['score', 'motel', 'break', 'plate', 'fury', 'suite']
values = [5, 6, 2, 2, 8, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#fb2618')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['whisky', 'golf', 'fly', 'mad', 'wage', 'night', 'point', 'grain']","[2, 3, 2, 2, 3, 3, 6, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['whisky', 'golf', 'fly', 'mad', 'wage', 'night', 'point', 'grain']
values = [2, 3, 2, 2, 3, 3, 6, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#837f2e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['center', 'scene', 'wound', 'animal']","[8, 9, 4, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['center', 'scene', 'wound', 'animal']
values = [8, 9, 4, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#81e1f8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wall', 'left']","[90, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wall', 'left']
values = [90, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#285f77')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['charge', 'rhythm']","[50, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['charge', 'rhythm']
values = [50, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#767bcb')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cause', 'youth', 'year', 'combat', 'melody', 'jury', 'defeat', 'row']","[50, 20, 70, 10, 70, 60, 20, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cause', 'youth', 'year', 'combat', 'melody', 'jury', 'defeat', 'row']
values = [50, 20, 70, 10, 70, 60, 20, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2b2ab5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['waste', 'jungle', 'hurry', 'bass', 'dress']","[1, 8, 2, 4, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['waste', 'jungle', 'hurry', 'bass', 'dress']
values = [1, 8, 2, 4, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#32c668')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['faint', 'poem', 'star']","[90, 60, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['faint', 'poem', 'star']
values = [90, 60, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9962d2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['metal', 'song', 'row']","[5, 5, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['metal', 'song', 'row']
values = [5, 5, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#579980')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dealer', 'plane', 'trust', 'oil', 'dive', 'aim']","[1, 6, 5, 9, 7, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dealer', 'plane', 'trust', 'oil', 'dive', 'aim']
values = [1, 6, 5, 9, 7, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7ea9e2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sea', 'rest', 'voting', 'grip', 'defeat']","[5, 8, 5, 5, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sea', 'rest', 'voting', 'grip', 'defeat']
values = [5, 8, 5, 5, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#76f7ec')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['block', 'flash', 'roll', 'desire']","[20, 90, 40, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['block', 'flash', 'roll', 'desire']
values = [20, 90, 40, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#30bd3f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['steel', 'jazz', 'honey', 'trust']","[4, 3, 4, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['steel', 'jazz', 'honey', 'trust']
values = [4, 3, 4, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#dc82a9')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bench', 'cellar', 'taxi']","[80, 50, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bench', 'cellar', 'taxi']
values = [80, 50, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#45b2ba')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['base', 'gas']","[8, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['base', 'gas']
values = [8, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#969af5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['world', 'flux', 'paint', 'ring', 'worker', 'unity']","[10, 30, 20, 10, 40, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['world', 'flux', 'paint', 'ring', 'worker', 'unity']
values = [10, 30, 20, 10, 40, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#08b859')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ship', 'tone', 'run', 'fact']","[9, 8, 6, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ship', 'tone', 'run', 'fact']
values = [9, 8, 6, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7c8850')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['shot', 'root', 'disk', 'flesh', 'supply', 'unit', 'parade', 'pool', 'snake']","[90, 10, 40, 10, 40, 10, 30, 70, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shot', 'root', 'disk', 'flesh', 'supply', 'unit', 'parade', 'pool', 'snake']
values = [90, 10, 40, 10, 40, 10, 30, 70, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b94e61')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['notice', 'comedy', 'cry', 'fire']","[20, 60, 80, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['notice', 'comedy', 'cry', 'fire']
values = [20, 60, 80, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ec88d7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['shock', 'grave']","[1, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shock', 'grave']
values = [1, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#5ba430')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rage', 'sight', 'love', 'drunk', 'sir', 'desire', 'coal']","[7, 3, 4, 1, 5, 7, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rage', 'sight', 'love', 'drunk', 'sir', 'desire', 'coal']
values = [7, 3, 4, 1, 5, 7, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#45f7d3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['marine', 'memory', 'nature', 'clock', 'duty']","[4, 4, 2, -4, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['marine', 'memory', 'nature', 'clock', 'duty']
values = [4, 4, 2, -4, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4acdae')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['blue', 'window']","[9, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['blue', 'window']
values = [9, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2f774d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['poet', 'pack', 'amount', 'killer', 'focus']","[9, 6, 5, 2, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['poet', 'pack', 'amount', 'killer', 'focus']
values = [9, 6, 5, 2, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4764eb')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['child', 'guy', 'shift', 'wire', 'rhythm', 'art']","[4, 2, 6, 8, 8, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['child', 'guy', 'shift', 'wire', 'rhythm', 'art']
values = [4, 2, 6, 8, 8, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#94a9da')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['remark', 'idea', 'bottle', 'scale', 'end', 'excess', 'paper', 'gain', 'boy']","[-7, -6, -5, 3, 1, 1, -9, 5, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['remark', 'idea', 'bottle', 'scale', 'end', 'excess', 'paper', 'gain', 'boy']
values = [-7, -6, -5, 3, 1, 1, -9, 5, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#42cc0f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['middle', 'blow', 'extent', 'court', 'group', 'past', 'credit', 'craft', 'meat']","[2, 4, 2, 9, 5, -3, -4, 9, -7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['middle', 'blow', 'extent', 'court', 'group', 'past', 'credit', 'craft', 'meat']
values = [2, 4, 2, 9, 5, -3, -4, 9, -7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#57d33b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['denial', 'block', 'tax']","[4, 5, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['denial', 'block', 'tax']
values = [4, 5, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4e3828')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['boss', 'ranch', 'dog', 'voyage', 'box', 'poem', 'dirt']","[20, 30, 90, 90, 80, 10, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['boss', 'ranch', 'dog', 'voyage', 'box', 'poem', 'dirt']
values = [20, 30, 90, 90, 80, 10, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#23a9e0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lesson', 'master', 'lead', 'shirt', 'handle']","[5, 5, 6, 5, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lesson', 'master', 'lead', 'shirt', 'handle']
values = [5, 5, 6, 5, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#61baf2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['desire', 'scheme']","[40, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['desire', 'scheme']
values = [40, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#085a86')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['body', 'result', 'reply']","[2, 3, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['body', 'result', 'reply']
values = [2, 3, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b865ff')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mood', 'nobody', 'dollar', 'wave', 'code', 'glass', 'cure', 'league']","[10, 30, 40, 10, 80, 10, 90, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mood', 'nobody', 'dollar', 'wave', 'code', 'glass', 'cure', 'league']
values = [10, 30, 40, 10, 80, 10, 90, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#516451')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['reply', 'dust', 'cream', 'pace', 'bridge', 'voice']","[4, 6, 4, 7, 2, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['reply', 'dust', 'cream', 'pace', 'bridge', 'voice']
values = [4, 6, 4, 7, 2, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b002e7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stuff', 'battle']","[8, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stuff', 'battle']
values = [8, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#245858')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['base', 'era', 'ranch', 'card', 'chin']","[5, 3, 4, 1, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['base', 'era', 'ranch', 'card', 'chin']
values = [5, 3, 4, 1, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3ab642')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['type', 'ballet']","[9, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['type', 'ballet']
values = [9, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#6e0185')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['west', 'trust', 'cell']","[8, 7, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['west', 'trust', 'cell']
values = [8, 7, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#386260')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mode', 'mass', 'middle', 'chief', 'root', 'land']","[1000000, 100, 100, 10, 100000, 1000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mode', 'mass', 'middle', 'chief', 'root', 'land']
values = [1000000, 100, 100, 10, 100000, 1000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#46fd2b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['song', 'end', 'public', 'cash']","[7, 4, 9, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['song', 'end', 'public', 'cash']
values = [7, 4, 9, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3c7d8d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['melody', 'diet', 'break']","[6, 4, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['melody', 'diet', 'break']
values = [6, 4, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#44cd1d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['profit', 'goal', 'desire']","[4, 9, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['profit', 'goal', 'desire']
values = [4, 9, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#17292a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['nation', 'list']","[2, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['nation', 'list']
values = [2, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3eb862')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['army', 'health']","[2, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['army', 'health']
values = [2, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d2f5b6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['client', 'fact']","[3, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['client', 'fact']
values = [3, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ad2866')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['scope', 'pure', 'till', 'butter']","[50, 40, 20, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['scope', 'pure', 'till', 'butter']
values = [50, 40, 20, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c548d6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['beam', 'river', 'army', 'row', 'drama']","[9, 6, 5, 7, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['beam', 'river', 'army', 'row', 'drama']
values = [9, 6, 5, 7, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#feed36')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ear', 'wind', 'half', 'path']","[2, 4, 6, -5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ear', 'wind', 'half', 'path']
values = [2, 4, 6, -5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#49d55a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['post', 'iodine', 'truth', 'fish', 'switch']","[1, 1, 4, 7, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['post', 'iodine', 'truth', 'fish', 'switch']
values = [1, 1, 4, 7, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e76cc0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['marine', 'clock', 'block', 'axis', 'rain', 'faith', 'car']","[7, 7, 5, 5, 3, 7, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['marine', 'clock', 'block', 'axis', 'rain', 'faith', 'car']
values = [7, 7, 5, 5, 3, 7, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#15ba84')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wall', 'jaw', 'colony', 'price', 'date', 'memory']","[9, 2, 6, 6, 8, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wall', 'jaw', 'colony', 'price', 'date', 'memory']
values = [9, 2, 6, 6, 8, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1340af')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['heat', 'planet', 'tire', 'mud', 'effort']","[10, 50, 20, 80, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['heat', 'planet', 'tire', 'mud', 'effort']
values = [10, 50, 20, 80, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2965df')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bent', 'expert', 'forth', 'path', 'grass']","[2, 5, 6, 3, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bent', 'expert', 'forth', 'path', 'grass']
values = [2, 5, 6, 3, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#15a33a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sand', 'sir', 'burden', 'jar', 'kid', 'child']","[1, 1, 5, 2, 3, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sand', 'sir', 'burden', 'jar', 'kid', 'child']
values = [1, 1, 5, 2, 3, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d0811c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['foam', 'pack', 'wit', 'action', 'money', 'maid']","[7, 9, 6, 7, 8, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['foam', 'pack', 'wit', 'action', 'money', 'maid']
values = [7, 9, 6, 7, 8, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8e3047')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['season', 'hen']","[70, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['season', 'hen']
values = [70, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0c0c32')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tie', 'impact', 'notion', 'wife']","[1, 6, 9, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tie', 'impact', 'notion', 'wife']
values = [1, 6, 9, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#634465')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['silver', 'sign', 'blood', 'queen', 'church', 'check', 'lock', 'prayer']","[9, 8, 1, 6, 4, 6, 1, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['silver', 'sign', 'blood', 'queen', 'church', 'check', 'lock', 'prayer']
values = [9, 8, 1, 6, 4, 6, 1, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#441b2c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dinner', 'point']","[4, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dinner', 'point']
values = [4, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9bac0d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['means', 'wire', 'sweat', 'shadow', 'snake', 'merger', 'winter', 'cereal']","[6, 5, 2, 6, 9, 1, 6, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['means', 'wire', 'sweat', 'shadow', 'snake', 'merger', 'winter', 'cereal']
values = [6, 5, 2, 6, 9, 1, 6, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a09694')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tongue', 'hold', 'member', 'craft']","[4, 4, 8, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tongue', 'hold', 'member', 'craft']
values = [4, 4, 8, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#74b1cc')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['city', 'ten', 'firm', 'parade', 'cellar', 'mode', 'patent']","[4, 8, 7, 7, 1, 8, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['city', 'ten', 'firm', 'parade', 'cellar', 'mode', 'patent']
values = [4, 8, 7, 7, 1, 8, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2ad977')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['supper', 'help', 'drunk', 'sand']","[1000000000, 10000000, 1000, 100000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['supper', 'help', 'drunk', 'sand']
values = [1000000000, 10000000, 1000, 100000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#73c347')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['till', 'member', 'smile', 'museum']","[4, 1, 5, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['till', 'member', 'smile', 'museum']
values = [4, 1, 5, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9a84cc')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dear', 'realm', 'appeal', 'visit', 'bowl']","[70, 20, 90, 70, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dear', 'realm', 'appeal', 'visit', 'bowl']
values = [70, 20, 90, 70, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#05185f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['walk', 'life', 'total', 'class', 'jungle', 'book']","[3, 4, 1, 7, 1, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['walk', 'life', 'total', 'class', 'jungle', 'book']
values = [3, 4, 1, 7, 1, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3e6f20')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['motel', 'piano']","[6, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['motel', 'piano']
values = [6, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c248e6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['detail', 'clerk', 'hour', 'cream']","[50, 90, 20, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['detail', 'clerk', 'hour', 'cream']
values = [50, 90, 20, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#11f158')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['friend', 'excess', 'drink', 'soul', 'lumber']","[3, 5, 5, 6, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['friend', 'excess', 'drink', 'soul', 'lumber']
values = [3, 5, 5, 6, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d3a22c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['son', 'author', 'self', 'stock', 'maid', 'source']","[8, 7, 3, 4, 8, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['son', 'author', 'self', 'stock', 'maid', 'source']
values = [8, 7, 3, 4, 8, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2b7e75')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['foil', 'coffee', 'work', 'day', 'flight']","[1, 3, 4, 1, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['foil', 'coffee', 'work', 'day', 'flight']
values = [1, 3, 4, 1, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b209f2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bill', 'ranch', 'race', 'cure', 'risk', 'ten']","[2, 3, 9, 8, 5, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bill', 'ranch', 'race', 'cure', 'risk', 'ten']
values = [2, 3, 9, 8, 5, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#171d20')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['board', 'share', 'event', 'hotel', 'cabin', 'bus']","[20, 60, 20, 20, 90, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['board', 'share', 'event', 'hotel', 'cabin', 'bus']
values = [20, 60, 20, 20, 90, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a4636a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['holder', 'handle', 'trial', 'order', 'group']","[9, 6, 9, 1, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['holder', 'handle', 'trial', 'order', 'group']
values = [9, 6, 9, 1, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#730a01')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pilot', 'sauce', 'winter', 'mold', 'front', 'rank']","[30, 50, 80, 90, 20, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pilot', 'sauce', 'winter', 'mold', 'front', 'rank']
values = [30, 50, 80, 90, 20, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7d87db')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cloth', 'text', 'jaw', 'pilot']","[1, 7, 4, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cloth', 'text', 'jaw', 'pilot']
values = [1, 7, 4, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0b618d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['danger', 'realm']","[4, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['danger', 'realm']
values = [4, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#30b8a8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['crowd', 'vice']","[1, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crowd', 'vice']
values = [1, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7460be')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tail', 'circle', 'band', 'threat']","[8, 7, 3, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tail', 'circle', 'band', 'threat']
values = [8, 7, 3, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#11aef7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bottle', 'widow', 'cost', 'blue']","[10, 80, 60, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bottle', 'widow', 'cost', 'blue']
values = [10, 80, 60, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3f6f1e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['guilt', 'noise', 'roof', 'motel', 'floor', 'wall']","[2, 9, 7, 3, 3, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['guilt', 'noise', 'roof', 'motel', 'floor', 'wall']
values = [2, 9, 7, 3, 3, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ab8c50')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['season', 'bare', 'volume', 'team', 'shop', 'woman']","[4, 4, 9, 3, 4, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['season', 'bare', 'volume', 'team', 'shop', 'woman']
values = [4, 4, 9, 3, 4, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3e700f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['band', 'image', 'get', 'forth']","[7, 9, 4, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['band', 'image', 'get', 'forth']
values = [7, 9, 4, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#624151')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['trip', 'stock', 'second', 'sugar', 'sheet', 'break', 'remark', 'boy']","[30, 20, 50, 10, 10, 60, 60, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['trip', 'stock', 'second', 'sugar', 'sheet', 'break', 'remark', 'boy']
values = [30, 20, 50, 10, 10, 60, 60, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8d59cf')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['slave', 'living']","[4, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['slave', 'living']
values = [4, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4382a7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['review', 'week', 'day', 'road', 'end']","[9, 4, 2, 5, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['review', 'week', 'day', 'road', 'end']
values = [9, 4, 2, 5, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a72b35')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['deck', 'set']","[4, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['deck', 'set']
values = [4, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4bbd34')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['world', 'curve']","[1, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['world', 'curve']
values = [1, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#46923e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['guitar', 'notice']","[9, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['guitar', 'notice']
values = [9, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#88fa0c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['effect', 'heard', 'whisky', 'left']","[30, 40, 30, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['effect', 'heard', 'whisky', 'left']
values = [30, 40, 30, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3ba826')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['corps', 'taste', 'back', 'trap', 'rush']","[40, 30, 80, 60, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['corps', 'taste', 'back', 'trap', 'rush']
values = [40, 30, 80, 60, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f5a6c9')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['survey', 'file', 'mold', 'murder', 'fence', 'autumn']","[9, 6, 1, 7, 6, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['survey', 'file', 'mold', 'murder', 'fence', 'autumn']
values = [9, 6, 1, 7, 6, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#202af7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['trade', 'ocean', 'beam', 'muscle', 'plane', 'paint', 'tax', 'unity']","[7, 0, 0, 5, 6, 4, 0, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['trade', 'ocean', 'beam', 'muscle', 'plane', 'paint', 'tax', 'unity']
values = [7, 0, 0, 5, 6, 4, 0, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#be491f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cellar', 'access', 'combat']","[9, 2, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cellar', 'access', 'combat']
values = [9, 2, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#153646')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['animal', 'lay', 'making', 'milk']","[8, 5, 5, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['animal', 'lay', 'making', 'milk']
values = [8, 5, 5, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3d604c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['verse', 'flesh', 'inside', 'store', 'joy', 'day', 'female']","[1, 9, 4, 7, 2, 8, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['verse', 'flesh', 'inside', 'store', 'joy', 'day', 'female']
values = [1, 9, 4, 7, 2, 8, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#433cd7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['girl', 'honor', 'fee', 'need', 'rise', 'home']","[10, 30, 10, 30, 0, 40]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['girl', 'honor', 'fee', 'need', 'rise', 'home']
values = [10, 30, 10, 30, 0, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0066b7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ratio', 'focus', 'liquor', 'event', 'garden']","[40, 90, 10, 80, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ratio', 'focus', 'liquor', 'event', 'garden']
values = [40, 90, 10, 80, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#6b4d5d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cause', 'fruit', 'vertex', 'parade']","[3, 2, 7, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cause', 'fruit', 'vertex', 'parade']
values = [3, 2, 7, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f540cf')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bride', 'core']","[60, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bride', 'core']
values = [60, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#51acc5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['block', 'size', 'rage']","[4, 9, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['block', 'size', 'rage']
values = [4, 9, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e8b24e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['power', 'mean']","[9, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['power', 'mean']
values = [9, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e39a77')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['force', 'pocket', 'impact', 'tube', 'term']","[50, 40, 10, 80, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['force', 'pocket', 'impact', 'tube', 'term']
values = [50, 40, 10, 80, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#fabd4c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['house', 'term', 'text']","[3, 1, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['house', 'term', 'text']
values = [3, 1, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#719b6f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['king', 'wall', 'farmer', 'dollar', 'board', 'money', 'sister', 'poetry']","[1000, 1000, 100000, 100, 1000000, 100, 1000000000, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['king', 'wall', 'farmer', 'dollar', 'board', 'money', 'sister', 'poetry']
values = [1000, 1000, 100000, 100, 1000000, 100, 1000000000, 100000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e52a85')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['thick', 'handle', 'muscle', 'circle', 'girl', 'ward']","[3, 3, 7, 2, 8, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['thick', 'handle', 'muscle', 'circle', 'girl', 'ward']
values = [3, 3, 7, 2, 8, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4175d6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['storm', 'motion', 'return', 'random', 'press']","[7, 6, 1, 1, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['storm', 'motion', 'return', 'random', 'press']
values = [7, 6, 1, 1, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1b4ff8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['edge', 'tea', 'report', 'symbol', 'mode', 'debate', 'length', 'master', 'energy']","[7, 6, 1, 2, 9, 5, 6, 1, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['edge', 'tea', 'report', 'symbol', 'mode', 'debate', 'length', 'master', 'energy']
values = [7, 6, 1, 2, 9, 5, 6, 1, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c1c473')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['table', 'policy', 'cloud']","[1, 7, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['table', 'policy', 'cloud']
values = [1, 7, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0fba4d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['task', 'stuff', 'frame', 'inch', 'pocket', 'feel']","[1, 6, 3, 1, 5, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['task', 'stuff', 'frame', 'inch', 'pocket', 'feel']
values = [1, 6, 3, 1, 5, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#92cfe6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['handle', 'melody', 'diet', 'talent', 'review', 'wealth', 'parlor', 'fire']","[1, 4, 9, 3, 6, 1, 1, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['handle', 'melody', 'diet', 'talent', 'review', 'wealth', 'parlor', 'fire']
values = [1, 4, 9, 3, 6, 1, 1, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#99be83')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['shore', 'bent', 'whole', 'trend', 'bowl', 'lesson', 'teeth']","[6, 2, 1, 9, 7, 5, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shore', 'bent', 'whole', 'trend', 'bowl', 'lesson', 'teeth']
values = [6, 2, 1, 9, 7, 5, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#91ac7f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ring', 'effort', 'smell', 'wit']","[8, 4, 2, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ring', 'effort', 'smell', 'wit']
values = [8, 4, 2, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#997476')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['flood', 'thing', 'aspect', 'eye', 'data', 'left']","[10, 40, 20, 20, 50, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['flood', 'thing', 'aspect', 'eye', 'data', 'left']
values = [10, 40, 20, 20, 50, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7a5c66')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['chair', 'turn', 'root', 'coast']","[8, 3, 5, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chair', 'turn', 'root', 'coast']
values = [8, 3, 5, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8791c3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['panic', 'rhythm']","[20, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['panic', 'rhythm']
values = [20, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#6a0c13')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['name', 'basket', 'vector', 'smell', 'cell', 'whole']","[60, 90, 20, 80, 90, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['name', 'basket', 'vector', 'smell', 'cell', 'whole']
values = [60, 90, 20, 80, 90, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9a4ecc')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['leader', 'vein', 'period', 'arm', 'field']","[100, 100000, 10, 100, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['leader', 'vein', 'period', 'arm', 'field']
values = [100, 100000, 10, 100, 100000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#91c0de')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['humor', 'pistol']","[70, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['humor', 'pistol']
values = [70, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#84531e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['demand', 'expert', 'chip', 'turn', 'horror', 'son', 'office']","[2, 1, 8, 8, 9, 2, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['demand', 'expert', 'chip', 'turn', 'horror', 'son', 'office']
values = [2, 1, 8, 8, 9, 2, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#737df3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['card', 'health', 'anyone']","[4, 1, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['card', 'health', 'anyone']
values = [4, 1, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a6eb2c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wave', 'place', 'dirt']","[8, 4, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wave', 'place', 'dirt']
values = [8, 4, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#13c107')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['author', 'water', 'notice', 'brief', 'supper', 'bank']","[6, 5, 8, 9, 5, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['author', 'water', 'notice', 'brief', 'supper', 'bank']
values = [6, 5, 8, 9, 5, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#47f92f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pause', 'sense', 'cell', 'deck', 'valley', 'driver']","[10, 1000000000, 100, 100, 100000000, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pause', 'sense', 'cell', 'deck', 'valley', 'driver']
values = [10, 1000000000, 100, 100, 100000000, 100000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#755e4d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sweat', 'silver']","[7, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sweat', 'silver']
values = [7, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9d5973')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lumber', 'party']","[2, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lumber', 'party']
values = [2, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a60aa1')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['herd', 'effort', 'issue', 'draft', 'public']","[5, 1, 6, 8, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['herd', 'effort', 'issue', 'draft', 'public']
values = [5, 1, 6, 8, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3edc63')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dive', 'wit', 'lock', 'widow', 'award']","[9, 2, 4, 9, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dive', 'wit', 'lock', 'widow', 'award']
values = [9, 2, 4, 9, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0057b2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['brick', 'breath', 'term', 'client', 'danger']","[0, 3, 4, 7, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['brick', 'breath', 'term', 'client', 'danger']
values = [0, 3, 4, 7, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#641eea')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['graph', 'impact', 'mud', 'knife']","[90, 30, 60, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['graph', 'impact', 'mud', 'knife']
values = [90, 30, 60, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#10b0e0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['night', 'fool', 'medium', 'parade', 'well', 'behalf', 'wire']","[-5, 9, -1, 1, 8, 7, -5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['night', 'fool', 'medium', 'parade', 'well', 'behalf', 'wire']
values = [-5, 9, -1, 1, 8, 7, -5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e532d0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['road', 'plain', 'data', 'shot', 'bed']","[2, 6, 2, 8, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['road', 'plain', 'data', 'shot', 'bed']
values = [2, 6, 2, 8, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#63a79f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tip', 'rise', 'wind', 'cure', 'appeal', 'cent']","[9, 9, 7, 4, 9, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tip', 'rise', 'wind', 'cure', 'appeal', 'cent']
values = [9, 9, 7, 4, 9, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9ee5c8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sitter', 'tea', 'north', 'step', 'idea']","[1, 8, 7, 5, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sitter', 'tea', 'north', 'step', 'idea']
values = [1, 8, 7, 5, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#effca5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['loan', 'sir']","[10, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['loan', 'sir']
values = [10, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f99601')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['drug', 'east', 'jaw', 'tool', 'taste', 'sum']","[9, 5, 6, 8, 4, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drug', 'east', 'jaw', 'tool', 'taste', 'sum']
values = [9, 5, 6, 8, 4, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#639d7b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wave', 'self', 'frame', 'horse', 'sea', 'band', 'cause']","[40, 90, 10, 30, 0, 40, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wave', 'self', 'frame', 'horse', 'sea', 'band', 'cause']
values = [40, 90, 10, 30, 0, 40, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#348980')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ring', 'light', 'writer', 'noon', 'reform', 'firm', 'risk']","[6, 8, 2, 2, 2, 1, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ring', 'light', 'writer', 'noon', 'reform', 'firm', 'risk']
values = [6, 8, 2, 2, 2, 1, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0f71f9')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['income', 'warmth', 'study']","[7, 1, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['income', 'warmth', 'study']
values = [7, 1, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9f331b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rage', 'mine', 'switch', 'one']","[9, 5, 7, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rage', 'mine', 'switch', 'one']
values = [9, 5, 7, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#99be14')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['radio', 'cent', 'board']","[90, 80, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['radio', 'cent', 'board']
values = [90, 80, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7e8b64')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['chest', 'cycle', 'wife', 'way', 'rush', 'study', 'bird']","[90, 10, 20, 90, 10, 90, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chest', 'cycle', 'wife', 'way', 'rush', 'study', 'bird']
values = [90, 10, 20, 90, 10, 90, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a28d8f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['adult', 'youth', 'foam', 'slope']","[7, 6, 9, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['adult', 'youth', 'foam', 'slope']
values = [7, 6, 9, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#5dc948')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['plain', 'team', 'bomb', 'index', 'plant', 'latter']","[5, 4, 5, 1, 2, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['plain', 'team', 'bomb', 'index', 'plant', 'latter']
values = [5, 4, 5, 1, 2, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2c3c40')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wagon', 'fault', 'hour', 'policy', 'food']","[2, 4, 9, 8, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wagon', 'fault', 'hour', 'policy', 'food']
values = [2, 4, 9, 8, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3730f7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['kid', 'film', 'wind', 'mine']","[3, 2, 9, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['kid', 'film', 'wind', 'mine']
values = [3, 2, 9, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ce75db')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rhythm', 'garage']","[60, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rhythm', 'garage']
values = [60, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ffc568')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['east', 'dance']","[4, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['east', 'dance']
values = [4, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#699c47')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['way', 'flavor', 'oxygen', 'gun', 'night', 'sera', 'church']","[9, 8, 4, 8, 6, 8, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['way', 'flavor', 'oxygen', 'gun', 'night', 'sera', 'church']
values = [9, 8, 4, 8, 6, 8, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#55e4c3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sake', 'sleep']","[70, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sake', 'sleep']
values = [70, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a08bb3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['list', 'author', 'poetry', 'cut']","[6, 7, 2, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['list', 'author', 'poetry', 'cut']
values = [6, 7, 2, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#726d50')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['waste', 'reply', 'skill', 'cast', 'play', 'speed']","[2, 4, 1, 7, 9, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['waste', 'reply', 'skill', 'cast', 'play', 'speed']
values = [2, 4, 1, 7, 9, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0f69c2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['agency', 'access', 'today', 'barn', 'drunk', 'box']","[6, 4, 2, 5, 2, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['agency', 'access', 'today', 'barn', 'drunk', 'box']
values = [6, 4, 2, 5, 2, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9b39cd')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wound', 'name']","[5, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wound', 'name']
values = [5, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9541f8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['watch', 'random', 'salary']","[7, 5, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['watch', 'random', 'salary']
values = [7, 5, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#60a150')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['chance', 'date', 'anyone', 'record', 'lady', 'living', 'heat', 'folk', 'luck']","[4, 6, 2, 3, 3, 8, 7, 5, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chance', 'date', 'anyone', 'record', 'lady', 'living', 'heat', 'folk', 'luck']
values = [4, 6, 2, 3, 3, 8, 7, 5, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ae9d09')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['couple', 'lot', 'salary', 'review', 'bath', 'screen']","[2, 9, 7, 6, 1, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['couple', 'lot', 'salary', 'review', 'bath', 'screen']
values = [2, 9, 7, 6, 1, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#cf8ea7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['crop', 'play', 'unity', 'rule', 'reach', 'west', 'milk', 'shock']","[3, 4, 7, 8, 2, 7, 7, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crop', 'play', 'unity', 'rule', 'reach', 'west', 'milk', 'shock']
values = [3, 4, 7, 8, 2, 7, 7, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#99359d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['chance', 'oxygen', 'growth', 'vision', 'fight', 'volume', 'bit']","[2, 2, 6, 5, 8, 8, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chance', 'oxygen', 'growth', 'vision', 'fight', 'volume', 'bit']
values = [2, 2, 6, 5, 8, 8, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d52d80')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pile', 'review']","[2, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pile', 'review']
values = [2, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#20e737')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['guy', 'hat', 'result']","[30, 50, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['guy', 'hat', 'result']
values = [30, 50, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#504662')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stone', 'sera', 'vein', 'craft', 'sorry', 'award']","[60, 80, 20, 60, 60, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stone', 'sera', 'vein', 'craft', 'sorry', 'award']
values = [60, 80, 20, 60, 60, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#dfb46b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pencil', 'study', 'entry']","[60, 40, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pencil', 'study', 'entry']
values = [60, 40, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#5fba1e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['style', 'core', 'song', 'appeal', 'rest']","[5, 8, 5, 9, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['style', 'core', 'song', 'appeal', 'rest']
values = [5, 8, 5, 9, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f2de2f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['load', 'eye', 'tube', 'escape', 'order']","[5, 7, 7, 3, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['load', 'eye', 'tube', 'escape', 'order']
values = [5, 7, 7, 3, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#095eb5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bone', 'while', 'depth', 'health']","[8, 4, 1, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bone', 'while', 'depth', 'health']
values = [8, 4, 1, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e7dad0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['remark', 'taste', 'pink', 'trust', 'shame', 'form', 'killer', 'truth']","[30, 40, 40, 90, 20, 10, 40, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['remark', 'taste', 'pink', 'trust', 'shame', 'form', 'killer', 'truth']
values = [30, 40, 40, 90, 20, 10, 40, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#262c0b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['form', 'stem', 'extent', 'mind', 'drink', 'sum', 'symbol', 'stake']","[60, 40, 30, 70, 10, 20, 70, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['form', 'stem', 'extent', 'mind', 'drink', 'sum', 'symbol', 'stake']
values = [60, 40, 30, 70, 10, 20, 70, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#dab434')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hotel', 'host', 'barn', 'tire', 'mail', 'gain']","[90, 30, 50, 20, 40, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hotel', 'host', 'barn', 'tire', 'mail', 'gain']
values = [90, 30, 50, 20, 40, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#819ac5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['oil', 'comedy', 'rice', 'fall', 'affair', 'back']","[10, 50, 40, 40, 20, 90]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['oil', 'comedy', 'rice', 'fall', 'affair', 'back']
values = [10, 50, 40, 40, 20, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9096cc')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['line', 'drink']","[8, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['line', 'drink']
values = [8, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9cf845')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['melody', 'metal', 'race', 'temple', 'loan']","[40, 30, 20, 40, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['melody', 'metal', 'race', 'temple', 'loan']
values = [40, 30, 20, 40, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7b46e0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['goal', 'skill']","[9, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['goal', 'skill']
values = [9, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#83ada6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['vision', 'worry', 'system']","[3, 8, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vision', 'worry', 'system']
values = [3, 8, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8775ed')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['middle', 'future', 'judge', 'review', 'savage', 'pause', 'reason']","[1, 2, 1, 7, 7, 4, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['middle', 'future', 'judge', 'review', 'savage', 'pause', 'reason']
values = [1, 2, 1, 7, 7, 4, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b677c3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['window', 'horror']","[5, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['window', 'horror']
values = [5, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a1bb9f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tent', 'anger', 'cycle', 'hay', 'ring', 'film']","[9, 9, 9, 2, 6, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tent', 'anger', 'cycle', 'hay', 'ring', 'film']
values = [9, 9, 9, 2, 6, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9723f1')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['twenty', 'cat', 'sitter', 'record', 'flavor', 'cap', 'pond']","[-8, -4, -7, 1, 6, -7, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['twenty', 'cat', 'sitter', 'record', 'flavor', 'cap', 'pond']
values = [-8, -4, -7, 1, 6, -7, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4018b7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dozen', 'lady', 'status', 'cloth']","[7, 1, 6, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dozen', 'lady', 'status', 'cloth']
values = [7, 1, 6, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#738e30')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['agent', 'disk', 'brain', 'oil', 'melody']","[3, 7, 1, 4, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['agent', 'disk', 'brain', 'oil', 'melody']
values = [3, 7, 1, 4, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#54d4f5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hill', 'spring', 'flux', 'part', 'power']","[6, 8, 4, 2, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hill', 'spring', 'flux', 'part', 'power']
values = [6, 8, 4, 2, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d7dd64')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['planet', 'shock']","[2, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['planet', 'shock']
values = [2, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1a78c1')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['story', 'claim', 'plane']","[8, 8, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['story', 'claim', 'plane']
values = [8, 8, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4033bf')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dark', 'return', 'salary', 'campus', 'injury', 'smoke', 'stream']","[7, 6, 3, 9, 8, 2, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dark', 'return', 'salary', 'campus', 'injury', 'smoke', 'stream']
values = [7, 6, 3, 9, 8, 2, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b1f02b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pipe', 'artery', 'pure', 'beauty', 'foam', 'water', 'bit', 'safety']","[7, 7, 5, 8, 4, 8, 8, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pipe', 'artery', 'pure', 'beauty', 'foam', 'water', 'bit', 'safety']
values = [7, 7, 5, 8, 4, 8, 8, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ed52e4')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['page', 'break', 'grace']","[7, 7, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['page', 'break', 'grace']
values = [7, 7, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7e6bd4')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['water', 'golf']","[2, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['water', 'golf']
values = [2, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#436245')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['file', 'lesson', 'play', 'brass', 'trail']","[7, 8, 9, 9, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['file', 'lesson', 'play', 'brass', 'trail']
values = [7, 8, 9, 9, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b5d5de')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sound', 'series', 'court', 'vacuum', 'farmer', 'faint', 'stroke', 'guy', 'shell']","[1, 4, 4, 1, 4, 9, 3, 3, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sound', 'series', 'court', 'vacuum', 'farmer', 'faint', 'stroke', 'guy', 'shell']
values = [1, 4, 4, 1, 4, 9, 3, 3, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#6a619a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['figure', 'leg', 'bent', 'turn', 'extent']","[2, 8, 7, 3, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['figure', 'leg', 'bent', 'turn', 'extent']
values = [2, 8, 7, 3, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b79c36')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pool', 'focus', 'meal', 'memory', 'wit', 'client']","[2, 1, 7, 6, 7, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pool', 'focus', 'meal', 'memory', 'wit', 'client']
values = [2, 1, 7, 6, 7, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#80ac6c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ward', 'sheet', 'prayer']","[-5, 3, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ward', 'sheet', 'prayer']
values = [-5, 3, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e89840')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['trend', 'mirror', 'side', 'brass', 'meat']","[6, 9, 5, 1, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['trend', 'mirror', 'side', 'brass', 'meat']
values = [6, 9, 5, 1, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a6dbfa')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['movie', 'luck', 'manner']","[4, 6, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['movie', 'luck', 'manner']
values = [4, 6, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#cebd6e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fuel', 'pain']","[3, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fuel', 'pain']
values = [3, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#91324b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cash', 'lobby', 'score', 'crime', 'dream', 'burden', 'autumn']","[20, 60, 80, 10, 90, 40, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cash', 'lobby', 'score', 'crime', 'dream', 'burden', 'autumn']
values = [20, 60, 80, 10, 90, 40, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a46d03')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mail', 'month', 'cloth', 'closet', 'crime']","[8, 8, 8, 6, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mail', 'month', 'cloth', 'closet', 'crime']
values = [8, 8, 8, 6, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#30cad2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['artist', 'cloud', 'score', 'sun', 'degree', 'bride']","[6, 3, 5, 5, 2, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['artist', 'cloud', 'score', 'sun', 'degree', 'bride']
values = [6, 3, 5, 5, 2, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e8aa9b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['agency', 'memory', 'anger']","[9, 7, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['agency', 'memory', 'anger']
values = [9, 7, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#efa7ab')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['movie', 'child', 'load', 'foam']","[6, 8, 1, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['movie', 'child', 'load', 'foam']
values = [6, 8, 1, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#08555f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['diet', 'sitter', 'value']","[5, 6, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['diet', 'sitter', 'value']
values = [5, 6, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8306a3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bent', 'spite', 'voyage', 'ticket']","[90, 50, 30, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bent', 'spite', 'voyage', 'ticket']
values = [90, 50, 30, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3bbcf5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['parade', 'run', 'basket', 'studio', 'effect']","[-3, 8, 9, 8, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['parade', 'run', 'basket', 'studio', 'effect']
values = [-3, 8, 9, 8, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e6e9d6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['combat', 'cheek', 'fall', 'oxygen', 'term', 'savage']","[8, 5, 8, 5, 7, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['combat', 'cheek', 'fall', 'oxygen', 'term', 'savage']
values = [8, 5, 8, 5, 7, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a637c8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fiber', 'pencil']","[20, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fiber', 'pencil']
values = [20, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0c0822')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['vein', 'editor', 'seat', 'value']","[80, 60, 60, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vein', 'editor', 'seat', 'value']
values = [80, 60, 60, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#81bb34')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['brief', 'genius', 'share']","[6, 3, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['brief', 'genius', 'share']
values = [6, 3, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#097f4a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['faith', 'soil', 'front', 'pile']","[5, 6, 1, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['faith', 'soil', 'front', 'pile']
values = [5, 6, 1, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a5dc6b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['need', 'wood', 'space', 'prize', 'cast']","[9, 2, 5, 3, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['need', 'wood', 'space', 'prize', 'cast']
values = [9, 2, 5, 3, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a1aa05')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bath', 'result']","[3, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bath', 'result']
values = [3, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#19a6fe')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stop', 'piano', 'stem', 'bar', 'phone', 'world']","[90, 30, 20, 60, 80, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stop', 'piano', 'stem', 'bar', 'phone', 'world']
values = [90, 30, 20, 60, 80, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#865498')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gun', 'hell']","[7, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gun', 'hell']
values = [7, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#49e659')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pass', 'judge', 'union', 'train', 'crop', 'poem']","[6, 6, 7, 6, 8, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pass', 'judge', 'union', 'train', 'crop', 'poem']
values = [6, 6, 7, 6, 8, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#499f50')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['drift', 'roof', 'coast', 'weight', 'plate', 'trap', 'lap', 'boat', 'graph']","[1, 7, 8, 1, 7, 6, 7, 1, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drift', 'roof', 'coast', 'weight', 'plate', 'trap', 'lap', 'boat', 'graph']
values = [1, 7, 8, 1, 7, 6, 7, 1, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#949acc')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['test', 'wood', 'cold', 'youth']","[4, 1, 4, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['test', 'wood', 'cold', 'youth']
values = [4, 1, 4, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#879749')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['voyage', 'stem', 'circle', 'mind']","[50, 10, 60, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['voyage', 'stem', 'circle', 'mind']
values = [50, 10, 60, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#05eba2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['plate', 'thing', 'chorus', 'fist', 'soul', 'load']","[-4, 3, 8, 5, 5, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['plate', 'thing', 'chorus', 'fist', 'soul', 'load']
values = [-4, 3, 8, 5, 5, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#49d1e8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['liquid', 'number', 'pencil', 'ratio', 'start']","[3, 6, 5, 3, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['liquid', 'number', 'pencil', 'ratio', 'start']
values = [3, 6, 5, 3, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0c59d2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['issue', 'glory', 'fellow']","[20, 10, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['issue', 'glory', 'fellow']
values = [20, 10, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c7a468')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['family', 'chair', 'arm', 'hotel']","[50, 30, 0, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['family', 'chair', 'arm', 'hotel']
values = [50, 30, 0, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f44e07')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['chest', 'mail', 'island', 'milk', 'blue', 'wait', 'sum']","[40, 10, 60, 90, 50, 30, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chest', 'mail', 'island', 'milk', 'blue', 'wait', 'sum']
values = [40, 10, 60, 90, 50, 30, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f50847')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['genius', 'road', 'plant', 'terror', 'horror']","[5, 7, 5, 1, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['genius', 'road', 'plant', 'terror', 'horror']
values = [5, 7, 5, 1, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#851ec8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['edge', 'act', 'coat', 'savage', 'door']","[3, 3, 6, 8, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['edge', 'act', 'coat', 'savage', 'door']
values = [3, 3, 6, 8, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a4c2d0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['night', 'fellow', 'honey', 'pass']","[20, 90, 90, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['night', 'fellow', 'honey', 'pass']
values = [20, 90, 90, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#275048')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gang', 'denial', 'system', 'bath', 'ward', 'actor', 'input']","[10, 60, 30, 70, 70, 80, 90]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gang', 'denial', 'system', 'bath', 'ward', 'actor', 'input']
values = [10, 60, 30, 70, 70, 80, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2b211f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['expert', 'inch', 'mail', 'score', 'debate', 'talk']","[9, 4, 7, 8, 9, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['expert', 'inch', 'mail', 'score', 'debate', 'talk']
values = [9, 4, 7, 8, 9, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b5fe50')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['habit', 'burden', 'stroke', 'axis', 'record']","[10, 70, 80, 60, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['habit', 'burden', 'stroke', 'axis', 'record']
values = [10, 70, 80, 60, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#5b1567')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['right', 'shift', 'track', 'data', 'cabin']","[0, 0, 0, 1, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['right', 'shift', 'track', 'data', 'cabin']
values = [0, 0, 0, 1, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#58ed42')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['minute', 'trial', 'memory', 'drug']","[10, 30, 70, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['minute', 'trial', 'memory', 'drug']
values = [10, 30, 70, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b6d7f1')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pass', 'strip']","[4, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pass', 'strip']
values = [4, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#491e84')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stop', 'flux', 'author']","[4, 7, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stop', 'flux', 'author']
values = [4, 7, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e220d0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['flesh', 'baby', 'memory', 'gang']","[50, 40, 40, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['flesh', 'baby', 'memory', 'gang']
values = [50, 40, 40, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d94bb0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['woman', 'inside', 'noon', 'text', 'gas']","[2, 3, 7, 6, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['woman', 'inside', 'noon', 'text', 'gas']
values = [2, 3, 7, 6, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f5794b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cellar', 'scheme', 'plan']","[1, 6, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cellar', 'scheme', 'plan']
values = [1, 6, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#09125c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pitch', 'burden', 'kind', 'sea', 'lack', 'match', 'wall', 'bank']","[2, 3, 7, 6, 8, 9, 2, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pitch', 'burden', 'kind', 'sea', 'lack', 'match', 'wall', 'bank']
values = [2, 3, 7, 6, 8, 9, 2, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f010cd')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['focus', 'drama', 'remark', 'night', 'pair', 'fluid']","[7, 5, 1, 6, 7, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['focus', 'drama', 'remark', 'night', 'pair', 'fluid']
values = [7, 5, 1, 6, 7, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#66db55')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fruit', 'corps']","[4, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fruit', 'corps']
values = [4, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#24d4cc')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['powder', 'latter', 'drama', 'mold', 'stroke']","[80, 90, 40, 40, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['powder', 'latter', 'drama', 'mold', 'stroke']
values = [80, 90, 40, 40, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#51836e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['basis', 'advice', 'role', 'unity', 'award']","[3, 2, 6, 8, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['basis', 'advice', 'role', 'unity', 'award']
values = [3, 2, 6, 8, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#39f840')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fruit', 'text']","[4, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fruit', 'text']
values = [4, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#657c9f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ladder', 'seat', 'bare', 'bulk', 'speech', 'grass', 'energy', 'stop', 'adult']","[10000000, 10000, 10, 100, 10, 10, 1000000000, 1000000000, 100]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ladder', 'seat', 'bare', 'bulk', 'speech', 'grass', 'energy', 'stop', 'adult']
values = [10000000, 10000, 10, 100, 10, 10, 1000000000, 1000000000, 100]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9f0308')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cannot', 'tie', 'branch', 'east', 'sand']","[6, 9, 3, 4, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cannot', 'tie', 'branch', 'east', 'sand']
values = [6, 9, 3, 4, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#31c0a5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['test', 'client']","[30, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['test', 'client']
values = [30, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#37ce0d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['memory', 'profit']","[2, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['memory', 'profit']
values = [2, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e58e4a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cloth', 'gift', 'guy', 'fuel']","[3, 0, 8, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cloth', 'gift', 'guy', 'fuel']
values = [3, 0, 8, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c63065')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['day', 'income']","[8, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['day', 'income']
values = [8, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d6edb6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['share', 'taste', 'tour', 'sum', 'spread']","[1000000, 100000000, 10000, 1000, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['share', 'taste', 'tour', 'sum', 'spread']
values = [1000000, 100000000, 10000, 1000, 100000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#633e26')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['touch', 'grip', 'pipe', 'breath', 'trust', 'master', 'pilot', 'finger']","[1, 3, 2, 1, 8, 1, 4, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['touch', 'grip', 'pipe', 'breath', 'trust', 'master', 'pilot', 'finger']
values = [1, 3, 2, 1, 8, 1, 4, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#418e3d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mean', 'family', 'shame', 'stage']","[2, 9, 1, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mean', 'family', 'shame', 'stage']
values = [2, 9, 1, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#60d889')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['check', 'trial', 'garden', 'cure', 'voice', 'sight']","[50, 90, 60, 10, 40, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['check', 'trial', 'garden', 'cure', 'voice', 'sight']
values = [50, 90, 60, 10, 40, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#cebd5b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['guilt', 'east', 'peace', 'target']","[0, 30, 80, 30]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['guilt', 'east', 'peace', 'target']
values = [0, 30, 80, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c0f629')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hat', 'look', 'camera', 'era']","[5, 7, 9, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hat', 'look', 'camera', 'era']
values = [5, 7, 9, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#947a26')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fuel', 'summer', 'silver', 'desk', 'model', 'load']","[50, 80, 20, 60, 10, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fuel', 'summer', 'silver', 'desk', 'model', 'load']
values = [50, 80, 20, 60, 10, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#033f4f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['day', 'crash', 'crowd', 'excess']","[6, 5, 8, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['day', 'crash', 'crowd', 'excess']
values = [6, 5, 8, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9d8616')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sale', 'making', 'beef', 'marine', 'club', 'sign', 'porch', 'way']","[8, 7, 6, 8, 1, 6, 8, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sale', 'making', 'beef', 'marine', 'club', 'sign', 'porch', 'way']
values = [8, 7, 6, 8, 1, 6, 8, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e8b597')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['shop', 'powder', 'book', 'notice', 'barn', 'ranch']","[6, 9, 7, 2, 1, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shop', 'powder', 'book', 'notice', 'barn', 'ranch']
values = [6, 9, 7, 2, 1, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c7acfa')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fun', 'pack']","[30, 20]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fun', 'pack']
values = [30, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#db5850')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['merit', 'trail', 'cast']","[3, 7, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['merit', 'trail', 'cast']
values = [3, 7, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#886848')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['reader', 'guide']","[0, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['reader', 'guide']
values = [0, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#034f72')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sport', 'heart', 'campus', 'center', 'mature']","[2, 6, 3, 5, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sport', 'heart', 'campus', 'center', 'mature']
values = [2, 6, 3, 5, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#fe4e66')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['letter', 'prison', 'cure', 'rest', 'drug', 'corn', 'serum']","[50, 90, 40, 40, 70, 70, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['letter', 'prison', 'cure', 'rest', 'drug', 'corn', 'serum']
values = [50, 90, 40, 40, 70, 70, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9e4bcc')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['health', 'stairs', 'patrol']","[1, 1, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['health', 'stairs', 'patrol']
values = [1, 1, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#413a0a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['studio', 'artery', 'tone', 'oxygen', 'row']","[9, 2, 3, 5, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['studio', 'artery', 'tone', 'oxygen', 'row']
values = [9, 2, 3, 5, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c358ac')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bureau', 'hall', 'draft', 'study']","[1, 6, 4, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bureau', 'hall', 'draft', 'study']
values = [1, 6, 4, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#808b97')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['worth', 'text', 'order', 'handle', 'self', 'hole', 'paint']","[3, 3, 4, 9, 3, 3, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['worth', 'text', 'order', 'handle', 'self', 'hole', 'paint']
values = [3, 3, 4, 9, 3, 3, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1f0bf5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['trial', 'corn', 'help']","[7, 2, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['trial', 'corn', 'help']
values = [7, 2, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#dbd434')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['touch', 'speech', 'county']","[5, 7, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['touch', 'speech', 'county']
values = [5, 7, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9cdbfd')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bride', 'valley', 'status', 'mean', 'tale', 'lady', 'cast']","[5, 5, 8, 5, 2, 7, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bride', 'valley', 'status', 'mean', 'tale', 'lady', 'cast']
values = [5, 5, 8, 5, 2, 7, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#443baf')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['law', 'ease', 'sweat', 'credit', 'serum']","[1, 5, 4, 9, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['law', 'ease', 'sweat', 'credit', 'serum']
values = [1, 5, 4, 9, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8ec5dc')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['strike', 'shock', 'search', 'voting']","[7, 3, 4, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['strike', 'shock', 'search', 'voting']
values = [7, 3, 4, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e6ae91')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['aspect', 'crisis', 'result']","[4, -9, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['aspect', 'crisis', 'result']
values = [4, -9, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#102de0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['closet', 'boss', 'leg', 'road']","[20, 90, 40, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['closet', 'boss', 'leg', 'road']
values = [20, 90, 40, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#6fd48a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['host', 'east']","[60, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['host', 'east']
values = [60, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#544e92')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['status', 'murder', 'bass', 'animal', 'camp', 'mess']","[90, 90, 90, 20, 30, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['status', 'murder', 'bass', 'animal', 'camp', 'mess']
values = [90, 90, 90, 20, 30, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b111f9')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cup', 'lobby']","[2, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cup', 'lobby']
values = [2, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#fede53')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['favor', 'test', 'item']","[2, 9, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['favor', 'test', 'item']
values = [2, 9, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#6a0fe1')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['grass', 'phase', 'bottom', 'loan', 'task', 'porch', 'device']","[9, 5, 6, 1, 1, 6, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['grass', 'phase', 'bottom', 'loan', 'task', 'porch', 'device']
values = [9, 5, 6, 1, 1, 6, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#bdb6f6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wine', 'strain', 'shop', 'favor', 'talk']","[90, 20, 30, 80, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wine', 'strain', 'shop', 'favor', 'talk']
values = [90, 20, 30, 80, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#780e5d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['field', 'strain', 'flood', 'beam', 'mirror', 'fall']","[9, 7, 6, 8, 5, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['field', 'strain', 'flood', 'beam', 'mirror', 'fall']
values = [9, 7, 6, 8, 5, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#77ae73')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['belief', 'fact']","[-6, -2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['belief', 'fact']
values = [-6, -2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#578664')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['factor', 'party', 'duty', 'mess', 'kind']","[5, 6, 5, 8, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['factor', 'party', 'duty', 'mess', 'kind']
values = [5, 6, 5, 8, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3c75fa')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['entry', 'sheet', 'regard', 'holder', 'rage']","[4, 4, 3, 3, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['entry', 'sheet', 'regard', 'holder', 'rage']
values = [4, 4, 3, 3, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d77c21')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sister', 'dust', 'power', 'shame', 'taxi', 'rank']","[5, 1, 4, 4, 8, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sister', 'dust', 'power', 'shame', 'taxi', 'rank']
values = [5, 1, 4, 4, 8, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7e61b0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['liquid', 'cell', 'notion', 'fury', 'tool', 'piano']","[8, 9, 6, 8, 4, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['liquid', 'cell', 'notion', 'fury', 'tool', 'piano']
values = [8, 9, 6, 8, 4, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c07b0a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['radar', 'fluid']","[60, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['radar', 'fluid']
values = [60, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#36024f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['coal', 'plan']","[40, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['coal', 'plan']
values = [40, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e036a5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wall', 'desk']","[5, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wall', 'desk']
values = [5, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#294ab2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['denial', 'excess', 'post', 'bureau', 'bit', 'today', 'closet']","[5, 2, 3, 1, 6, 8, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['denial', 'excess', 'post', 'bureau', 'bit', 'today', 'closet']
values = [5, 2, 3, 1, 6, 8, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#67737f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pair', 'folk']","[50, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pair', 'folk']
values = [50, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#648c7f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['health', 'breath', 'stay', 'hunger', 'dollar']","[1, 2, 3, 3, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['health', 'breath', 'stay', 'hunger', 'dollar']
values = [1, 2, 3, 3, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#055ef1')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['vacuum', 'winter', 'part', 'rush', 'lock']","[6, 7, 4, 7, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vacuum', 'winter', 'part', 'rush', 'lock']
values = [6, 7, 4, 7, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4bb5d9')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sitter', 'mouth', 'hurry', 'bench', 'report']","[40, 30, 80, 80, 20]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sitter', 'mouth', 'hurry', 'bench', 'report']
values = [40, 30, 80, 80, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ffa076')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hole', 'center', 'essay', 'salary', 'taxi', 'seat']","[5, 1, 3, 8, 5, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hole', 'center', 'essay', 'salary', 'taxi', 'seat']
values = [5, 1, 3, 8, 5, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0adabd')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lumber', 'cover', 'boss']","[8, 8, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lumber', 'cover', 'boss']
values = [8, 8, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#59b2f4')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['desk', 'reason', 'square', 'powder', 'ease']","[80, 20, 90, 50, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['desk', 'reason', 'square', 'powder', 'ease']
values = [80, 20, 90, 50, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7d0d35')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['coal', 'plan', 'parlor', 'horror', 'stone', 'laugh']","[9, 3, 7, 3, 6, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['coal', 'plan', 'parlor', 'horror', 'stone', 'laugh']
values = [9, 3, 7, 3, 6, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c34c49')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pass', 'reason', 'worth']","[1, 6, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pass', 'reason', 'worth']
values = [1, 6, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e51e1f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['chorus', 'regime', 'dress']","[10, 10000, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chorus', 'regime', 'dress']
values = [10, 10000, 100000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b429e3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['angle', 'county', 'stuff', 'answer', 'blonde', 'hand', 'strip', 'force']","[3, 4, 9, 3, 1, 6, 2, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['angle', 'county', 'stuff', 'answer', 'blonde', 'hand', 'strip', 'force']
values = [3, 4, 9, 3, 1, 6, 2, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e5312a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['role', 'credit', 'attack', 'cry', 'axis', 'bare', 'room']","[40, 10, 40, 70, 50, 10, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['role', 'credit', 'attack', 'cry', 'axis', 'bare', 'room']
values = [40, 10, 40, 70, 50, 10, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ec6045')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['leader', 'root', 'detail', 'ratio', 'score', 'jacket', 'combat']","[9, 7, 8, 9, 8, 5, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['leader', 'root', 'detail', 'ratio', 'score', 'jacket', 'combat']
values = [9, 7, 8, 9, 8, 5, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0a0db8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hero', 'past', 'means', 'group', 'yield', 'chest']","[1, 2, 3, 1, 3, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hero', 'past', 'means', 'group', 'yield', 'chest']
values = [1, 2, 3, 1, 3, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4729cc')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['essay', 'game', 'canvas', 'report', 'grant', 'grave', 'male']","[3, 7, 8, 1, 9, 3, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['essay', 'game', 'canvas', 'report', 'grant', 'grave', 'male']
values = [3, 7, 8, 1, 9, 3, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#de3860')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['seat', 'lay', 'square', 'sport', 'flight', 'thick']","[6, 8, 9, 8, 6, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['seat', 'lay', 'square', 'sport', 'flight', 'thick']
values = [6, 8, 9, 8, 6, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8fe8a8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['neck', 'month', 'brick']","[8, 9, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['neck', 'month', 'brick']
values = [8, 9, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0ea48c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['beer', 'suit', 'guilt', 'jar', 'hell', 'south']","[4, 1, 9, 9, 9, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['beer', 'suit', 'guilt', 'jar', 'hell', 'south']
values = [4, 1, 9, 9, 9, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f9ae41')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['adult', 'game', 'cloth', 'fault', 'detail', 'move', 'glance', 'neck']","[7, -9, 4, 6, 1, 2, -9, -7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['adult', 'game', 'cloth', 'fault', 'detail', 'move', 'glance', 'neck']
values = [7, -9, 4, 6, 1, 2, -9, -7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#964af5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['profit', 'show']","[8, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['profit', 'show']
values = [8, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4bdef2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['injury', 'circle', 'round', 'train']","[4, 6, 2, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['injury', 'circle', 'round', 'train']
values = [4, 6, 2, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7ec338')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['window', 'opera', 'aspect', 'cancer', 'love', 'name', 'legend', 'talk']","[7, 8, 9, 7, 2, 6, 5, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['window', 'opera', 'aspect', 'cancer', 'love', 'name', 'legend', 'talk']
values = [7, 8, 9, 7, 2, 6, 5, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2ec638')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gold', 'bit', 'sleep', 'weapon', 'target', 'back', 'spirit', 'joke', 'bed']","[3, 7, 9, 0, 1, 8, 7, 1, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gold', 'bit', 'sleep', 'weapon', 'target', 'back', 'spirit', 'joke', 'bed']
values = [3, 7, 9, 0, 1, 8, 7, 1, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b8c500')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['plane', 'source', 'effort', 'march', 'coast', 'actor']","[80, 50, 60, 10, 20, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['plane', 'source', 'effort', 'march', 'coast', 'actor']
values = [80, 50, 60, 10, 20, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d4fa02')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['expert', 'tape', 'wage', 'seat', 'guilt', 'graph']","[8, 3, 1, 3, 2, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['expert', 'tape', 'wage', 'seat', 'guilt', 'graph']
values = [8, 3, 1, 3, 2, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2389f3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['middle', 'frame', 'flux']","[4, 6, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['middle', 'frame', 'flux']
values = [4, 6, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#bc6418')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['act', 'saline', 'axis', 'room']","[40, 30, 10, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['act', 'saline', 'axis', 'room']
values = [40, 30, 10, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#401660')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['heart', 'check', 'light']","[9, 3, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['heart', 'check', 'light']
values = [9, 3, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a1838b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['list', 'couple', 'pistol', 'hole', 'lobby', 'jet']","[2, 8, 4, 1, 8, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['list', 'couple', 'pistol', 'hole', 'lobby', 'jet']
values = [2, 8, 4, 1, 8, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#cbac10')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['extent', 'doubt', 'beam', 'inside', 'time']","[8, -4, 1, -1, -3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['extent', 'doubt', 'beam', 'inside', 'time']
values = [8, -4, 1, -1, -3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#fdcf89')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['museum', 'rain', 'shore']","[30, 80, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['museum', 'rain', 'shore']
values = [30, 80, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#426f64')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['comedy', 'land']","[7, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['comedy', 'land']
values = [7, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#475c4a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hold', 'food', 'index', 'serum']","[3, 5, 9, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hold', 'food', 'index', 'serum']
values = [3, 5, 9, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#cc4571')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bread', 'sorry', 'strip', 'limit', 'garden']","[4, 7, 3, -3, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bread', 'sorry', 'strip', 'limit', 'garden']
values = [4, 7, 3, -3, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0f45c0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['canvas', 'cross', 'dark', 'foil', 'glass', 'wash']","[10000, 10000000, 1000000000, 100000000, 10000000, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['canvas', 'cross', 'dark', 'foil', 'glass', 'wash']
values = [10000, 10000000, 1000000000, 100000000, 10000000, 100000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#228a8c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['vice', 'site', 'bath', 'fog', 'figure', 'faith', 'bride', 'rail']","[4, 1, 9, 4, 5, 6, 6, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vice', 'site', 'bath', 'fog', 'figure', 'faith', 'bride', 'rail']
values = [4, 1, 9, 4, 5, 6, 6, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1f32a1')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dive', 'desk', 'ship', 'supply', 'supper']","[7, 9, 0, 4, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dive', 'desk', 'ship', 'supply', 'supper']
values = [7, 9, 0, 4, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#bc8a62')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['future', 'jet', 'strike', 'world', 'blonde', 'harbor', 'pencil']","[50, 90, 90, 80, 40, 90, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['future', 'jet', 'strike', 'world', 'blonde', 'harbor', 'pencil']
values = [50, 90, 90, 80, 40, 90, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#545ec3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['muscle', 'growth', 'letter', 'output', 'hair']","[30, 20, 70, 40, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['muscle', 'growth', 'letter', 'output', 'hair']
values = [30, 20, 70, 40, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3c5e8a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['myth', 'sugar', 'data']","[60, 90, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['myth', 'sugar', 'data']
values = [60, 90, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#70bfe3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['corner', 'hour', 'wall', 'wind', 'bread']","[1, 4, 2, 4, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['corner', 'hour', 'wall', 'wind', 'bread']
values = [1, 4, 2, 4, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2d1968')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['story', 'serum', 'while']","[10, 80, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['story', 'serum', 'while']
values = [10, 80, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e1f00c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['trend', 'tent']","[1, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['trend', 'tent']
values = [1, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1ff02e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['person', 'hunger', 'form']","[6, 6, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['person', 'hunger', 'form']
values = [6, 6, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a73f6f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['power', 'public', 'pot']","[1, 1, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['power', 'public', 'pot']
values = [1, 1, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a42ac2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['horror', 'legs', 'baby']","[2, 1, 0]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['horror', 'legs', 'baby']
values = [2, 1, 0]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e5ad9a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pound', 'call', 'city']","[3, 2, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pound', 'call', 'city']
values = [3, 2, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3dfb86')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pitch', 'figure', 'valley', 'route', 'cotton']","[4, 3, 3, 3, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pitch', 'figure', 'valley', 'route', 'cotton']
values = [4, 3, 3, 3, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f05215')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tail', 'force', 'pack', 'shell']","[9, 3, 4, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tail', 'force', 'pack', 'shell']
values = [9, 3, 4, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#39ce41')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['shot', 'town', 'island']","[7, -2, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shot', 'town', 'island']
values = [7, -2, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#dfa54e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['firm', 'combat', 'wealth']","[9, 6, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['firm', 'combat', 'wealth']
values = [9, 6, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#96c918')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['movie', 'vice', 'style']","[1, 8, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['movie', 'vice', 'style']
values = [1, 8, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e072e8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tip', 'scope', 'trust', 'hurry', 'iron', 'means']","[9, 6, 1, 1, 2, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tip', 'scope', 'trust', 'hurry', 'iron', 'means']
values = [9, 6, 1, 1, 2, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b64166')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['source', 'queen', 'anode', 'yard', 'truth']","[1, 3, 5, 5, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['source', 'queen', 'anode', 'yard', 'truth']
values = [1, 3, 5, 5, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b3b3f2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['volume', 'study', 'lamp', 'place', 'engine', 'war', 'suit', 'stake', 'life']","[9, 6, 5, 7, 6, 5, 4, 2, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['volume', 'study', 'lamp', 'place', 'engine', 'war', 'suit', 'stake', 'life']
values = [9, 6, 5, 7, 6, 5, 4, 2, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#cc0b06')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['kid', 'beer', 'joke', 'demand']","[6, 9, 6, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['kid', 'beer', 'joke', 'demand']
values = [6, 9, 6, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f84f4a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['danger', 'pure', 'chorus', 'aspect']","[7, 1, 7, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['danger', 'pure', 'chorus', 'aspect']
values = [7, 1, 7, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d2d2d6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['length', 'artery', 'wound']","[2, 8, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['length', 'artery', 'wound']
values = [2, 8, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#92fe3f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ride', 'west', 'study', 'coffee']","[9, 6, 9, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ride', 'west', 'study', 'coffee']
values = [9, 6, 9, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#013388')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cat', 'vector']","[4, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cat', 'vector']
values = [4, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7f9123')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rain', 'park', 'club']","[7, 2, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rain', 'park', 'club']
values = [7, 2, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9c6585')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pipe', 'roll', 'dust', 'power', 'tube', 'cup']","[2, 1, 7, 7, 8, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pipe', 'roll', 'dust', 'power', 'tube', 'cup']
values = [2, 1, 7, 7, 8, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#42f05c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['profit', 'past', 'driver']","[1, 7, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['profit', 'past', 'driver']
values = [1, 7, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ceb8a0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['state', 'point', 'pile', 'ease']","[5, 7, 7, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['state', 'point', 'pile', 'ease']
values = [5, 7, 7, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#84666d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['drunk', 'night', 'tissue', 'sight', 'pause', 'dress', 'foil']","[6, 5, 2, 7, 9, 2, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drunk', 'night', 'tissue', 'sight', 'pause', 'dress', 'foil']
values = [6, 5, 2, 7, 9, 2, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#11c668')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sport', 'policy']","[70, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sport', 'policy']
values = [70, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#de6086')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ranch', 'whisky', 'hole', 'vice', 'hell', 'saline']","[5, 9, 7, 2, 1, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ranch', 'whisky', 'hole', 'vice', 'hell', 'saline']
values = [5, 9, 7, 2, 1, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d27329')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['frame', 'return', 'notion', 'sound', 'regime']","[2, 8, 7, 4, 0]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['frame', 'return', 'notion', 'sound', 'regime']
values = [2, 8, 7, 4, 0]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#5f502a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sort', 'core', 'fee', 'lap']","[9, 7, 8, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sort', 'core', 'fee', 'lap']
values = [9, 7, 8, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#74bf0d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['aid', 'root', 'mouth']","[1, 9, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['aid', 'root', 'mouth']
values = [1, 9, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f53ce4')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['night', 'screen']","[9, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['night', 'screen']
values = [9, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f325b6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['arc', 'canvas']","[8, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['arc', 'canvas']
values = [8, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#36a3be')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['get', 'system', 'pool', 'sand', 'bread', 'mine', 'craft', 'player']","[3, 9, 8, 8, 6, 7, 4, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['get', 'system', 'pool', 'sand', 'bread', 'mine', 'craft', 'player']
values = [3, 9, 8, 8, 6, 7, 4, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e49508')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['work', 'heart', 'carbon', 'stone']","[20, 40, 60, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['work', 'heart', 'carbon', 'stone']
values = [20, 40, 60, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#729416')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['chip', 'field', 'chair', 'fate', 'ball', 'sign', 'sir']","[2, 4, 9, 8, 6, -5, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chip', 'field', 'chair', 'fate', 'ball', 'sign', 'sir']
values = [2, 4, 9, 8, 6, -5, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c23413')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['making', 'nation', 'mean', 'autumn', 'action']","[3, 5, 1, 9, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['making', 'nation', 'mean', 'autumn', 'action']
values = [3, 5, 1, 9, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ad2e01')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['goal', 'mature', 'sun']","[3, 1, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['goal', 'mature', 'sun']
values = [3, 1, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#6ee4cd')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['garage', 'tray', 'event']","[40, 40, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['garage', 'tray', 'event']
values = [40, 40, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#20bc5f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gas', 'trade', 'metal', 'nose', 'grade', 'dirt']","[20, 40, 90, 30, 60, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gas', 'trade', 'metal', 'nose', 'grade', 'dirt']
values = [20, 40, 90, 30, 60, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#dd02de')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['drug', 'woman', 'window']","[20, 80, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drug', 'woman', 'window']
values = [20, 80, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#92fed3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['grass', 'mean', 'queen', 'back', 'making', 'hold', 'essay']","[8, 1, 2, 3, 5, 1, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['grass', 'mean', 'queen', 'back', 'making', 'hold', 'essay']
values = [8, 1, 2, 3, 5, 1, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8f0d09')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rise', 'left']","[1, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rise', 'left']
values = [1, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4beb9f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['spread', 'hair', 'train']","[9, 5, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['spread', 'hair', 'train']
values = [9, 5, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#82c57d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cent', 'lack', 'bridge', 'train']","[9, 2, 8, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cent', 'lack', 'bridge', 'train']
values = [9, 2, 8, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3f325c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['work', 'cure', 'barrel', 'crew', 'ball', 'bass', 'gay', 'smoke']","[1, 8, 9, 9, 3, 9, 5, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['work', 'cure', 'barrel', 'crew', 'ball', 'bass', 'gay', 'smoke']
values = [1, 8, 9, 9, 3, 9, 5, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#6115e8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['powder', 'line', 'bullet']","[8, 1, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['powder', 'line', 'bullet']
values = [8, 1, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#6998fc')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['entry', 'savage', 'center', 'staff', 'author', 'thick', 'paper']","[2, 9, 6, 3, 5, 2, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['entry', 'savage', 'center', 'staff', 'author', 'thick', 'paper']
values = [2, 9, 6, 3, 5, 2, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#80df33')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['trust', 'fog', 'course']","[6, 8, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['trust', 'fog', 'course']
values = [6, 8, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2f34fd')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gift', 'favor', 'editor', 'body', 'dirt', 'table', 'atom', 'sight', 'gown']","[1, 7, 6, 9, 3, 1, 6, 4, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gift', 'favor', 'editor', 'body', 'dirt', 'table', 'atom', 'sight', 'gown']
values = [1, 7, 6, 9, 3, 1, 6, 4, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2e296d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['way', 'method', 'town', 'strike', 'temple', 'pack', 'ring']","[7, 3, 6, 2, 7, 2, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['way', 'method', 'town', 'strike', 'temple', 'pack', 'ring']
values = [7, 3, 6, 2, 7, 2, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#70758a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['none', 'lay', 'night', 'feel', 'choice', 'name', 'relief', 'card']","[50, 40, 30, 70, 60, 60, 0, 0]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['none', 'lay', 'night', 'feel', 'choice', 'name', 'relief', 'card']
values = [50, 40, 30, 70, 60, 60, 0, 0]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8aadcb')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sphere', 'desire', 'county', 'affair']","[50, 10, 60, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sphere', 'desire', 'county', 'affair']
values = [50, 10, 60, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1ebb33')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['drug', 'skin', 'step', 'realm', 'well', 'desk']","[2, 9, 7, 6, 7, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drug', 'skin', 'step', 'realm', 'well', 'desk']
values = [2, 9, 7, 6, 7, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b7133a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wage', 'muscle', 'copy', 'fiber', 'regard', 'brand', 'oil', 'core']","[80, 70, 90, 70, 60, 90, 70, 20]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wage', 'muscle', 'copy', 'fiber', 'regard', 'brand', 'oil', 'core']
values = [80, 70, 90, 70, 60, 90, 70, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f9993a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['taxi', 'head', 'cereal', 'grave', 'safety', 'sex', 'news']","[8, 8, 4, 1, 1, 4, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['taxi', 'head', 'cereal', 'grave', 'safety', 'sex', 'news']
values = [8, 8, 4, 1, 1, 4, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b94e9f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['list', 'data', 'ball', 'way', 'vertex', 'serum', 'burden']","[80, 60, 20, 20, 60, 80, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['list', 'data', 'ball', 'way', 'vertex', 'serum', 'burden']
values = [80, 60, 20, 20, 60, 80, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#bc1e6e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wash', 'heart', 'army', 'whole', 'twelve']","[80, 50, 70, 10, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wash', 'heart', 'army', 'whole', 'twelve']
values = [80, 50, 70, 10, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ce4c17')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['boss', 'soil', 'branch']","[90, 60, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['boss', 'soil', 'branch']
values = [90, 60, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1b183a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['metal', 'camera']","[4, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['metal', 'camera']
values = [4, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#310387')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sand', 'tale', 'branch', 'forest', 'mood', 'street', 'jacket', 'strip']","[70, 70, 10, 80, 40, 60, 90, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sand', 'tale', 'branch', 'forest', 'mood', 'street', 'jacket', 'strip']
values = [70, 70, 10, 80, 40, 60, 90, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#057b66')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['excuse', 'evil', 'fence', 'noise', 'stem', 'deal', 'chest', 'budget']","[10, 80, 60, 20, 40, 70, 60, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['excuse', 'evil', 'fence', 'noise', 'stem', 'deal', 'chest', 'budget']
values = [10, 80, 60, 20, 40, 70, 60, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#90c516')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['farm', 'dollar', 'metal', 'flight', 'fly', 'cup']","[90, 50, 90, 50, 30, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['farm', 'dollar', 'metal', 'flight', 'fly', 'cup']
values = [90, 50, 90, 50, 30, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#cfa60b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lap', 'vision', 'root']","[30, 80, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lap', 'vision', 'root']
values = [30, 80, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#5aad05')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tent', 'child', 'talent']","[0, 0, 0]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tent', 'child', 'talent']
values = [0, 0, 0]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0bf76e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['entry', 'drama', 'hill', 'dark']","[20, 60, 30, 30]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['entry', 'drama', 'hill', 'dark']
values = [20, 60, 30, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#47e040')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sky', 'care', 'fiber', 'chorus', 'talk', 'speech']","[9, 3, 7, 7, 4, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sky', 'care', 'fiber', 'chorus', 'talk', 'speech']
values = [9, 3, 7, 7, 4, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#da3d48')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['warmth', 'knee', 'truth', 'corn']","[9, 1, 5, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['warmth', 'knee', 'truth', 'corn']
values = [9, 1, 5, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ea8ea1')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['making', 'flow', 'tone', 'speech']","[50, 20, 10, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['making', 'flow', 'tone', 'speech']
values = [50, 20, 10, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0bdeba')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['face', 'vision', 'beam', 'bench', 'soap']","[-7, -9, 4, 2, -6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['face', 'vision', 'beam', 'bench', 'soap']
values = [-7, -9, 4, 2, -6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1c787f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sheet', 'dress', 'bank', 'edge', 'soil', 'virtue']","[8, 4, 2, 5, 7, -4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sheet', 'dress', 'bank', 'edge', 'soil', 'virtue']
values = [8, 4, 2, 5, 7, -4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d901e2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bench', 'vice', 'fit']","[-7, 9, -7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bench', 'vice', 'fit']
values = [-7, 9, -7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d4dfcb')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['woman', 'fall', 'ratio']","[60, 30, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['woman', 'fall', 'ratio']
values = [60, 30, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7773a9')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['range', 'stage', 'union', 'bowl']","[9, 6, 7, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['range', 'stage', 'union', 'bowl']
values = [9, 6, 7, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#171810')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['file', 'land']","[1000000, 10000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['file', 'land']
values = [1000000, 10000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e991f1')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gay', 'crisis', 'stick', 'wise', 'latter', 'birth', 'set']","[80, 40, 40, 40, 20, 40, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gay', 'crisis', 'stick', 'wise', 'latter', 'birth', 'set']
values = [80, 40, 40, 40, 20, 40, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3130b9')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['book', 'plant', 'clock', 'left', 'style']","[60, 80, 70, 90, 30]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['book', 'plant', 'clock', 'left', 'style']
values = [60, 80, 70, 90, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2a7fb6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['choice', 'axis', 'relief', 'farm']","[7, -9, -1, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['choice', 'axis', 'relief', 'farm']
values = [7, -9, -1, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#569597')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bench', 'notice', 'base', 'break', 'time']","[7, 1, 4, 9, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bench', 'notice', 'base', 'break', 'time']
values = [7, 1, 4, 9, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#606522')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['plant', 'flow', 'medium', 'man', 'evil', 'dog']","[40, 10, 60, 70, 60, 90]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['plant', 'flow', 'medium', 'man', 'evil', 'dog']
values = [40, 10, 60, 70, 60, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8e490b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['verse', 'ideal', 'sun', 'jacket', 'crisis', 'stem', 'angle', 'wind', 'switch']","[2, 9, 9, 6, 7, 5, 2, 4, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['verse', 'ideal', 'sun', 'jacket', 'crisis', 'stem', 'angle', 'wind', 'switch']
values = [2, 9, 9, 6, 7, 5, 2, 4, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#109cfc')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['motion', 'lack', 'lead', 'player', 'deck', 'joy']","[4, 7, 6, 8, 9, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['motion', 'lack', 'lead', 'player', 'deck', 'joy']
values = [4, 7, 6, 8, 9, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#15d276')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gift', 'bare', 'nation', 'south', 'office', 'vice', 'ocean']","[3, 9, 8, 5, 8, 9, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gift', 'bare', 'nation', 'south', 'office', 'vice', 'ocean']
values = [3, 9, 8, 5, 8, 9, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4dd161')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['vein', 'rest', 'lamp', 'fire', 'suit']","[1, 4, 7, 1, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vein', 'rest', 'lamp', 'fire', 'suit']
values = [1, 4, 7, 1, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c58c21')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['origin', 'iodine']","[4, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['origin', 'iodine']
values = [4, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#043a66')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hold', 'blue', 'murder']","[1, 1, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hold', 'blue', 'murder']
values = [1, 1, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d4d107')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['safety', 'feel', 'clock']","[90, 90, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['safety', 'feel', 'clock']
values = [90, 90, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8b1811')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['corps', 'salt', 'route', 'rail']","[5, 3, 1, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['corps', 'salt', 'route', 'rail']
values = [5, 3, 1, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#44f8bf')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cat', 'luxury', 'rhythm', 'fiber']","[0, 2, -5, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cat', 'luxury', 'rhythm', 'fiber']
values = [0, 2, -5, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#657320')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['luck', 'terror', 'amount', 'bomb', 'sex']","[9, 3, 1, 8, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['luck', 'terror', 'amount', 'bomb', 'sex']
values = [9, 3, 1, 8, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b11682')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lady', 'museum', 'file']","[10, 50, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lady', 'museum', 'file']
values = [10, 50, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#fdb76f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['date', 'minute', 'garden', 'writer', 'flux', 'golf', 'kid', 'shop', 'figure']","[9, 5, 6, 2, 9, 1, 6, -1, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['date', 'minute', 'garden', 'writer', 'flux', 'golf', 'kid', 'shop', 'figure']
values = [9, 5, 6, 2, 9, 1, 6, -1, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9eb4bc')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sitter', 'seed', 'gang', 'shot', 'role', 'farmer']","[9, 4, 9, 8, 2, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sitter', 'seed', 'gang', 'shot', 'role', 'farmer']
values = [9, 4, 9, 8, 2, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#bf1aa6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rain', 'rice']","[5, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rain', 'rice']
values = [5, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#172e15')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['shape', 'waste', 'crop', 'sin', 'get', 'handle', 'rest', 'league', 'skin']","[8, 6, 2, 7, 1, 5, 1, 8, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shape', 'waste', 'crop', 'sin', 'get', 'handle', 'rest', 'league', 'skin']
values = [8, 6, 2, 7, 1, 5, 1, 8, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#91c028')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['boat', 'bare', 'pond', 'thirty', 'data', 'boy']","[60, 10, 50, 50, 60, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['boat', 'bare', 'pond', 'thirty', 'data', 'boy']
values = [60, 10, 50, 50, 60, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#bc66b3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['copy', 'army', 'advice']","[1, 2, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['copy', 'army', 'advice']
values = [1, 2, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#143c71')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['heard', 'cotton', 'friend', 'carbon', 'bar', 'book', 'hell']","[7, 3, 3, 5, 9, 5, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['heard', 'cotton', 'friend', 'carbon', 'bar', 'book', 'hell']
values = [7, 3, 3, 5, 9, 5, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#259053')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['aspect', 'smell', 'gate', 'sir', 'road']","[60, 80, 90, 80, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['aspect', 'smell', 'gate', 'sir', 'road']
values = [60, 80, 90, 80, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a1deaa')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['jazz', 'safety', 'post', 'book']","[2, 9, 7, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['jazz', 'safety', 'post', 'book']
values = [2, 9, 7, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d2d56f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['whole', 'signal', 'load']","[7, 6, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['whole', 'signal', 'load']
values = [7, 6, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#fa9672')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['book', 'cost', 'bag', 'hold', 'author', 'glass']","[2, 0, 3, 9, 8, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['book', 'cost', 'bag', 'hold', 'author', 'glass']
values = [2, 0, 3, 9, 8, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0ba050')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['point', 'paper']","[4, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['point', 'paper']
values = [4, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#02d035')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['head', 'dance', 'hotel']","[40, 50, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['head', 'dance', 'hotel']
values = [40, 50, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e661fc')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['coat', 'gain', 'dealer', 'cry']","[20, 30, 50, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['coat', 'gain', 'dealer', 'cry']
values = [20, 30, 50, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2c5c84')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['player', 'flavor', 'brush', 'brief']","[40, 30, 90, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['player', 'flavor', 'brush', 'brief']
values = [40, 30, 90, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4f29e5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['relief', 'youth', 'life', 'earth', 'host', 'course', 'pistol', 'title']","[1, 3, 5, 7, 3, 5, 3, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['relief', 'youth', 'life', 'earth', 'host', 'course', 'pistol', 'title']
values = [1, 3, 5, 7, 3, 5, 3, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#09d502')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['growth', 'dance', 'bomb']","[4, 1, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['growth', 'dance', 'bomb']
values = [4, 1, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7d4b66')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['matter', 'south']","[3, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['matter', 'south']
values = [3, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e3be19')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['belt', 'wife', 'bullet', 'client', 'effect', 'train', 'bent']","[8, 6, 1, 2, 8, 2, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['belt', 'wife', 'bullet', 'client', 'effect', 'train', 'bent']
values = [8, 6, 1, 2, 8, 2, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#49f2b5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cool', 'mud']","[4, 0]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cool', 'mud']
values = [4, 0]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3e2bb3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['scheme', 'campus', 'advice', 'lack']","[30, 40, 80, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['scheme', 'campus', 'advice', 'lack']
values = [30, 40, 80, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a43baa')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gay', 'disk', 'type']","[20, 30, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gay', 'disk', 'type']
values = [20, 30, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9904f7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['roof', 'origin', 'input', 'oxygen', 'leg', 'decade', 'fence', 'piano']","[6, 9, 3, 7, 9, 2, 7, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['roof', 'origin', 'input', 'oxygen', 'leg', 'decade', 'fence', 'piano']
values = [6, 9, 3, 7, 9, 2, 7, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a2fe81')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['music', 'fish', 'nobody', 'diet', 'wall', 'vacuum']","[10, 70, 50, 30, 30, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['music', 'fish', 'nobody', 'diet', 'wall', 'vacuum']
values = [10, 70, 50, 30, 30, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#03d784')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bond', 'chair', 'ticket', 'copy', 'knee']","[7, 8, 2, 9, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bond', 'chair', 'ticket', 'copy', 'knee']
values = [7, 8, 2, 9, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2ad89f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['twelve', 'disk', 'hell', 'oxygen', 'guest', 'volume']","[9, 4, 6, 7, 6, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['twelve', 'disk', 'hell', 'oxygen', 'guest', 'volume']
values = [9, 4, 6, 7, 6, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#78c223')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['blind', 'right', 'rear', 'staff', 'law', 'tail', 'arm', 'order', 'grant']","[6, 3, 5, 3, 6, 3, 8, 7, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['blind', 'right', 'rear', 'staff', 'law', 'tail', 'arm', 'order', 'grant']
values = [6, 3, 5, 3, 6, 3, 8, 7, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4e61b9')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['clouds', 'reach', 'milk', 'means']","[80, 20, 20, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['clouds', 'reach', 'milk', 'means']
values = [80, 20, 20, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#86cad3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['outfit', 'worry', 'curve', 'change']","[100000, 1000, 1000, 10000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['outfit', 'worry', 'curve', 'change']
values = [100000, 1000, 1000, 10000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8a918f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['scale', 'week', 'detail', 'comedy', 'relief', 'rail', 'shade', 'hat', 'arc']","[5, -1, 7, 2, 9, 3, -3, 6, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['scale', 'week', 'detail', 'comedy', 'relief', 'rail', 'shade', 'hat', 'arc']
values = [5, -1, 7, 2, 9, 3, -3, 6, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#22e7d7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['boss', 'idea', 'denial', 'result', 'cap']","[1000000000, 10, 10000000, 10000000, 1000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['boss', 'idea', 'denial', 'result', 'cap']
values = [1000000000, 10, 10000000, 10000000, 1000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1f2dd0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['clock', 'dawn']","[40, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['clock', 'dawn']
values = [40, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#09acee')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hope', 'stress', 'issue', 'reform', 'bus', 'dining', 'draft', 'charm']","[8, 3, 6, 5, 1, 5, 1, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hope', 'stress', 'issue', 'reform', 'bus', 'dining', 'draft', 'charm']
values = [8, 3, 6, 5, 1, 5, 1, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9e9f5c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pot', 'liquor', 'wonder', 'action', 'oxygen']","[100, 10, 1000, 10000000, 10000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pot', 'liquor', 'wonder', 'action', 'oxygen']
values = [100, 10, 1000, 10000000, 10000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4c2c6c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['event', 'gain', 'center', 'amount', 'stuff']","[80, 50, 90, 40, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['event', 'gain', 'center', 'amount', 'stuff']
values = [80, 50, 90, 40, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#daea3c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bundle', 'shift']","[1000000000, 1000000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bundle', 'shift']
values = [1000000000, 1000000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#eb628a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['play', 'input', 'taxi', 'travel', 'smoke', 'laugh']","[90, 50, 70, 30, 30, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['play', 'input', 'taxi', 'travel', 'smoke', 'laugh']
values = [90, 50, 70, 30, 30, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9753fb')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['agency', 'west', 'fog', 'wash', 'saline', 'stem']","[90, 50, 70, 50, 50, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['agency', 'west', 'fog', 'wash', 'saline', 'stem']
values = [90, 50, 70, 50, 50, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#6b0bba')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['group', 'get', 'teeth', 'mile']","[10, 30, 10, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['group', 'get', 'teeth', 'mile']
values = [10, 30, 10, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#de5a11')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wheel', 'time', 'coast', 'patrol', 'ground']","[50, 90, 30, 10, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wheel', 'time', 'coast', 'patrol', 'ground']
values = [50, 90, 30, 10, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e261cd')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['youth', 'actor', 'bone', 'door', 'box', 'school', 'sound']","[7, 1, 3, 2, 9, 3, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['youth', 'actor', 'bone', 'door', 'box', 'school', 'sound']
values = [7, 1, 3, 2, 9, 3, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ea3953')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['reason', 'pool', 'plant', 'roof', 'gold', 'battle', 'wage']","[-6, 2, 2, 6, 5, 2, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['reason', 'pool', 'plant', 'roof', 'gold', 'battle', 'wage']
values = [-6, 2, 2, 6, 5, 2, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#cdba48')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['porch', 'suite']","[90, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['porch', 'suite']
values = [90, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#bfad37')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['result', 'sorry', 'proof', 'path']","[40, 40, 70, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['result', 'sorry', 'proof', 'path']
values = [40, 40, 70, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b0e6e5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stage', 'lay', 'vacuum', 'uncle', 'bulk']","[20, 10, 40, 40, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stage', 'lay', 'vacuum', 'uncle', 'bulk']
values = [20, 10, 40, 40, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1f154b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['skin', 'town', 'window', 'canvas', 'cap', 'stage', 'fog', 'liquor', 'adult']","[6, 5, 7, 7, 8, 3, 4, 1, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['skin', 'town', 'window', 'canvas', 'cap', 'stage', 'fog', 'liquor', 'adult']
values = [6, 5, 7, 7, 8, 3, 4, 1, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b59840')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['vacuum', 'honor', 'forth', 'source', 'stairs', 'crew', 'beard', 'carbon', 'canvas']","[4, 3, 1, 5, 3, 3, 2, 3, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vacuum', 'honor', 'forth', 'source', 'stairs', 'crew', 'beard', 'carbon', 'canvas']
values = [4, 3, 1, 5, 3, 3, 2, 3, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2ee2e0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['noise', 'plain', 'fee', 'care', 'life', 'lock', 'ocean']","[6, 8, 1, 5, 8, 6, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['noise', 'plain', 'fee', 'care', 'life', 'lock', 'ocean']
values = [6, 8, 1, 5, 8, 6, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#6f8311')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ideal', 'woman', 'design', 'sky']","[5, 5, 9, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ideal', 'woman', 'design', 'sky']
values = [5, 5, 9, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#69794e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['author', 'cover', 'dust']","[1, 9, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['author', 'cover', 'dust']
values = [1, 9, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1aec59')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['basket', 'winter', 'food', 'metal', 'living']","[20, 20, 10, 20, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['basket', 'winter', 'food', 'metal', 'living']
values = [20, 20, 10, 20, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7454ee')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['group', 'fund', 'leader', 'panic', 'sister', 'shame']","[30, 40, 20, 10, 80, 30]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['group', 'fund', 'leader', 'panic', 'sister', 'shame']
values = [30, 40, 20, 10, 80, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#53d1cb')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ward', 'mine', 'play', 'cast']","[70, 60, 20, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ward', 'mine', 'play', 'cast']
values = [70, 60, 20, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d6aa58')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['travel', 'fish', 'breath', 'inside', 'bare', 'firm', 'unit']","[1, 4, 9, 8, 2, 1, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['travel', 'fish', 'breath', 'inside', 'bare', 'firm', 'unit']
values = [1, 4, 9, 8, 2, 1, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#20be5f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cloth', 'chance']","[8, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cloth', 'chance']
values = [8, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4ddff2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gain', 'room', 'radar', 'shot', 'fan']","[9, 5, 7, 8, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gain', 'room', 'radar', 'shot', 'fan']
values = [9, 5, 7, 8, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#5d0f32')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['noon', 'secret', 'move', 'talent', 'term', 'colony', 'author']","[2, 6, 8, 7, 8, 8, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['noon', 'secret', 'move', 'talent', 'term', 'colony', 'author']
values = [2, 6, 8, 7, 8, 8, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#6d9fb8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['clerk', 'excess', 'sand', 'mad', 'body', 'bond']","[100, 1000, 10000, 1000000000, 1000000000, 1000000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['clerk', 'excess', 'sand', 'mad', 'body', 'bond']
values = [100, 1000, 10000, 1000000000, 1000000000, 1000000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1e6a21')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['verse', 'park']","[60, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['verse', 'park']
values = [60, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e145d9')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['knee', 'friend']","[9, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['knee', 'friend']
values = [9, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7eb6ca')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wash', 'noon']","[6, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wash', 'noon']
values = [6, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#01db03')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['party', 'wise', 'well', 'lamp', 'word', 'craft', 'ten']","[70, 20, 80, 60, 90, 80, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['party', 'wise', 'well', 'lamp', 'word', 'craft', 'ten']
values = [70, 20, 80, 60, 90, 80, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e5aa32')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['guilt', 'side']","[20, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['guilt', 'side']
values = [20, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#32d2ba')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['thick', 'speed', 'belief', 'bent', 'coffee', 'dome', 'court', 'status', 'sense']","[6, 3, 9, 7, 9, 2, 1, 9, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['thick', 'speed', 'belief', 'bent', 'coffee', 'dome', 'court', 'status', 'sense']
values = [6, 3, 9, 7, 9, 2, 1, 9, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#21df9b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['horse', 'stuff', 'hill', 'root', 'get']","[6, 5, 5, 5, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['horse', 'stuff', 'hill', 'root', 'get']
values = [6, 5, 5, 5, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3badf7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['snake', 'show']","[6, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['snake', 'show']
values = [6, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1fb31f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['title', 'theory', 'merit', 'film', 'powder']","[7, 9, 2, 5, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['title', 'theory', 'merit', 'film', 'powder']
values = [7, 9, 2, 5, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#04ec44')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['area', 'craft', 'blood', 'crew']","[5, 7, 3, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['area', 'craft', 'blood', 'crew']
values = [5, 7, 3, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#189f45')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['word', 'herd', 'point', 'rear', 'step', 'count']","[40, 10, 90, 30, 50, 90]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['word', 'herd', 'point', 'rear', 'step', 'count']
values = [40, 10, 90, 30, 50, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#264a3a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['island', 'medium', 'ear', 'eye', 'device', 'birth', 'marine']","[80, 80, 70, 30, 80, 30, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['island', 'medium', 'ear', 'eye', 'device', 'birth', 'marine']
values = [80, 80, 70, 30, 80, 30, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#018c8f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['actor', 'sphere', 'sport', 'spread']","[8, 8, 5, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['actor', 'sphere', 'sport', 'spread']
values = [8, 8, 5, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#042829')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['factor', 'chip', 'middle']","[50, 90, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['factor', 'chip', 'middle']
values = [50, 90, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#53a58b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['excuse', 'path', 'band', 'prayer']","[50, 40, 70, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['excuse', 'path', 'band', 'prayer']
values = [50, 40, 70, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#84fbe1')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lip', 'smell', 'game', 'note', 'harbor']","[10, 30, 50, 30, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lip', 'smell', 'game', 'note', 'harbor']
values = [10, 30, 50, 30, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0c7c1b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['chain', 'none', 'plant', 'friend']","[0, 2, 4, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chain', 'none', 'plant', 'friend']
values = [0, 2, 4, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a3af20')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['firm', 'cup']","[7, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['firm', 'cup']
values = [7, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b87c2d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['expert', 'hotel']","[2, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['expert', 'hotel']
values = [2, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9bc69b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rate', 'park', 'winter', 'tube', 'bag', 'trial']","[5, 8, 3, 9, 7, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rate', 'park', 'winter', 'tube', 'bag', 'trial']
values = [5, 8, 3, 9, 7, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#59104f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['manner', 'room', 'speech', 'crash', 'widow', 'death']","[4, 1, 7, 4, 6, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['manner', 'room', 'speech', 'crash', 'widow', 'death']
values = [4, 1, 7, 4, 6, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d6b136')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['luxury', 'effort', 'prison']","[6, 3, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['luxury', 'effort', 'prison']
values = [6, 3, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c675a8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['self', 'lunch', 'well']","[40, 40, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['self', 'lunch', 'well']
values = [40, 40, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#89d571')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['taxi', 'drive', 'decade']","[8, 9, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['taxi', 'drive', 'decade']
values = [8, 9, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c26ce9')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['desire', 'doubt', 'drug', 'train']","[9, 5, 9, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['desire', 'doubt', 'drug', 'train']
values = [9, 5, 9, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d4907e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['text', 'warmth', 'south', 'voyage', 'myth']","[7, 2, 1, 8, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['text', 'warmth', 'south', 'voyage', 'myth']
values = [7, 2, 1, 8, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1cf464')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['object', 'text', 'county', 'stress', 'team', 'proof', 'book']","[4, 1, 6, 7, 7, 4, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['object', 'text', 'county', 'stress', 'team', 'proof', 'book']
values = [4, 1, 6, 7, 7, 4, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9e6e59')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tire', 'terror', 'music']","[8, 7, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tire', 'terror', 'music']
values = [8, 7, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#76c021')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['whole', 'panic', 'serum', 'season', 'ballet']","[1, 8, 2, 6, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['whole', 'panic', 'serum', 'season', 'ballet']
values = [1, 8, 2, 6, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1285c5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['till', 'rifle', 'comedy', 'lamp']","[7, 3, 6, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['till', 'rifle', 'comedy', 'lamp']
values = [7, 3, 6, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#37e9f0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['artery', 'chip', 'north']","[3, 1, -4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['artery', 'chip', 'north']
values = [3, 1, -4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7d63e3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['health', 'shell', 'guard', 'speed', 'symbol', 'threat', 'ocean', 'pause']","[0, 0, 3, 3, 9, 8, 6, 0]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['health', 'shell', 'guard', 'speed', 'symbol', 'threat', 'ocean', 'pause']
values = [0, 0, 3, 3, 9, 8, 6, 0]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#caf950')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['guide', 'slope', 'home', 'artist']","[9, 6, 9, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['guide', 'slope', 'home', 'artist']
values = [9, 6, 9, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c6cbd0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sorry', 'mouth']","[40, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sorry', 'mouth']
values = [40, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b94264')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pure', 'talk', 'stick']","[2, 2, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pure', 'talk', 'stick']
values = [2, 2, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3a705b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hand', 'craft', 'rise', 'patent', 'supply', 'wound', 'class', 'cream', 'bench']","[50, 40, 40, 20, 80, 60, 90, 60, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hand', 'craft', 'rise', 'patent', 'supply', 'wound', 'class', 'cream', 'bench']
values = [50, 40, 40, 20, 80, 60, 90, 60, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#5741fb')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['brain', 'sand', 'skin']","[7, 8, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['brain', 'sand', 'skin']
values = [7, 8, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8c011e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ear', 'tissue', 'gay', 'bottom']","[1, 1, 4, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ear', 'tissue', 'gay', 'bottom']
values = [1, 1, 4, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2bf0fd')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['author', 'youth', 'note', 'branch', 'route', 'foot', 'supply']","[6, 4, 4, 5, 2, 7, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['author', 'youth', 'note', 'branch', 'route', 'foot', 'supply']
values = [6, 4, 4, 5, 2, 7, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#36a78b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['eye', 'bent', 'liquor', 'strip']","[4, 5, 6, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['eye', 'bent', 'liquor', 'strip']
values = [4, 5, 6, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7d794f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['floor', 'well', 'factor', 'model', 'genius']","[9, 9, 9, 4, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['floor', 'well', 'factor', 'model', 'genius']
values = [9, 9, 9, 4, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2763db')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['guilt', 'page', 'refund', 'murder', 'dirt', 'height']","[70, 10, 20, 90, 60, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['guilt', 'page', 'refund', 'murder', 'dirt', 'height']
values = [70, 10, 20, 90, 60, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#aa7677')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['desire', 'phase', 'manner']","[7, 7, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['desire', 'phase', 'manner']
values = [7, 7, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#72c763')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['leader', 'health', 'pool']","[80, 30, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['leader', 'health', 'pool']
values = [80, 30, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#00a2f4')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lead', 'cereal', 'patent', 'comedy']","[6, 3, 5, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lead', 'cereal', 'patent', 'comedy']
values = [6, 3, 5, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a488fd')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['heart', 'ship']","[30, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['heart', 'ship']
values = [30, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2c63d0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['seed', 'crisis', 'client', 'change', 'wonder']","[4, 1, 5, 9, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['seed', 'crisis', 'client', 'change', 'wonder']
values = [4, 1, 5, 9, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a9d0cc')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['panel', 'item', 'jar', 'forth', 'room']","[7, 9, 4, 3, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['panel', 'item', 'jar', 'forth', 'room']
values = [7, 9, 4, 3, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#aa0c11')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lunch', 'coffee', 'pride', 'theme', 'board', 'enemy', 'escape', 'bride']","[6, 1, 6, 2, 5, 7, 2, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lunch', 'coffee', 'pride', 'theme', 'board', 'enemy', 'escape', 'bride']
values = [6, 1, 6, 2, 5, 7, 2, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#92fb7a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['latter', 'staff', 'shock']","[9, 8, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['latter', 'staff', 'shock']
values = [9, 8, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7515e5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['none', 'day', 'injury', 'bag', 'shot']","[4, 7, 5, 5, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['none', 'day', 'injury', 'bag', 'shot']
values = [4, 7, 5, 5, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b6cdab')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['belt', 'farmer']","[5, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['belt', 'farmer']
values = [5, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#223996')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['case', 'gay']","[9, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['case', 'gay']
values = [9, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#12b119')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rush', 'behalf']","[6, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rush', 'behalf']
values = [6, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#601ad2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['merger', 'point', 'data']","[2, 3, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['merger', 'point', 'data']
values = [2, 3, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#6445dc')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['estate', 'excuse', 'device', 'iron']","[7, 9, 3, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['estate', 'excuse', 'device', 'iron']
values = [7, 9, 3, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#35473e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stroke', 'harbor']","[7, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stroke', 'harbor']
values = [7, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4484ce')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['room', 'trail', 'worth', 'belt']","[3, 4, 5, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['room', 'trail', 'worth', 'belt']
values = [3, 4, 5, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ee2a1c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['genius', 'fall', 'cabin', 'skin', 'living', 'knife']","[70, 40, 10, 30, 90, 40]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['genius', 'fall', 'cabin', 'skin', 'living', 'knife']
values = [70, 40, 10, 30, 90, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#676e04')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bus', 'aspect', 'vein', 'guy', 'point', 'nation', 'speech', 'sand']","[50, 70, 60, 10, 10, 90, 30, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bus', 'aspect', 'vein', 'guy', 'point', 'nation', 'speech', 'sand']
values = [50, 70, 60, 10, 10, 90, 30, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#177f33')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['grave', 'shift', 'limit', 'reader', 'radar', 'thick']","[6, 3, 6, 6, 5, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['grave', 'shift', 'limit', 'reader', 'radar', 'thick']
values = [6, 3, 6, 6, 5, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ab9b82')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['clock', 'jazz', 'beam', 'craft', 'grace']","[2, 3, 2, 3, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['clock', 'jazz', 'beam', 'craft', 'grace']
values = [2, 3, 2, 3, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#11e378')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['town', 'carbon', 'watch']","[5, 2, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['town', 'carbon', 'watch']
values = [5, 2, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#11a11d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cheek', 'opera', 'walk', 'need', 'supply', 'brain']","[1, 1, 4, 2, 6, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cheek', 'opera', 'walk', 'need', 'supply', 'brain']
values = [1, 1, 4, 2, 6, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#cc73cd')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['drive', 'amount', 'run', 'area', 'spot', 'style']","[2, 9, 6, 5, 5, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drive', 'amount', 'run', 'area', 'spot', 'style']
values = [2, 9, 6, 5, 5, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#47281c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ranch', 'bomb', 'mood', 'novel', 'growth', 'office', 'reach', 'actor']","[5, 9, 8, 3, 2, 7, 5, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ranch', 'bomb', 'mood', 'novel', 'growth', 'office', 'reach', 'actor']
values = [5, 9, 8, 3, 2, 7, 5, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4d7da7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['anode', 'beam', 'barrel', 'garden', 'water', 'regime']","[5, 3, 8, 9, 9, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['anode', 'beam', 'barrel', 'garden', 'water', 'regime']
values = [5, 3, 8, 9, 9, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2630ca')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['feel', 'touch']","[2, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['feel', 'touch']
values = [2, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7583b9')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['back', 'tool', 'means', 'injury']","[7, 1, 3, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['back', 'tool', 'means', 'injury']
values = [7, 1, 3, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#93056e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['motel', 'thirty', 'flavor', 'heart', 'leg', 'front', 'clock']","[5, 4, 2, 1, 3, 5, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['motel', 'thirty', 'flavor', 'heart', 'leg', 'front', 'clock']
values = [5, 4, 2, 1, 3, 5, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#762262')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['front', 'auto', 'camera', 'choice', 'weapon', 'sum']","[-6, 3, 1, 4, 9, -6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['front', 'auto', 'camera', 'choice', 'weapon', 'sum']
values = [-6, 3, 1, 4, 9, -6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a24879')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['curve', 'use', 'defeat', 'door', 'sheet', 'seed', 'goal']","[6, 9, 9, 6, 3, 6, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['curve', 'use', 'defeat', 'door', 'sheet', 'seed', 'goal']
values = [6, 9, 9, 6, 3, 6, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7e6e46')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['estate', 'report']","[20, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['estate', 'report']
values = [20, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d41787')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['film', 'wall']","[9, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['film', 'wall']
values = [9, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ca375e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['god', 'coal', 'time', 'image']","[6, 8, 3, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['god', 'coal', 'time', 'image']
values = [6, 8, 3, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#042d34')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['drama', 'class', 'street']","[1000000000, 100000, 1000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drama', 'class', 'street']
values = [1000000000, 100000, 1000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#eb06c3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['folk', 'shock', 'sister', 'height', 'sand', 'patent', 'doctor']","[5, 8, 5, 3, 8, 6, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['folk', 'shock', 'sister', 'height', 'sand', 'patent', 'doctor']
values = [5, 8, 5, 3, 8, 6, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a7b044')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hair', 'dog', 'public', 'regime', 'taxi']","[80, 40, 20, 80, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hair', 'dog', 'public', 'regime', 'taxi']
values = [80, 40, 20, 80, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#dbf665')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['back', 'form', 'skin']","[30, 30, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['back', 'form', 'skin']
values = [30, 30, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#57e231')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['beef', 'theme', 'radio', 'lawyer']","[5, 7, 5, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['beef', 'theme', 'radio', 'lawyer']
values = [5, 7, 5, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b437a6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cure', 'holder', 'comedy']","[20, 60, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cure', 'holder', 'comedy']
values = [20, 60, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#674027')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dawn', 'fun', 'whole', 'dancer', 'diet']","[1, 4, 3, 4, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dawn', 'fun', 'whole', 'dancer', 'diet']
values = [1, 4, 3, 4, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3c289f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['colony', 'autumn', 'east', 'motion', 'lady']","[4, 3, 3, 5, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['colony', 'autumn', 'east', 'motion', 'lady']
values = [4, 3, 3, 5, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1ebdd4')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['laugh', 'style']","[2, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['laugh', 'style']
values = [2, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c5bee5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wire', 'radio', 'habit', 'group', 'taste', 'fly']","[7, 4, 6, 6, 4, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wire', 'radio', 'habit', 'group', 'taste', 'fly']
values = [7, 4, 6, 6, 4, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#15d18c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['planet', 'pain', 'rock', 'era', 'doubt']","[8, 4, 9, 4, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['planet', 'pain', 'rock', 'era', 'doubt']
values = [8, 4, 9, 4, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9a254a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['reach', 'favor', 'ocean']","[-2, 9, -4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['reach', 'favor', 'ocean']
values = [-2, 9, -4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8c97a5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['care', 'refund', 'scheme', 'deal', 'salary', 'myth']","[30, 20, 30, 80, 10, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['care', 'refund', 'scheme', 'deal', 'salary', 'myth']
values = [30, 20, 30, 80, 10, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2e0f5b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sugar', 'dozen', 'myth', 'grace', 'tray', 'iron', 'watch']","[8, 2, 4, 0, 8, 6, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sugar', 'dozen', 'myth', 'grace', 'tray', 'iron', 'watch']
values = [8, 2, 4, 0, 8, 6, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ffdbc8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['set', 'doubt', 'writer', 'plate', 'dozen']","[10, 10, 100, 1000000, 100000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['set', 'doubt', 'writer', 'plate', 'dozen']
values = [10, 10, 100, 1000000, 100000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#75b58d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['game', 'system', 'shell', 'reach', 'year']","[6, 1, 7, 8, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['game', 'system', 'shell', 'reach', 'year']
values = [6, 1, 7, 8, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e42a44')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['carbon', 'savage', 'excess', 'action', 'cell', 'check']","[0, 6, 3, 3, 3, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['carbon', 'savage', 'excess', 'action', 'cell', 'check']
values = [0, 6, 3, 3, 3, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ff7843')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['career', 'tent', 'youth', 'steel', 'news', 'friend']","[70, 80, 40, 50, 80, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['career', 'tent', 'youth', 'steel', 'news', 'friend']
values = [70, 80, 40, 50, 80, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#83b5a8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['duty', 'gain', 'list']","[5, 9, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['duty', 'gain', 'list']
values = [5, 9, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c7bc98')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fee', 'hill', 'sign']","[4, 6, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fee', 'hill', 'sign']
values = [4, 6, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#fbe532')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['uncle', 'sun', 'guitar', 'while', 'lot', 'fire', 'view', 'silver', 'trend']","[1000000, 10, 10000000, 10000, 100, 10000000, 10000000, 1000000, 100000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['uncle', 'sun', 'guitar', 'while', 'lot', 'fire', 'view', 'silver', 'trend']
values = [1000000, 10, 10000000, 10000, 100, 10000000, 10000000, 1000000, 100000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1d92c5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dozen', 'sister', 'axis', 'place', 'marine', 'patrol', 'iodine', 'merger']","[8, 1, 3, 9, 3, 8, 9, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dozen', 'sister', 'axis', 'place', 'marine', 'patrol', 'iodine', 'merger']
values = [8, 1, 3, 9, 3, 8, 9, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b5d528')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['reason', 'seed', 'living', 'brand', 'merger']","[40, 80, 70, 90, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['reason', 'seed', 'living', 'brand', 'merger']
values = [40, 80, 70, 90, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#aafe5d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['metal', 'wait', 'reason', 'right', 'sound', 'start']","[10000000, 10, 10000, 1000000, 10000, 100]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['metal', 'wait', 'reason', 'right', 'sound', 'start']
values = [10000000, 10, 10000, 1000000, 10000, 100]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b4ece3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['poetry', 'god', 'time', 'call', 'step', 'screen', 'share']","[70, 10, 90, 60, 20, 50, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['poetry', 'god', 'time', 'call', 'step', 'screen', 'share']
values = [70, 10, 90, 60, 20, 50, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#81f1af')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['player', 'course', 'dog', 'vector', 'reason', 'tool', 'hay']","[80, 70, 30, 40, 30, 30, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['player', 'course', 'dog', 'vector', 'reason', 'tool', 'hay']
values = [80, 70, 30, 40, 30, 30, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#dc4307')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pause', 'ratio', 'watch']","[9, 6, -9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pause', 'ratio', 'watch']
values = [9, 6, -9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#63aa4a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stage', 'strain']","[20, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stage', 'strain']
values = [20, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#20a52d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['game', 'scale', 'dome', 'work', 'heard', 'type']","[2, 5, 4, 3, 7, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['game', 'scale', 'dome', 'work', 'heard', 'type']
values = [2, 5, 4, 3, 7, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#67793d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cap', 'door', 'right']","[3, 7, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cap', 'door', 'right']
values = [3, 7, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#292c1e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['joy', 'pencil', 'battle', 'work', 'jungle']","[-7, -7, -3, 7, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['joy', 'pencil', 'battle', 'work', 'jungle']
values = [-7, -7, -3, 7, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f8e111')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wash', 'job', 'diet', 'glass', 'canvas', 'stick']","[9, 3, 8, 1, 5, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wash', 'job', 'diet', 'glass', 'canvas', 'stick']
values = [9, 3, 8, 1, 5, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#483d48')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['nature', 'spread', 'sign']","[20, 0, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['nature', 'spread', 'sign']
values = [20, 0, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f75d88')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['text', 'theory', 'past', 'art', 'coffee']","[8, 8, 3, 3, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['text', 'theory', 'past', 'art', 'coffee']
values = [8, 8, 3, 3, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#577c4d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['autumn', 'head']","[4, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['autumn', 'head']
values = [4, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#cc647f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['letter', 'fate', 'extent']","[60, 80, 90]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['letter', 'fate', 'extent']
values = [60, 80, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#267392')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['site', 'close', 'award', 'tube']","[100000, 10, 1000000, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['site', 'close', 'award', 'tube']
values = [100000, 10, 1000000, 100000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4c6897')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stock', 'gold', 'living', 'queen', 'vertex', 'motor', 'ballet']","[6, 1, 4, 3, 9, 2, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stock', 'gold', 'living', 'queen', 'vertex', 'motor', 'ballet']
values = [6, 1, 4, 3, 9, 2, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ef7a22')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['plane', 'side']","[5, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['plane', 'side']
values = [5, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f01384')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['duty', 'turn', 'draft', 'friend', 'shame']","[50, 50, 30, 50, 90]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['duty', 'turn', 'draft', 'friend', 'shame']
values = [50, 50, 30, 50, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f86e0a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['skin', 'ballet', 'sound', 'chief', 'age', 'making']","[4, 7, 5, 5, 1, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['skin', 'ballet', 'sound', 'chief', 'age', 'making']
values = [4, 7, 5, 5, 1, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#67de75')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['reply', 'lobby', 'fence', 'money']","[5, 6, 4, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['reply', 'lobby', 'fence', 'money']
values = [5, 6, 4, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7f6894')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mold', 'grade', 'stage', 'design', 'attack', 'yield']","[3, 9, 2, 7, 7, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mold', 'grade', 'stage', 'design', 'attack', 'yield']
values = [3, 9, 2, 7, 7, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ec860d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['threat', 'land', 'lip', 'mile']","[8, 1, 8, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['threat', 'land', 'lip', 'mile']
values = [8, 1, 8, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f48608')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pure', 'mother', 'corps', 'match', 'twelve', 'court']","[6, 7, 6, 8, 2, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pure', 'mother', 'corps', 'match', 'twelve', 'court']
values = [6, 7, 6, 8, 2, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c275e1')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['while', 'sleep', 'ten']","[7, 1, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['while', 'sleep', 'ten']
values = [7, 1, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3dcdda')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stream', 'check', 'defeat', 'book']","[9, 7, 7, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stream', 'check', 'defeat', 'book']
values = [9, 7, 7, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#641323')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['name', 'heat', 'shadow']","[3, 8, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['name', 'heat', 'shadow']
values = [3, 8, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#48fe8a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['flight', 'grace', 'shop', 'marine', 'suite', 'paint', 'fuel']","[6, 5, 2, 7, 3, 5, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['flight', 'grace', 'shop', 'marine', 'suite', 'paint', 'fuel']
values = [6, 5, 2, 7, 3, 5, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#423cc0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['melody', 'order', 'dive', 'dancer', 'teeth', 'taste']","[10, 60, 70, 60, 20, 90]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['melody', 'order', 'dive', 'dancer', 'teeth', 'taste']
values = [10, 60, 70, 60, 20, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9e124e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wealth', 'rise']","[80, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wealth', 'rise']
values = [80, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#dfa840')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['youth', 'block', 'fun', 'family']","[7, 5, 9, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['youth', 'block', 'fun', 'family']
values = [7, 5, 9, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#532dac')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['thick', 'roll', 'stress', 'twenty', 'scene']","[8, 4, 3, 3, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['thick', 'roll', 'stress', 'twenty', 'scene']
values = [8, 4, 3, 3, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#79ee1a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['key', 'front', 'drop', 'latter', 'cool', 'bay', 'thing', 'pilot', 'buffer']","[6, 4, 8, 5, 8, 3, 5, 3, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['key', 'front', 'drop', 'latter', 'cool', 'bay', 'thing', 'pilot', 'buffer']
values = [6, 4, 8, 5, 8, 3, 5, 3, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8bcef3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['share', 'pack', 'shock', 'fuel', 'case', 'strike']","[3, 6, 1, 6, 2, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['share', 'pack', 'shock', 'fuel', 'case', 'strike']
values = [3, 6, 1, 6, 2, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ae3988')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['crime', 'ease', 'pair', 'square', 'hunger', 'state', 'diet']","[20, 70, 50, 0, 20, 40, 0]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crime', 'ease', 'pair', 'square', 'hunger', 'state', 'diet']
values = [20, 70, 50, 0, 20, 40, 0]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#bd0b98')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['day', 'mean', 'pond']","[8, 0, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['day', 'mean', 'pond']
values = [8, 0, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#af580a')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['suite', 'reform']","[8, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['suite', 'reform']
values = [8, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e5aa16')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['metal', 'ground', 'arm']","[80, 30, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['metal', 'ground', 'arm']
values = [80, 30, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#94cf01')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['clerk', 'wife', 'farmer', 'period', 'time']","[40, 80, 70, 60, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['clerk', 'wife', 'farmer', 'period', 'time']
values = [40, 80, 70, 60, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ee1afd')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['review', 'idea', 'favor', 'vacuum']","[80, 30, 10, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['review', 'idea', 'favor', 'vacuum']
values = [80, 30, 10, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#526037')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['jacket', 'grave']","[5, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['jacket', 'grave']
values = [5, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#cd8a71')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['move', 'close', 'cancer', 'stick']","[8, 0, 4, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['move', 'close', 'cancer', 'stick']
values = [8, 0, 4, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2410b1')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['spirit', 'watch', 'bulk', 'basket', 'sake', 'doubt']","[2, 8, 8, 2, 2, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['spirit', 'watch', 'bulk', 'basket', 'sake', 'doubt']
values = [2, 8, 8, 2, 2, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#cd7e91')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['shell', 'nation', 'pack', 'injury']","[2, 5, 9, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shell', 'nation', 'pack', 'injury']
values = [2, 5, 9, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ad8b9d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['piece', 'snow']","[7, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['piece', 'snow']
values = [7, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#32022b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['class', 'gun', 'word', 'pay', 'tour']","[6, 1, 1, 3, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['class', 'gun', 'word', 'pay', 'tour']
values = [6, 1, 1, 3, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#21016f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bus', 'sky', 'yield', 'spread']","[9, 2, 4, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bus', 'sky', 'yield', 'spread']
values = [9, 2, 4, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#bc7c66')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['suite', 'cycle', 'center']","[2, 2, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['suite', 'cycle', 'center']
values = [2, 2, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b441dc')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fly', 'desire', 'club', 'hall', 'bulk']","[80, 80, 70, 60, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fly', 'desire', 'club', 'hall', 'bulk']
values = [80, 80, 70, 60, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7b7c24')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['car', 'wit', 'merger']","[5, 4, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['car', 'wit', 'merger']
values = [5, 4, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#861faa')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['trip', 'land', 'bread', 'effect']","[1000000000, 10000000, 10000, 1000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['trip', 'land', 'bread', 'effect']
values = [1000000000, 10000000, 10000, 1000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#92a60b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['car', 'core', 'south', 'wind', 'boss', 'fiber', 'policy', 'farmer']","[3, 9, 7, 3, 6, 8, 8, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['car', 'core', 'south', 'wind', 'boss', 'fiber', 'policy', 'farmer']
values = [3, 9, 7, 3, 6, 8, 8, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c3bb35')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mode', 'view', 'summer', 'future', 'excess', 'bag']","[4, 8, 2, 3, 4, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mode', 'view', 'summer', 'future', 'excess', 'bag']
values = [4, 8, 2, 3, 4, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#58a966')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['train', 'dress', 'blood', 'glance', 'tax', 'proof']","[5, 4, 4, 8, 4, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['train', 'dress', 'blood', 'glance', 'tax', 'proof']
values = [5, 4, 4, 8, 4, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#aea5c6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fog', 'bundle', 'wine', 'frame']","[2, 3, 9, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fog', 'bundle', 'wine', 'frame']
values = [2, 3, 9, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7f60c2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gain', 'data', 'seat', 'income']","[7, 1, 6, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gain', 'data', 'seat', 'income']
values = [7, 1, 6, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b2a5e7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['salary', 'drift', 'scheme', 'jacket']","[6, 5, 1, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['salary', 'drift', 'scheme', 'jacket']
values = [6, 5, 1, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#47941f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['voyage', 'desire', 'use', 'lesson']","[80, 30, 50, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['voyage', 'desire', 'use', 'lesson']
values = [80, 30, 50, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f11339')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sin', 'rhythm', 'block', 'game']","[2, 8, 7, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sin', 'rhythm', 'block', 'game']
values = [2, 8, 7, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e2721b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['anyone', 'drug', 'cannot', 'care', 'sense', 'rage', 'turn', 'dollar']","[5, 6, 1, 6, 3, 9, 5, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['anyone', 'drug', 'cannot', 'care', 'sense', 'rage', 'turn', 'dollar']
values = [5, 6, 1, 6, 3, 9, 5, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f2bcac')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mess', 'twenty', 'teeth', 'coast']","[1, 5, 9, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mess', 'twenty', 'teeth', 'coast']
values = [1, 5, 9, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#19babf')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mouth', 'bent']","[3, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mouth', 'bent']
values = [3, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#773b65')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sitter', 'parade']","[5, 0]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sitter', 'parade']
values = [5, 0]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#eb8956')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['move', 'era', 'box', 'lack', 'trend', 'jungle', 'fruit', 'pond']","[60, 50, 70, 20, 80, 70, 80, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['move', 'era', 'box', 'lack', 'trend', 'jungle', 'fruit', 'pond']
values = [60, 50, 70, 20, 80, 70, 80, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#56474d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['scale', 'lamp']","[8, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['scale', 'lamp']
values = [8, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d17297')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['choice', 'one', 'bread']","[8, 6, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['choice', 'one', 'bread']
values = [8, 6, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#79054b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['moment', 'strike', 'bowl', 'metal']","[5, 8, 2, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['moment', 'strike', 'bowl', 'metal']
values = [5, 8, 2, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#095a66')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['drop', 'movie', 'engine', 'block', 'pitch', 'issue']","[10, 60, 70, 30, 50, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drop', 'movie', 'engine', 'block', 'pitch', 'issue']
values = [10, 60, 70, 30, 50, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#dce625')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tongue', 'income', 'drunk', 'sky']","[4, 3, 2, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tongue', 'income', 'drunk', 'sky']
values = [4, 3, 2, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#dc86d4')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['meal', 'behalf', 'suite', 'world', 'night', 'shift']","[4, 5, 5, 8, 5, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['meal', 'behalf', 'suite', 'world', 'night', 'shift']
values = [4, 5, 5, 8, 5, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#434bbc')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['entry', 'field', 'flux', 'mind', 'degree']","[8, 2, 3, 7, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['entry', 'field', 'flux', 'mind', 'degree']
values = [8, 2, 3, 7, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0dc4b2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dozen', 'stand', 'hero', 'goal', 'left', 'light']","[1000, 100000000, 1000000, 100, 1000000000, 100000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dozen', 'stand', 'hero', 'goal', 'left', 'light']
values = [1000, 100000000, 1000000, 100, 1000000000, 100000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#72d9ee')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['oil', 'flight', 'door']","[4, 1, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['oil', 'flight', 'door']
values = [4, 1, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#195f54')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cross', 'issue', 'blue', 'cabin', 'decade']","[40, 40, 20, 70, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cross', 'issue', 'blue', 'cabin', 'decade']
values = [40, 40, 20, 70, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e2ab26')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['issue', 'book', 'era']","[90, 20, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['issue', 'book', 'era']
values = [90, 20, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1c6f82')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['shore', 'coffee', 'travel', 'victim', 'track']","[6, 2, 5, 9, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shore', 'coffee', 'travel', 'victim', 'track']
values = [6, 2, 5, 9, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#363cc9')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pilot', 'luxury', 'item', 'bullet']","[10, 70, 20, 90]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pilot', 'luxury', 'item', 'bullet']
values = [10, 70, 20, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f7a8a3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['source', 'wise']","[8, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['source', 'wise']
values = [8, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#caedac')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['winter', 'church', 'while']","[9, 7, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['winter', 'church', 'while']
values = [9, 7, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9b8ae0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['phase', 'role', 'well', 'birth', 'box', 'engine', 'male']","[8, 3, 2, 3, 1, 8, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['phase', 'role', 'well', 'birth', 'box', 'engine', 'male']
values = [8, 3, 2, 3, 1, 8, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#96b16c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['point', 'bundle', 'search', 'hay', 'issue']","[4, 3, 7, 6, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['point', 'bundle', 'search', 'hay', 'issue']
values = [4, 3, 7, 6, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7a0bf3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['branch', 'bulk']","[3, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['branch', 'bulk']
values = [3, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d5a628')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['melody', 'route', 'closet', 'text', 'mine', 'couple']","[1000000000, 10, 1000000, 100000000, 100, 1000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['melody', 'route', 'closet', 'text', 'mine', 'couple']
values = [1000000000, 10, 1000000, 100000000, 100, 1000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e1b484')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['type', 'year', 'pure', 'second', 'mind', 'tour']","[9, 1, 7, 6, 7, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['type', 'year', 'pure', 'second', 'mind', 'tour']
values = [9, 1, 7, 6, 7, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3ac60d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['color', 'phone', 'crash', 'mess', 'work']","[3, 2, 3, -6, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['color', 'phone', 'crash', 'mess', 'work']
values = [3, 2, 3, -6, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#02e0b6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['right', 'color', 'minute']","[4, 3, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['right', 'color', 'minute']
values = [4, 3, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#abfaf5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['anyone', 'touch', 'loss', 'warmth', 'mold', 'self', 'radar']","[2, 8, 4, 6, 1, 9, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['anyone', 'touch', 'loss', 'warmth', 'mold', 'self', 'radar']
values = [2, 8, 4, 6, 1, 9, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ad90dd')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['talk', 'period', 'act', 'wife']","[1, 7, 6, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['talk', 'period', 'act', 'wife']
values = [1, 7, 6, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#69afa8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['estate', 'rear', 'butter', 'dream', 'hotel', 'noise', 'level']","[9, 9, 1, 4, 4, 8, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['estate', 'rear', 'butter', 'dream', 'hotel', 'noise', 'level']
values = [9, 9, 1, 4, 4, 8, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3fac95')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['girl', 'feed', 'sweat', 'court']","[4, 8, 4, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['girl', 'feed', 'sweat', 'court']
values = [4, 8, 4, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8cf146')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['crop', 'smile', 'melody', 'carbon', 'soul', 'system', 'burden', 'design', 'rear']","[7, 2, 6, 4, 6, 9, 2, 6, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crop', 'smile', 'melody', 'carbon', 'soul', 'system', 'burden', 'design', 'rear']
values = [7, 2, 6, 4, 6, 9, 2, 6, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ac7b38')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['nose', 'cast', 'bureau']","[2, 7, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['nose', 'cast', 'bureau']
values = [2, 7, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9913dc')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rock', 'wage', 'clerk']","[8, 7, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rock', 'wage', 'clerk']
values = [8, 7, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b7673e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['porch', 'patent', 'plan', 'life', 'cut']","[60, 80, 40, 90, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['porch', 'patent', 'plan', 'life', 'cut']
values = [60, 80, 40, 90, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#bf1e14')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ship', 'patent', 'vision', 'museum', 'sort', 'move', 'shell']","[7, 4, 2, 9, 6, 7, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ship', 'patent', 'vision', 'museum', 'sort', 'move', 'shell']
values = [7, 4, 2, 9, 6, 7, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8faad4')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rain', 'strain', 'idea', 'number']","[5, 4, 4, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rain', 'strain', 'idea', 'number']
values = [5, 4, 4, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#49b807')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['medium', 'widow', 'sample', 'mold', 'brick', 'size']","[70, 30, 10, 90, 80, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['medium', 'widow', 'sample', 'mold', 'brick', 'size']
values = [70, 30, 10, 90, 80, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c280ca')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['maid', 'well', 'crew', 'report', 'affair']","[1, 4, 2, 7, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['maid', 'well', 'crew', 'report', 'affair']
values = [1, 4, 2, 7, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ed1288')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['midst', 'fall', 'sample', 'uncle', 'dirt']","[50, 40, 90, 80, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['midst', 'fall', 'sample', 'uncle', 'dirt']
values = [50, 40, 90, 80, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7695a9')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['round', 'suit', 'flow', 'novel', 'cotton']","[80, 20, 60, 70, 20]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['round', 'suit', 'flow', 'novel', 'cotton']
values = [80, 20, 60, 70, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#552f8e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['set', 'block', 'roof']","[6, 2, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['set', 'block', 'roof']
values = [6, 2, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f9477d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stock', 'string', 'nature', 'image', 'train', 'clock']","[20, 30, 80, 50, 70, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stock', 'string', 'nature', 'image', 'train', 'clock']
values = [20, 30, 80, 50, 70, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3d7def')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lamp', 'carbon', 'gyro']","[7, 6, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lamp', 'carbon', 'gyro']
values = [7, 6, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ca8c10')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['oil', 'wood', 'chest', 'host', 'place']","[100000, 100000000, 100000000, 10, 1000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['oil', 'wood', 'chest', 'host', 'place']
values = [100000, 100000000, 100000000, 10, 1000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#191e9e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['barn', 'drop', 'skin']","[40, 40, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['barn', 'drop', 'skin']
values = [40, 40, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#907745')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['one', 'clerk', 'series', 'couple', 'course', 'patent']","[8, 2, 6, 7, 5, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['one', 'clerk', 'series', 'couple', 'course', 'patent']
values = [8, 2, 6, 7, 5, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#5867af')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bent', 'aspect', 'chorus', 'inch', 'shape']","[4, 9, 5, 5, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bent', 'aspect', 'chorus', 'inch', 'shape']
values = [4, 9, 5, 5, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#121667')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hurry', 'dive']","[20, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hurry', 'dive']
values = [20, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a0c1c7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['job', 'rice']","[20, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['job', 'rice']
values = [20, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#182f78')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['law', 'jet']","[30, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['law', 'jet']
values = [30, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9f7be9')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['path', 'core', 'widow', 'outfit', 'income', 'faint']","[1000, 100000000, 1000000000, 100000000, 100000000, 1000000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['path', 'core', 'widow', 'outfit', 'income', 'faint']
values = [1000, 100000000, 1000000000, 100000000, 100000000, 1000000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#5d6970')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['driver', 'line', 'flavor']","[10, 20, 40]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['driver', 'line', 'flavor']
values = [10, 20, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#411fa6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['strain', 'youth', 'floor', 'gas', 'grace', 'city', 'friend']","[-9, 9, 6, -3, 9, -4, -9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['strain', 'youth', 'floor', 'gas', 'grace', 'city', 'friend']
values = [-9, 9, 6, -3, 9, -4, -9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3e994b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fund', 'report']","[0, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fund', 'report']
values = [0, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8412a4')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['shop', 'boss', 'tax']","[5, 5, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shop', 'boss', 'tax']
values = [5, 5, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d7789b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['risk', 'skill', 'camp']","[100000, 100, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['risk', 'skill', 'camp']
values = [100000, 100, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7d429f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fate', 'table']","[10, 1000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fate', 'table']
values = [10, 1000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#03f77e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['nobody', 'powder', 'device', 'spirit', 'lack', 'case', 'melody']","[7, 4, 1, 5, 6, 3, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['nobody', 'powder', 'device', 'spirit', 'lack', 'case', 'melody']
values = [7, 4, 1, 5, 6, 3, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#dab791')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['drive', 'wife', 'origin', 'scene', 'bone']","[70, 40, 30, 50, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drive', 'wife', 'origin', 'scene', 'bone']
values = [70, 40, 30, 50, 10]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#552f52')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['murder', 'month']","[10, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['murder', 'month']
values = [10, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#39dc06')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['agency', 'ship', 'flight', 'guard']","[7, 4, 7, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['agency', 'ship', 'flight', 'guard']
values = [7, 4, 7, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3d8cd2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['vector', 'faith', 'month', 'tissue', 'corner']","[6, 1, 6, 1, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vector', 'faith', 'month', 'tissue', 'corner']
values = [6, 1, 6, 1, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e9dcc9')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['noon', 'vein', 'mean']","[100, 100, 10000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['noon', 'vein', 'mean']
values = [100, 100, 10000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1b53f5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['iodine', 'career', 'clouds', 'joy']","[1, 1, 8, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['iodine', 'career', 'clouds', 'joy']
values = [1, 1, 8, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#549c5c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['body', 'battle', 'fate', 'luxury', 'taste', 'signal']","[4, 2, 5, 3, 4, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['body', 'battle', 'fate', 'luxury', 'taste', 'signal']
values = [4, 2, 5, 3, 4, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b210fe')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ideal', 'rage', 'tie', 'basis', 'answer', 'stream']","[1, 1, 3, 9, 7, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ideal', 'rage', 'tie', 'basis', 'answer', 'stream']
values = [1, 1, 3, 9, 7, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#40e766')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rear', 'switch', 'step', 'pitch', 'slope', 'labor']","[2, 9, 6, 7, 4, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rear', 'switch', 'step', 'pitch', 'slope', 'labor']
values = [2, 9, 6, 7, 4, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8279e7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tent', 'sugar', 'fee', 'suit', 'beat', 'price', 'realm', 'rear', 'flesh']","[1, 3, 8, 6, 5, 3, 9, 9, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tent', 'sugar', 'fee', 'suit', 'beat', 'price', 'realm', 'rear', 'flesh']
values = [1, 3, 8, 6, 5, 3, 9, 9, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#90a5a1')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pencil', 'son', 'river']","[1, 1, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pencil', 'son', 'river']
values = [1, 1, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1e61c8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['card', 'blood', 'symbol', 'air', 'gift']","[-7, 6, 4, 1, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['card', 'blood', 'symbol', 'air', 'gift']
values = [-7, 6, 4, 1, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#dd0c9e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['jail', 'sort']","[20, 0]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['jail', 'sort']
values = [20, 0]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#763a56')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cash', 'ticket', 'maid', 'lack', 'dealer', 'side', 'crop']","[2, 5, 9, 3, 8, 1, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cash', 'ticket', 'maid', 'lack', 'dealer', 'side', 'crop']
values = [2, 5, 9, 3, 8, 1, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#907f92')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['region', 'phase', 'force', 'rail', 'issue', 'shift', 'jury', 'poetry', 'limit']","[5, 9, 6, 6, 9, 1, 4, 2, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['region', 'phase', 'force', 'rail', 'issue', 'shift', 'jury', 'poetry', 'limit']
values = [5, 9, 6, 6, 9, 1, 4, 2, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#104f28')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['war', 'jail', 'drunk', 'flesh', 'fact']","[3, 5, 5, 1, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['war', 'jail', 'drunk', 'flesh', 'fact']
values = [3, 5, 5, 1, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c1b0fd')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['arc', 'drive', 'wit', 'value', 'report', 'while', 'wonder', 'poem']","[60, 20, 20, 30, 70, 60, 80, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['arc', 'drive', 'wit', 'value', 'report', 'while', 'wonder', 'poem']
values = [60, 20, 20, 30, 70, 60, 80, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#138ef2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['virtue', 'rock', 'gang', 'thing', 'step', 'clouds', 'slope']","[6, 7, 5, 5, 5, 4, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['virtue', 'rock', 'gang', 'thing', 'step', 'clouds', 'slope']
values = [6, 7, 5, 5, 5, 4, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c3302c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['total', 'gown', 'axis']","[6, 3, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['total', 'gown', 'axis']
values = [6, 3, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9b85aa')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['screen', 'means', 'sight', 'hurry', 'motel', 'tale']","[4, 1, 4, 8, 2, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['screen', 'means', 'sight', 'hurry', 'motel', 'tale']
values = [4, 1, 4, 8, 2, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#691434')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['term', 'scope']","[10, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['term', 'scope']
values = [10, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#739eb4')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['phone', 'tea', 'spread']","[8, 1, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['phone', 'tea', 'spread']
values = [8, 1, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ce5879')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['case', 'gown', 'slave', 'cup']","[1, 4, 4, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['case', 'gown', 'slave', 'cup']
values = [1, 4, 4, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#370fdd')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['park', 'level', 'jacket', 'ward']","[7, 1, 5, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['park', 'level', 'jacket', 'ward']
values = [7, 1, 5, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#16aff3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lap', 'lumber', 'factor', 'rock', 'trap']","[10, 10, 40, 80, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lap', 'lumber', 'factor', 'rock', 'trap']
values = [10, 10, 40, 80, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d9ece6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['thirty', 'pound', 'wife', 'plot', 'union', 'ship']","[6, 5, 5, 2, 2, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['thirty', 'pound', 'wife', 'plot', 'union', 'ship']
values = [6, 5, 5, 2, 2, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ac7baf')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['worker', 'parlor', 'series', 'goal']","[50, 10, 60, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['worker', 'parlor', 'series', 'goal']
values = [50, 10, 60, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#6fd9a9')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rhythm', 'work', 'wagon', 'lobby', 'code', 'middle', 'half']","[80, 70, 30, 70, 50, 40, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rhythm', 'work', 'wagon', 'lobby', 'code', 'middle', 'half']
values = [80, 70, 30, 70, 50, 40, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d48c31')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['panel', 'dance', 'sound', 'flesh', 'motor', 'hell']","[60, 40, 20, 20, 50, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['panel', 'dance', 'sound', 'flesh', 'motor', 'hell']
values = [60, 40, 20, 20, 50, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9dbbaf')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sale', 'crisis', 'plan', 'summer', 'judge', 'date', 'level']","[7, 9, 1, 4, 2, 5, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sale', 'crisis', 'plan', 'summer', 'judge', 'date', 'level']
values = [7, 9, 1, 4, 2, 5, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#34bacc')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['drink', 'fan']","[2, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drink', 'fan']
values = [2, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d535ee')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['light', 'holder', 'aim', 'agency', 'opera', 'cat', 'lesson', 'breath']","[7, 3, 1, 1, 6, 1, 3, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['light', 'holder', 'aim', 'agency', 'opera', 'cat', 'lesson', 'breath']
values = [7, 3, 1, 1, 6, 1, 3, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#320899')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['male', 'dog', 'blue', 'estate', 'stake', 'food']","[20, 40, 40, 30, 60, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['male', 'dog', 'blue', 'estate', 'stake', 'food']
values = [20, 40, 40, 30, 60, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#691862')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['holder', 'date', 'artist', 'tool']","[10, 10, 90, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['holder', 'date', 'artist', 'tool']
values = [10, 10, 90, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#a67536')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['season', 'suite', 'arm', 'rail', 'table', 'flux', 'page']","[20, 20, 40, 70, 30, 20, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['season', 'suite', 'arm', 'rail', 'table', 'flux', 'page']
values = [20, 20, 40, 70, 30, 20, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8c1f07')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['artist', 'power', 'glance', 'growth', 'cup', 'text', 'break']","[1, 6, 4, 2, 3, 8, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['artist', 'power', 'glance', 'growth', 'cup', 'text', 'break']
values = [1, 6, 4, 2, 3, 8, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#593321')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['vision', 'way', 'girl', 'maid']","[1, 4, 9, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vision', 'way', 'girl', 'maid']
values = [1, 4, 9, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#111764')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['store', 'cellar', 'wait']","[0, 80, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['store', 'cellar', 'wait']
values = [0, 80, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#067ec5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['patrol', 'jungle']","[9, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['patrol', 'jungle']
values = [9, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#076ead')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['nobody', 'town']","[1, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['nobody', 'town']
values = [1, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7ec590')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wagon', 'record', 'tax', 'metal']","[40, 50, 70, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wagon', 'record', 'tax', 'metal']
values = [40, 50, 70, 30]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8d065e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pound', 'budget', 'mail']","[8, 1, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pound', 'budget', 'mail']
values = [8, 1, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4649d1')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pipe', 'child', 'waste']","[9, 1, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pipe', 'child', 'waste']
values = [9, 1, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#69534f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['weapon', 'dress', 'fog', 'input']","[8, 2, 7, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['weapon', 'dress', 'fog', 'input']
values = [8, 2, 7, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c88f0f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['search', 'fear', 'scene']","[8, 1, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['search', 'fear', 'scene']
values = [8, 1, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1de699')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stand', 'value', 'panic', 'charm', 'limit', 'farmer', 'tea', 'hotel', 'rank']","[2, 7, 7, 5, 4, 4, 7, 9, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stand', 'value', 'panic', 'charm', 'limit', 'farmer', 'tea', 'hotel', 'rank']
values = [2, 7, 7, 5, 4, 4, 7, 9, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#caf955')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['farmer', 'rifle']","[8, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['farmer', 'rifle']
values = [8, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#bf64b2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['humor', 'glory', 'lawyer', 'smell', 'safety', 'half']","[5, 2, 9, 7, 4, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['humor', 'glory', 'lawyer', 'smell', 'safety', 'half']
values = [5, 2, 9, 7, 4, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#43aaac')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['guest', 'good', 'night', 'fruit']","[4, 6, 8, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['guest', 'good', 'night', 'fruit']
values = [4, 6, 8, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e61168')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['group', 'study', 'box', 'grade', 'step', 'code']","[1, 1, 3, 9, 4, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['group', 'study', 'box', 'grade', 'step', 'code']
values = [1, 1, 3, 9, 4, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#264d9d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['worth', 'church', 'faith', 'pilot', 'reader', 'lunch', 'road']","[9, 3, 3, 6, 1, 3, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['worth', 'church', 'faith', 'pilot', 'reader', 'lunch', 'road']
values = [9, 3, 3, 6, 1, 3, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9d1573')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['anode', 'grace', 'camp', 'top', 'trade', 'aspect']","[10, 10, 40, 30, 50, 0]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['anode', 'grace', 'camp', 'top', 'trade', 'aspect']
values = [10, 10, 40, 30, 50, 0]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#abff71')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['reply', 'tea', 'case']","[2, 4, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['reply', 'tea', 'case']
values = [2, 4, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c645e9')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['era', 'plan', 'value', 'beam', 'device']","[3, 9, 6, 9, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['era', 'plan', 'value', 'beam', 'device']
values = [3, 9, 6, 9, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2716bb')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fly', 'style', 'dog', 'bowl']","[6, 7, 7, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fly', 'style', 'dog', 'bowl']
values = [6, 7, 7, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#303895')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['aspect', 'plan', 'gyro', 'phase', 'beauty', 'steel']","[9, 4, 1, 2, 3, 0]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['aspect', 'plan', 'gyro', 'phase', 'beauty', 'steel']
values = [9, 4, 1, 2, 3, 0]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#5c7cfa')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mother', 'start', 'cry', 'spread', 'month', 'wise', 'reach', 'blood', 'march']","[2, 6, 9, 4, 5, 8, 1, 6, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mother', 'start', 'cry', 'spread', 'month', 'wise', 'reach', 'blood', 'march']
values = [2, 6, 9, 4, 5, 8, 1, 6, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#6a101f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['thing', 'pack', 'air']","[2, 1, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['thing', 'pack', 'air']
values = [2, 1, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#97dd0e')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['youth', 'income', 'dog', 'truth', 'graph', 'text']","[4, 3, 7, 3, 1, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['youth', 'income', 'dog', 'truth', 'graph', 'text']
values = [4, 3, 7, 3, 1, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#6e0b49')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['police', 'trade', 'theme', 'sense', 'plant']","[2, 7, 4, 1, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['police', 'trade', 'theme', 'sense', 'plant']
values = [2, 7, 4, 1, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#48a22c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hurry', 'cat', 'panel']","[7, 6, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hurry', 'cat', 'panel']
values = [7, 6, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1601ba')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dealer', 'piece', 'shame', 'lack', 'canvas']","[1, 8, 9, 2, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dealer', 'piece', 'shame', 'lack', 'canvas']
values = [1, 8, 9, 2, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b05871')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['effect', 'motel', 'powder', 'grant', 'peace', 'mad', 'degree']","[8, 8, 3, 3, 7, 6, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['effect', 'motel', 'powder', 'grant', 'peace', 'mad', 'degree']
values = [8, 8, 3, 3, 7, 6, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#0081e3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bureau', 'coast', 'jazz', 'bit', 'drop']","[6, 6, 9, 2, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bureau', 'coast', 'jazz', 'bit', 'drop']
values = [6, 6, 9, 2, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d9fdb7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['term', 'hay', 'space', 'agent']","[3, -5, 4, -2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['term', 'hay', 'space', 'agent']
values = [3, -5, 4, -2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e670c7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['voyage', 'bath', 'fly', 'ball', 'smoke', 'sex', 'cotton', 'estate']","[20, 80, 10, 10, 30, 40, 40, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['voyage', 'bath', 'fly', 'ball', 'smoke', 'sex', 'cotton', 'estate']
values = [20, 80, 10, 10, 30, 40, 40, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b54bac')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lock', 'type', 'judge', 'news']","[10, 1000000, 1000000000, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lock', 'type', 'judge', 'news']
values = [10, 1000000, 1000000000, 100000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#46e910')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['record', 'focus']","[8, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['record', 'focus']
values = [8, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#50f86d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['square', 'glory', 'excuse', 'ballet']","[6, 5, 4, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['square', 'glory', 'excuse', 'ballet']
values = [6, 5, 4, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f39425')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bag', 'charge', 'wait', 'speed', 'box', 'bunk']","[50, 90, 70, 10, 50, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bag', 'charge', 'wait', 'speed', 'box', 'bunk']
values = [50, 90, 70, 10, 50, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ce9755')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['theory', 'year', 'beat', 'object', 'part']","[10, 20, 70, 70, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['theory', 'year', 'beat', 'object', 'part']
values = [10, 20, 70, 70, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#cb8860')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['museum', 'bill', 'brush', 'series']","[1, 7, 8, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['museum', 'bill', 'brush', 'series']
values = [1, 7, 8, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ba0cc0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['object', 'world', 'search', 'driver', 'sale', 'slope', 'editor', 'player']","[-5, -3, -3, 1, 5, 2, 7, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['object', 'world', 'search', 'driver', 'sale', 'slope', 'editor', 'player']
values = [-5, -3, -3, 1, 5, 2, 7, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#7fee0c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['choice', 'adult', 'tissue', 'light', 'excess', 'style']","[8, 1, 6, 6, 3, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['choice', 'adult', 'tissue', 'light', 'excess', 'style']
values = [8, 1, 6, 6, 3, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#edf65d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['award', 'depth', 'wire', 'fruit']","[9, 3, 8, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['award', 'depth', 'wire', 'fruit']
values = [9, 3, 8, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#f4c3be')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lunch', 'get', 'ground', 'star', 'farmer', 'author', 'charm']","[5, 6, 6, 6, 5, 7, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lunch', 'get', 'ground', 'star', 'farmer', 'author', 'charm']
values = [5, 6, 6, 6, 5, 7, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#14a1d4')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rifle', 'stem', 'bride', 'pride', 'cellar', 'band', 'frame']","[1, 6, 3, 6, 7, 8, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rifle', 'stem', 'bride', 'pride', 'cellar', 'band', 'frame']
values = [1, 6, 3, 6, 7, 8, 2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#16c17b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bottom', 'break', 'power', 'actor', 'unit', 'joke']","[30, 20, 40, 60, 30, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bottom', 'break', 'power', 'actor', 'unit', 'joke']
values = [30, 20, 40, 60, 30, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#731fbf')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['beef', 'model', 'action', 'chest', 'self', 'area', 'desire', 'music']","[-3, -9, -5, -3, 5, 7, 3, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['beef', 'model', 'action', 'chest', 'self', 'area', 'desire', 'music']
values = [-3, -9, -5, -3, 5, 7, 3, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c5cc63')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['artist', 'metal', 'night']","[8, 7, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['artist', 'metal', 'night']
values = [8, 7, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8f2b8c')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['term', 'boy', 'pay', 'breath']","[8, 3, 9, -2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['term', 'boy', 'pay', 'breath']
values = [8, 3, 9, -2]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#4759a4')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['means', 'origin', 'shirt']","[8, 1, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['means', 'origin', 'shirt']
values = [8, 1, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#db41bc')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['beer', 'bunk', 'hunger']","[9, 5, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['beer', 'bunk', 'hunger']
values = [9, 5, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#daad23')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hall', 'king']","[40, 40]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hall', 'king']
values = [40, 40]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9f4765')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hand', 'get', 'loss', 'board', 'task', 'roll']","[60, 50, 10, 20, 90, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hand', 'get', 'loss', 'board', 'task', 'roll']
values = [60, 50, 10, 20, 90, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#94ec1b')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dear', 'client']","[20, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dear', 'client']
values = [20, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#79ba9d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['notion', 'side', 'prayer', 'bank']","[8, 7, 9, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['notion', 'side', 'prayer', 'bank']
values = [8, 7, 9, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#815daa')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fire', 'thick', 'value']","[30, 50, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fire', 'thick', 'value']
values = [30, 50, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#435dea')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['day', 'prize', 'radar', 'suit', 'event', 'get', 'wait', 'craft']","[20, 0, 10, 80, 10, 20, 90, 20]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['day', 'prize', 'radar', 'suit', 'event', 'get', 'wait', 'craft']
values = [20, 0, 10, 80, 10, 20, 90, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#d0dee2')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['code', 'stream', 'studio', 'tie']","[6, 7, 1, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['code', 'stream', 'studio', 'tie']
values = [6, 7, 1, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2433d4')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['closet', 'agency']","[8, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['closet', 'agency']
values = [8, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#fa1688')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['range', 'brand', 'second', 'grain', 'boss', 'proof', 'jacket', 'barn', 'index']","[6, 9, 8, 1, 1, 1, 4, 1, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['range', 'brand', 'second', 'grain', 'boss', 'proof', 'jacket', 'barn', 'index']
values = [6, 9, 8, 1, 1, 1, 4, 1, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#2c2b2f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['branch', 'living']","[10000, 1000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['branch', 'living']
values = [10000, 1000000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ff66ea')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bone', 'river', 'carbon', 'park', 'police', 'rock']","[3, 9, 4, 5, 8, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bone', 'river', 'carbon', 'park', 'police', 'rock']
values = [3, 9, 4, 5, 8, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#565ffb')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['belt', 'spot', 'loan']","[70, 10, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['belt', 'spot', 'loan']
values = [70, 10, 60]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9757ca')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['doctor', 'flux', 'writer', 'artery', 'hole', 'author', 'victim']","[100000, 1000000000, 1000000, 10, 10000, 1000000, 10000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['doctor', 'flux', 'writer', 'artery', 'hole', 'author', 'victim']
values = [100000, 1000000000, 1000000, 10, 10000, 1000000, 10000]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8b2596')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['law', 'chief', 'place', 'blood', 'vein', 'ticket', 'female']","[8, 7, 4, 1, 2, 9, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['law', 'chief', 'place', 'blood', 'vein', 'ticket', 'female']
values = [8, 7, 4, 1, 2, 9, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#378c12')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sake', 'care', 'matter', 'deck', 'crisis', 'hall', 'unity']","[2, 8, 9, 1, 4, 2, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sake', 'care', 'matter', 'deck', 'crisis', 'hall', 'unity']
values = [2, 8, 9, 1, 4, 2, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3c7c80')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['planet', 'age', 'pile', 'belt', 'porch', 'brush', 'game']","[5, 2, 6, 2, 6, 6, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['planet', 'age', 'pile', 'belt', 'porch', 'brush', 'game']
values = [5, 2, 6, 2, 6, 6, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#84c885')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sea', 'liquid']","[3, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sea', 'liquid']
values = [3, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#6553c3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['island', 'fog', 'vertex', 'back', 'crime', 'worry']","[4, -4, 7, 6, 7, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['island', 'fog', 'vertex', 'back', 'crime', 'worry']
values = [4, -4, 7, 6, 7, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b2d13f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hand', 'love', 'breath', 'lobby', 'sweat', 'bass', 'hung']","[50, 10, 10, 10, 90, 30, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hand', 'love', 'breath', 'lobby', 'sweat', 'bass', 'hung']
values = [50, 10, 10, 10, 90, 30, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b0fc93')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wave', 'shock']","[2, 0]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wave', 'shock']
values = [2, 0]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9fe4ad')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['blind', 'poet', 'member']","[40, 60, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['blind', 'poet', 'member']
values = [40, 60, 20]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#eaebf8')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['share', 'master', 'family', 'year']","[3, 8, 5, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['share', 'master', 'family', 'year']
values = [3, 8, 5, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#e95cbf')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['death', 'wind', 'union', 'view']","[8, 2, 8, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['death', 'wind', 'union', 'view']
values = [8, 2, 8, 8]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#8ccfc7')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['latter', 'camp', 'ranch', 'terror', 'jungle']","[7, 4, 5, 7, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['latter', 'camp', 'ranch', 'terror', 'jungle']
values = [7, 4, 5, 7, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#74c2da')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fly', 'loss', 'damage', 'ten']","[4, 4, 4, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fly', 'loss', 'damage', 'ten']
values = [4, 4, 4, 1]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b24b5f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['debate', 'ball', 'plain', 'hole', 'deck', 'prize', 'essay', 'force', 'night']","[1, 5, 6, 1, 3, 7, -7, 8, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['debate', 'ball', 'plain', 'hole', 'deck', 'prize', 'essay', 'force', 'night']
values = [1, 5, 6, 1, 3, 7, -7, 8, 7]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#add4e0')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stem', 'age', 'lap', 'face']","[9, 5, 1, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stem', 'age', 'lap', 'face']
values = [9, 5, 1, 9]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c8352f')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['degree', 'travel', 'rear', 'cross', 'porch', 'beard', 'core', 'blood', 'corn']","[8, 1, 2, 5, 8, 7, 4, 3, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['degree', 'travel', 'rear', 'cross', 'porch', 'beard', 'core', 'blood', 'corn']
values = [8, 1, 2, 5, 8, 7, 4, 3, 6]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#c96ca5')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['handle', 'vision', 'show']","[40, 60, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['handle', 'vision', 'show']
values = [40, 60, 80]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#66e757')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['loss', 'strike', 'frame', 'plate', 'doctor', 'corner']","[1, 6, 5, 4, 2, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['loss', 'strike', 'frame', 'plate', 'doctor', 'corner']
values = [1, 6, 5, 4, 2, 4]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#aa5c36')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['loan', 'job', 'bath']","[8, 5, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['loan', 'job', 'bath']
values = [8, 5, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#ecc696')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['buffer', 'step', 'fuel', 'silver', 'client', 'trap', 'wise']","[90, 20, 20, 80, 80, 40, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['buffer', 'step', 'fuel', 'silver', 'client', 'trap', 'wise']
values = [90, 20, 20, 80, 80, 40, 90]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#dbe42d')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['glory', 'forth', 'shell', 'weight', 'doubt', 'month', 'injury', 'midst', 'shape']","[1, 4, 4, 8, 2, 8, 3, 6, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['glory', 'forth', 'shell', 'weight', 'doubt', 'month', 'injury', 'midst', 'shape']
values = [1, 4, 4, 8, 2, 8, 3, 6, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#b14500')  # Plot the bars with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['share', 'host', 'bulk', 'dome']","[20, 20, 30, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['share', 'host', 'bulk', 'dome']
values = [20, 20, 30, 50]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#1ab5a6')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['car', 'anode', 'god', 'host', 'speed', 'supply']","[7, 1, 9, 2, 8, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['car', 'anode', 'god', 'host', 'speed', 'supply']
values = [7, 1, 9, 2, 8, 3]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#dafbe3')  # Plot the bars with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['scene', 'cheek', 'notion']","[8, 3, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['scene', 'cheek', 'notion']
values = [8, 3, 5]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#3a6f11')  # Plot the bars with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['height', 'glass']","[80, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['height', 'glass']
values = [80, 70]

# Creating the bar chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.bar(categories, values, color='#9b1357')  # Plot the bars with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['artist', 'object', 'county', 'route']","[9, 1, 7, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['artist', 'object', 'county', 'route']
values = [9, 1, 7, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2622da')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lock', 'garden', 'one', 'fog']","[8, 2, 9, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lock', 'garden', 'one', 'fog']
values = [8, 2, 9, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6cbe1a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cat', 'luxury', 'rhythm', 'fiber']","[0, 2, -5, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cat', 'luxury', 'rhythm', 'fiber']
values = [0, 2, -5, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#23c3cd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['knife', 'level', 'edge', 'coat']","[60, 30, 60, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['knife', 'level', 'edge', 'coat']
values = [60, 30, 60, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9c2cd5')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['till', 'rifle', 'comedy', 'lamp']","[7, 3, 6, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['till', 'rifle', 'comedy', 'lamp']
values = [7, 3, 6, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e8e7cd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['random', 'belt', 'design', 'realm', 'sky', 'camp']","[8, 6, 7, 1, 9, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['random', 'belt', 'design', 'realm', 'sky', 'camp']
values = [8, 6, 7, 1, 9, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5f50d0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['enemy', 'youth', 'editor', 'bone', 'item', 'frame']","[1, 1, 1, -3, 8, -4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['enemy', 'youth', 'editor', 'bone', 'item', 'frame']
values = [1, 1, 1, -3, 8, -4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#15a0b8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['date', 'blood', 'square', 'title', 'refund', 'profit']","[1, 2, 3, 2, 1, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['date', 'blood', 'square', 'title', 'refund', 'profit']
values = [1, 2, 3, 2, 1, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ee6194')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['desire', 'source', 'stock', 'wit', 'secret']","[2, 6, 2, 2, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['desire', 'source', 'stock', 'wit', 'secret']
values = [2, 6, 2, 2, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a7c328')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['meal', 'trend', 'aid']","[20, 20, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['meal', 'trend', 'aid']
values = [20, 20, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1b6202')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['duty', 'gain', 'list']","[5, 9, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['duty', 'gain', 'list']
values = [5, 9, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#371910')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hope', 'cross', 'close', 'humor']","[9, 7, 1, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hope', 'cross', 'close', 'humor']
values = [9, 7, 1, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#fcbf4e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['escape', 'issue', 'wait', 'lap', 'midst', 'peace']","[2, 8, 5, 2, 8, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['escape', 'issue', 'wait', 'lap', 'midst', 'peace']
values = [2, 8, 5, 2, 8, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#213be8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['handle', 'oxygen', 'line', 'excess', 'escape']","[90, 70, 10, 70, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['handle', 'oxygen', 'line', 'excess', 'escape']
values = [90, 70, 10, 70, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#cc5312')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['butter', 'fist', 'share', 'right', 'coffee', 'key']","[2, 9, 2, 8, 5, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['butter', 'fist', 'share', 'right', 'coffee', 'key']
values = [2, 9, 2, 8, 5, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#bdd32e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['child', 'winter', 'arc', 'novel', 'truth', 'artery', 'size', 'studio']","[3, 1, 7, 9, 7, 3, 7, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['child', 'winter', 'arc', 'novel', 'truth', 'artery', 'size', 'studio']
values = [3, 1, 7, 9, 7, 3, 7, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6ef8d0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stuff', 'battle']","[8, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stuff', 'battle']
values = [8, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e26374')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ratio', 'fish', 'head']","[1, 5, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ratio', 'fish', 'head']
values = [1, 5, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e9342b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['proof', 'engine', 'guilt']","[8, 4, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['proof', 'engine', 'guilt']
values = [8, 4, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5596be')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tire', 'war', 'detail', 'output']","[9, 6, 1, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tire', 'war', 'detail', 'output']
values = [9, 6, 1, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#96d27b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['colony', 'knife']","[70, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['colony', 'knife']
values = [70, 90]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e572cb')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['theory', 'expert', 'gang', 'auto', 'guitar', 'lock', 'sauce']","[8, 8, 6, 8, 7, 4, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['theory', 'expert', 'gang', 'auto', 'guitar', 'lock', 'sauce']
values = [8, 8, 6, 8, 7, 4, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c6e08a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stock', 'lay', 'angle', 'beard', 'date', 'ring']","[4, 8, 2, 4, 1, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stock', 'lay', 'angle', 'beard', 'date', 'ring']
values = [4, 8, 2, 4, 1, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1cc9b6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['theory', 'diet', 'luxury']","[100000, 1000000, 1000000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['theory', 'diet', 'luxury']
values = [100000, 1000000, 1000000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3234e3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wagon', 'pound', 'supper']","[3, 6, -2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wagon', 'pound', 'supper']
values = [3, 6, -2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#aaa8a9')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['doubt', 'length', 'voyage', 'terror', 'brick', 'table', 'lot']","[7, 8, 3, 8, 7, 7, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['doubt', 'length', 'voyage', 'terror', 'brick', 'table', 'lot']
values = [7, 8, 3, 8, 7, 7, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3ca764')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['drug', 'garden', 'cabin', 'means', 'deck']","[4, 6, 1, 1, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drug', 'garden', 'cabin', 'means', 'deck']
values = [4, 6, 1, 1, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#be2d6d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['income', 'dust', 'mail', 'twelve']","[6, 8, 6, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['income', 'dust', 'mail', 'twelve']
values = [6, 8, 6, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c18a64')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['series', 'tip', 'coat']","[3, 8, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['series', 'tip', 'coat']
values = [3, 8, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#00a218')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sign', 'tent', 'factor', 'bulk']","[50, 30, 40, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sign', 'tent', 'factor', 'bulk']
values = [50, 30, 40, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a56b55')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['answer', 'tray', 'uncle', 'honor', 'hair', 'legs', 'sort']","[50, 60, 30, 80, 70, 20, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['answer', 'tray', 'uncle', 'honor', 'hair', 'legs', 'sort']
values = [50, 60, 30, 80, 70, 20, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#08f636')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cotton', 'bath', 'index', 'left']","[1, 7, 5, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cotton', 'bath', 'index', 'left']
values = [1, 7, 5, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#cae753')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['critic', 'mode', 'field', 'bowl', 'valley', 'writer', 'noon', 'dear', 'woman']","[50, 30, 10, 10, 10, 40, 90, 30, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['critic', 'mode', 'field', 'bowl', 'valley', 'writer', 'noon', 'dear', 'woman']
values = [50, 30, 10, 10, 10, 40, 90, 30, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8e5b5e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wheel', 'spirit', 'heat', 'dirt', 'bag', 'panic']","[80, 80, 80, 90, 60, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wheel', 'spirit', 'heat', 'dirt', 'bag', 'panic']
values = [80, 80, 80, 90, 60, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ea8d17')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['chip', 'holder', 'honor', 'tip', 'review']","[10000, 100000000, 1000000000, 1000000, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chip', 'holder', 'honor', 'tip', 'review']
values = [10000, 100000000, 1000000000, 1000000, 100000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f40123')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hotel', 'deal', 'bar', 'herd', 'film', 'grip']","[3, 1, 4, 1, 4, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hotel', 'deal', 'bar', 'herd', 'film', 'grip']
values = [3, 1, 4, 1, 4, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#769b5e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['feed', 'finger', 'storm']","[8, 5, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['feed', 'finger', 'storm']
values = [8, 5, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#318b63')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['skin', 'noon', 'cry', 'bundle']","[80, 30, 70, 40]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['skin', 'noon', 'cry', 'bundle']
values = [80, 30, 70, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7f610f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['park', 'fit', 'heard', 'detail', 'source', 'burden', 'serum']","[80, 30, 80, 70, 60, 60, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['park', 'fit', 'heard', 'detail', 'source', 'burden', 'serum']
values = [80, 30, 80, 70, 60, 60, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0f5028')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dawn', 'beat', 'cause', 'turn', 'mark', 'god', 'light', 'gay']","[70, 10, 70, 80, 90, 40, 20, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dawn', 'beat', 'cause', 'turn', 'mark', 'god', 'light', 'gay']
values = [70, 10, 70, 80, 90, 40, 20, 90]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#45f9a1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rank', 'sample', 'limit', 'notion']","[6, 4, 4, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rank', 'sample', 'limit', 'notion']
values = [6, 4, 4, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d6e49d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['code', 'corn', 'drama', 'bay', 'bed', 'client']","[30, 90, 20, 60, 50, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['code', 'corn', 'drama', 'bay', 'bed', 'client']
values = [30, 90, 20, 60, 50, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1a2436')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wisdom', 'crew', 'cell', 'doubt', 'plug']","[30, 10, 90, 60, 40]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wisdom', 'crew', 'cell', 'doubt', 'plug']
values = [30, 10, 90, 60, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0f68b5')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['method', 'panic', 'tent']","[1000000, 100000, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['method', 'panic', 'tent']
values = [1000000, 100000, 100000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e3ba94')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['barn', 'brand', 'vein', 'hand']","[1, 3, 2, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['barn', 'brand', 'vein', 'hand']
values = [1, 3, 2, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2b3369')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mature', 'twenty', 'rice', 'event']","[1, 7, 4, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mature', 'twenty', 'rice', 'event']
values = [1, 7, 4, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#48293d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['twenty', 'soul', 'friend', 'past']","[20, 10, 20, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['twenty', 'soul', 'friend', 'past']
values = [20, 10, 20, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#db6754')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['grade', 'flesh', 'medium', 'shock', 'belt']","[10, 90, 40, 70, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['grade', 'flesh', 'medium', 'shock', 'belt']
values = [10, 90, 40, 70, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#131f1c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['effect', 'motel', 'powder', 'grant', 'peace', 'mad', 'degree']","[8, 8, 3, 3, 7, 6, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['effect', 'motel', 'powder', 'grant', 'peace', 'mad', 'degree']
values = [8, 8, 3, 3, 7, 6, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5eb498')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sir', 'past', 'ride', 'pace', 'plate']","[4, 4, 2, 1, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sir', 'past', 'ride', 'pace', 'plate']
values = [4, 4, 2, 1, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#dc0b4f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pack', 'news', 'bullet', 'clay', 'front', 'food']","[4, 6, 1, 6, 3, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pack', 'news', 'bullet', 'clay', 'front', 'food']
values = [4, 6, 1, 6, 3, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1d2657')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['god', 'living', 'back', 'gain', 'drop', 'key']","[40, 40, 20, 30, 60, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['god', 'living', 'back', 'gain', 'drop', 'key']
values = [40, 40, 20, 30, 60, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7d8acc')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pocket', 'chance', 'vein']","[1, 7, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pocket', 'chance', 'vein']
values = [1, 7, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#bf3687')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pocket', 'feed', 'player', 'face', 'status']","[50, 10, 50, 40, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pocket', 'feed', 'player', 'face', 'status']
values = [50, 10, 50, 40, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#bb74e3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['blow', 'cycle', 'lobby']","[4, 3, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['blow', 'cycle', 'lobby']
values = [4, 3, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#aea779')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['moon', 'stick']","[70, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['moon', 'stick']
values = [70, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#de99f6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['deck', 'butter']","[8, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['deck', 'butter']
values = [8, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c153d8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['disk', 'column']","[5, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['disk', 'column']
values = [5, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#adfa5a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['liquor', 'oil', 'whole']","[90, 60, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['liquor', 'oil', 'whole']
values = [90, 60, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#89a57f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['notice', 'force']","[30, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['notice', 'force']
values = [30, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#328653')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['second', 'stand', 'dark', 'sort', 'phone', 'drink']","[10, 80, 90, 50, 50, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['second', 'stand', 'dark', 'sort', 'phone', 'drink']
values = [10, 80, 90, 50, 50, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f6ffd3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tongue', 'cellar', 'noon', 'field', 'charm', 'killer']","[4, 1, 5, 1, 9, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tongue', 'cellar', 'noon', 'field', 'charm', 'killer']
values = [4, 1, 5, 1, 9, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#63de64')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['male', 'smell', 'power', 'knee', 'hen', 'car']","[4, 4, 9, 6, 4, -9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['male', 'smell', 'power', 'knee', 'hen', 'car']
values = [4, 4, 9, 6, 4, -9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e20f92')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bridge', 'force', 'role', 'aspect', 'talk', 'demand', 'access']","[40, 40, 80, 90, 30, 70, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bridge', 'force', 'role', 'aspect', 'talk', 'demand', 'access']
values = [40, 40, 80, 90, 30, 70, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4a9c58')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['essay', 'notice', 'market', 'pace', 'year', 'floor', 'lobby', 'mud']","[30, 30, 0, 0, 60, 60, 40, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['essay', 'notice', 'market', 'pace', 'year', 'floor', 'lobby', 'mud']
values = [30, 30, 0, 0, 60, 60, 40, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#cecebd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dealer', 'fit', 'scheme', 'cow', 'use', 'health', 'terror', 'trial']","[7, 2, 7, 9, 7, 1, 4, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dealer', 'fit', 'scheme', 'cow', 'use', 'health', 'terror', 'trial']
values = [7, 2, 7, 9, 7, 1, 4, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8cadab')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['scheme', 'campus', 'advice', 'lack']","[30, 40, 80, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['scheme', 'campus', 'advice', 'lack']
values = [30, 40, 80, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#bec0b0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['kind', 'lobby', 'flood', 'health']","[6, 6, 2, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['kind', 'lobby', 'flood', 'health']
values = [6, 6, 2, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e5c3d6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sorry', 'length', 'lock', 'client', 'person', 'battle']","[90, 50, 70, 50, 20, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sorry', 'length', 'lock', 'client', 'person', 'battle']
values = [90, 50, 70, 50, 20, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#86292a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['light', 'end', 'stem']","[6, 1, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['light', 'end', 'stem']
values = [6, 1, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#245bbb')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hill', 'survey']","[6, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hill', 'survey']
values = [6, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#00740e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mature', 'parade', 'bunk']","[7, 9, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mature', 'parade', 'bunk']
values = [7, 9, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ac26ad')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['novel', 'grant', 'nobody', 'dollar', 'sign', 'coast', 'dozen']","[3, 8, 2, 7, 8, 3, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['novel', 'grant', 'nobody', 'dollar', 'sign', 'coast', 'dozen']
values = [3, 8, 2, 7, 8, 3, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#51911b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['window', 'opera', 'aspect', 'cancer', 'love', 'name', 'legend', 'talk']","[7, 8, 9, 7, 2, 6, 5, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['window', 'opera', 'aspect', 'cancer', 'love', 'name', 'legend', 'talk']
values = [7, 8, 9, 7, 2, 6, 5, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7f2e08')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['trial', 'ideal']","[6, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['trial', 'ideal']
values = [6, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1fdddd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bullet', 'means', 'cellar', 'bit', 'myth']","[5, 7, 6, 4, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bullet', 'means', 'cellar', 'bit', 'myth']
values = [5, 7, 6, 4, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a8bba4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['count', 'feed', 'land', 'mean', 'music', 'amount', 'care', 'blood', 'hair']","[70, 10, 70, 70, 10, 10, 70, 50, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['count', 'feed', 'land', 'mean', 'music', 'amount', 'care', 'blood', 'hair']
values = [70, 10, 70, 70, 10, 10, 70, 50, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d00311')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['serum', 'jaw', 'bit', 'access', 'result', 'row', 'sir']","[20, 70, 50, 40, 50, 20, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['serum', 'jaw', 'bit', 'access', 'result', 'row', 'sir']
values = [20, 70, 50, 40, 50, 20, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#dd255a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['jet', 'refund', 'way', 'blood', 'gang', 'desk', 'term', 'task']","[10, 60, 50, 60, 50, 30, 30, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['jet', 'refund', 'way', 'blood', 'gang', 'desk', 'term', 'task']
values = [10, 60, 50, 60, 50, 30, 30, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6aa811')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pound', 'budget', 'mail']","[8, 1, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pound', 'budget', 'mail']
values = [8, 1, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6e678b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['course', 'grade', 'honor', 'dust', 'pace']","[10000000, 10, 10, 1000000000, 1000000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['course', 'grade', 'honor', 'dust', 'pace']
values = [10000000, 10, 10, 1000000000, 1000000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c00e03')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gain', 'aim', 'day']","[6, 1, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gain', 'aim', 'day']
values = [6, 1, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#281b45')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hand', 'fly', 'career', 'regard', 'pure', 'yard', 'flow', 'twenty', 'error']","[4, 7, 2, 5, 9, 1, 7, 7, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hand', 'fly', 'career', 'regard', 'pure', 'yard', 'flow', 'twenty', 'error']
values = [4, 7, 2, 5, 9, 1, 7, 7, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#23f1cb')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bullet', 'depth', 'memory', 'fist']","[40, 90, 0, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bullet', 'depth', 'memory', 'fist']
values = [40, 90, 0, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#932fb3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['factor', 'guard']","[10000000, 10000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['factor', 'guard']
values = [10000000, 10000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d43457')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['earth', 'flood', 'cotton', 'aid', 'heart']","[5, 6, 5, 5, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['earth', 'flood', 'cotton', 'aid', 'heart']
values = [5, 6, 5, 5, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#af9b19')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['south', 'ease', 'call', 'role', 'random']","[3, 1, 8, 9, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['south', 'ease', 'call', 'role', 'random']
values = [3, 1, 8, 9, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5af326')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['earth', 'scheme', 'temple', 'salt', 'letter', 'one', 'jazz', 'combat']","[8, 3, 4, 4, 6, 5, 7, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['earth', 'scheme', 'temple', 'salt', 'letter', 'one', 'jazz', 'combat']
values = [8, 3, 4, 4, 6, 5, 7, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#61a7f9')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['milk', 'plug', 'cabin', 'pack', 'boat', 'love', 'class', 'demand', 'dark']","[8, 7, 0, 2, 8, 1, 9, 4, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['milk', 'plug', 'cabin', 'pack', 'boat', 'love', 'class', 'demand', 'dark']
values = [8, 7, 0, 2, 8, 1, 9, 4, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#79c7d7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['friend', 'reader', 'vein', 'hung', 'party']","[3, 7, 9, 7, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['friend', 'reader', 'vein', 'hung', 'party']
values = [3, 7, 9, 7, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#96c221')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mean', 'use']","[7, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mean', 'use']
values = [7, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#affcfe')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['self', 'drift']","[8, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['self', 'drift']
values = [8, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5858c4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tip', 'garden', 'golf', 'tissue', 'face']","[7, 3, 3, 4, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tip', 'garden', 'golf', 'tissue', 'face']
values = [7, 3, 3, 4, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a353d1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['class', 'trust', 'bath', 'vote', 'watch']","[9, 8, 7, 3, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['class', 'trust', 'bath', 'vote', 'watch']
values = [9, 8, 7, 3, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#add23d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['door', 'couple', 'system', 'comedy', 'call', 'base']","[8, 5, 1, 4, -2, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['door', 'couple', 'system', 'comedy', 'call', 'base']
values = [8, 5, 1, 4, -2, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e10ce6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['depth', 'set', 'damage', 'ward']","[-9, 7, -9, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['depth', 'set', 'damage', 'ward']
values = [-9, 7, -9, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#977273')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['name', 'goal', 'whisky', 'person', 'wire', 'harbor', 'sex', 'board', 'mouth']","[2, 3, 4, 6, 5, 8, 7, 9, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['name', 'goal', 'whisky', 'person', 'wire', 'harbor', 'sex', 'board', 'mouth']
values = [2, 3, 4, 6, 5, 8, 7, 9, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#59c20e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['care', 'jaw', 'sugar', 'sound', 'return', 'claim']","[10, 80, 20, 40, 40, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['care', 'jaw', 'sugar', 'sound', 'return', 'claim']
values = [10, 80, 20, 40, 40, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#959ce7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['west', 'plant', 'crash', 'feel', 'target']","[60, 60, 20, 10, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['west', 'plant', 'crash', 'feel', 'target']
values = [60, 60, 20, 10, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#95e304')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['heat', 'mad']","[7, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['heat', 'mad']
values = [7, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1e59fb')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['form', 'water', 'action', 'figure', 'run']","[4, 4, 1, 4, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['form', 'water', 'action', 'figure', 'run']
values = [4, 4, 1, 4, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#15b8f8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['smoke', 'dollar', 'guest', 'search', 'sum', 'aim', 'buffer']","[2, 5, 5, 2, 6, 7, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['smoke', 'dollar', 'guest', 'search', 'sum', 'aim', 'buffer']
values = [2, 5, 5, 2, 6, 7, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7978f4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wall', 'left']","[90, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wall', 'left']
values = [90, 90]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#36aaba')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mother', 'degree', 'merger', 'body']","[9, 3, 1, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mother', 'degree', 'merger', 'body']
values = [9, 3, 1, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5854b8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pink', 'iron', 'dining']","[8, 3, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pink', 'iron', 'dining']
values = [8, 3, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6b1120')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['foam', 'charge', 'anger', 'cycle']","[1000000000, 1000000000, 100, 100000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['foam', 'charge', 'anger', 'cycle']
values = [1000000000, 1000000000, 100, 100000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1f033f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gate', 'wall', 'table', 'cancer', 'lady']","[3, 4, 9, 6, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gate', 'wall', 'table', 'cancer', 'lady']
values = [3, 4, 9, 6, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4b37a9')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hole', 'start', 'flesh']","[3, 1, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hole', 'start', 'flesh']
values = [3, 1, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#19e3a9')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['center', 'demand', 'art']","[10, 90, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['center', 'demand', 'art']
values = [10, 90, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2427e2')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fool', 'living', 'faint', 'tire']","[9, 8, 7, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fool', 'living', 'faint', 'tire']
values = [9, 8, 7, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3d1902')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sun', 'reader', 'skin', 'noise', 'policy']","[5, 9, 9, 4, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sun', 'reader', 'skin', 'noise', 'policy']
values = [5, 9, 9, 4, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#59e53c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['girl', 'feed', 'sweat', 'court']","[4, 8, 4, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['girl', 'feed', 'sweat', 'court']
values = [4, 8, 4, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#bf97c4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['review', 'car', 'leg', 'winter', 'grain']","[50, 60, 30, 40, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['review', 'car', 'leg', 'winter', 'grain']
values = [50, 60, 30, 40, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4dc693')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['combat', 'belt', 'harbor', 'amount', 'beard', 'fee', 'blood', 'escape', 'salt']","[70, 70, 40, 50, 10, 40, 90, 90, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['combat', 'belt', 'harbor', 'amount', 'beard', 'fee', 'blood', 'escape', 'salt']
values = [70, 70, 40, 50, 10, 40, 90, 90, 90]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#eb4fa5')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wise', 'holder', 'dog', 'cross', 'beef']","[8, 1, -2, 8, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wise', 'holder', 'dog', 'cross', 'beef']
values = [8, 1, -2, 8, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#82c71c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['honor', 'week', 'bird', 'path', 'adult', 'matter', 'mile']","[40, 20, 30, 10, 30, 60, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['honor', 'week', 'bird', 'path', 'adult', 'matter', 'mile']
values = [40, 20, 30, 10, 30, 60, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#67527d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hen', 'hope', 'bill', 'poetry']","[1, 7, 3, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hen', 'hope', 'bill', 'poetry']
values = [1, 7, 3, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1f8761')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['guilt', 'page', 'refund', 'murder', 'dirt', 'height']","[70, 10, 20, 90, 60, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['guilt', 'page', 'refund', 'murder', 'dirt', 'height']
values = [70, 10, 20, 90, 60, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#33d4c8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['music', 'gain', 'post', 'star', 'judge']","[3, 4, 7, 1, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['music', 'gain', 'post', 'star', 'judge']
values = [3, 4, 7, 1, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#85b3ed')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bank', 'chest', 'range', 'survey', 'cost', 'end', 'fluid', 'tent']","[4, 9, 4, 7, 5, 4, 9, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bank', 'chest', 'range', 'survey', 'cost', 'end', 'fluid', 'tent']
values = [4, 9, 4, 7, 5, 4, 9, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f4519f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['phone', 'mad', 'mouth', 'guest', 'pocket']","[1000000, 100, 1000, 10000000, 1000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['phone', 'mad', 'mouth', 'guest', 'pocket']
values = [1000000, 100, 1000, 10000000, 1000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#97c669')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['season', 'dress', 'choice', 'year', 'strip', 'phrase']","[70, 80, 90, 10, 40, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['season', 'dress', 'choice', 'year', 'strip', 'phrase']
values = [70, 80, 90, 10, 40, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#94d4de')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['panel', 'hour', 'police', 'aspect', 'return', 'maid', 'glory', 'tape', 'skill']","[90, 60, 20, 80, 30, 10, 20, 60, 20]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['panel', 'hour', 'police', 'aspect', 'return', 'maid', 'glory', 'tape', 'skill']
values = [90, 60, 20, 80, 30, 10, 20, 60, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c0790b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['post', 'medium', 'spread', 'gun', 'grade']","[60, 20, 80, 20, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['post', 'medium', 'spread', 'gun', 'grade']
values = [60, 20, 80, 20, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a4a141')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['estate', 'reach', 'ice', 'match', 'fall', 'nation']","[4, 8, 2, 6, 4, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['estate', 'reach', 'ice', 'match', 'fall', 'nation']
values = [4, 8, 2, 6, 4, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0243ba')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sake', 'chin', 'supply', 'neck']","[7, 4, 3, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sake', 'chin', 'supply', 'neck']
values = [7, 4, 3, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6f81f1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['suite', 'cycle', 'center']","[2, 2, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['suite', 'cycle', 'center']
values = [2, 2, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ccf942')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['peace', 'knife', 'rifle', 'studio', 'wit', 'wound']","[70, 80, 10, 20, 10, 40]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['peace', 'knife', 'rifle', 'studio', 'wit', 'wound']
values = [70, 80, 10, 20, 10, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#11cb8e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dawn', 'fan', 'terror', 'school']","[5, 8, 3, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dawn', 'fan', 'terror', 'school']
values = [5, 8, 3, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#24cddc')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['issue', 'book', 'era']","[90, 20, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['issue', 'book', 'era']
values = [90, 20, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ff9989')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['guilt', 'noise', 'roof', 'motel', 'floor', 'wall']","[2, 9, 7, 3, 3, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['guilt', 'noise', 'roof', 'motel', 'floor', 'wall']
values = [2, 9, 7, 3, 3, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1908e9')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['vacuum', 'father', 'bread', 'weapon', 'race']","[100000000, 100000, 10000000, 1000, 1000000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vacuum', 'father', 'bread', 'weapon', 'race']
values = [100000000, 100000, 10000000, 1000, 1000000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9abc53')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cross', 'number', 'expert', 'square']","[30, 50, 90, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cross', 'number', 'expert', 'square']
values = [30, 50, 90, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#97894c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['goal', 'guide', 'driver', 'bank', 'power', 'living', 'step', 'club']","[10000, 100, 1000000, 10000, 100000000, 10000, 1000000, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['goal', 'guide', 'driver', 'bank', 'power', 'living', 'step', 'club']
values = [10000, 100, 1000000, 10000, 100000000, 10000, 1000000, 100000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6d5bef')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['brain', 'scope', 'savage']","[7, 2, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['brain', 'scope', 'savage']
values = [7, 2, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b7a0f4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['queen', 'ease', 'chief', 'set']","[7, 1, 1, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['queen', 'ease', 'chief', 'set']
values = [7, 1, 1, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0f1348')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['period', 'vision', 'car']","[6, 4, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['period', 'vision', 'car']
values = [6, 4, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ecde30')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sense', 'mode', 'relief']","[1, 2, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sense', 'mode', 'relief']
values = [1, 2, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#95d420')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wood', 'board', 'cure', 'herd', 'anode']","[5, 7, 3, 7, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wood', 'board', 'cure', 'herd', 'anode']
values = [5, 7, 3, 7, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d449e6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['guest', 'role', 'death', 'hunger']","[3, 3, 8, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['guest', 'role', 'death', 'hunger']
values = [3, 3, 8, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#aaa61a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cellar', 'flight', 'flash', 'wood', 'flood', 'school', 'luxury', 'pond']","[6, 3, 9, 6, 2, 1, 9, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cellar', 'flight', 'flash', 'wood', 'flood', 'school', 'luxury', 'pond']
values = [6, 3, 9, 6, 2, 1, 9, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d865ac')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['jar', 'plan', 'object', 'snake']","[5, 6, 7, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['jar', 'plan', 'object', 'snake']
values = [5, 6, 7, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1f766f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['detail', 'clerk', 'hour', 'cream']","[50, 90, 20, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['detail', 'clerk', 'hour', 'cream']
values = [50, 90, 20, 70]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d62ed1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dear', 'medium', 'access', 'issue']","[6, 6, 5, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dear', 'medium', 'access', 'issue']
values = [6, 6, 5, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e7c2c1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rain', 'course', 'combat', 'bottle', 'host', 'cream']","[2, 6, 1, 5, 7, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rain', 'course', 'combat', 'bottle', 'host', 'cream']
values = [2, 6, 1, 5, 7, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2285b5')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['motion', 'title', 'client']","[4, 3, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['motion', 'title', 'client']
values = [4, 3, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0b5361')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['garage', 'silver', 'spread', 'bone', 'wall', 'chest']","[9, -7, 8, 3, 2, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['garage', 'silver', 'spread', 'bone', 'wall', 'chest']
values = [9, -7, 8, 3, 2, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2c0a39')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['basis', 'remark', 'bag', 'weight']","[2, 7, 9, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['basis', 'remark', 'bag', 'weight']
values = [2, 7, 9, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ffdd24')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['vision', 'ship', 'scene']","[4, 7, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vision', 'ship', 'scene']
values = [4, 7, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#19b8c0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rule', 'lawyer', 'drunk', 'voyage']","[3, 4, 9, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rule', 'lawyer', 'drunk', 'voyage']
values = [3, 4, 9, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#50ecab')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['horror', 'music', 'fist']","[10000, 10, 1000000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['horror', 'music', 'fist']
values = [10000, 10, 1000000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#12efff')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sight', 'safety']","[8, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sight', 'safety']
values = [8, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3f9f37')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['doctor', 'soil', 'regime', 'novel']","[4, 5, 8, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['doctor', 'soil', 'regime', 'novel']
values = [4, 5, 8, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0356e0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['right', 'glass']","[20, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['right', 'glass']
values = [20, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e117da')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['model', 'lumber', 'danger', 'term']","[7, 6, 6, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['model', 'lumber', 'danger', 'term']
values = [7, 6, 6, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9b5bf2')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ticket', 'land', 'sir']","[3, 1, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ticket', 'land', 'sir']
values = [3, 1, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#dcaae7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fist', 'heart', 'wife', 'lack']","[40, 90, 80, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fist', 'heart', 'wife', 'lack']
values = [40, 90, 80, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b57449')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['course', 'point', 'cow', 'aid', 'post', 'today']","[2, 3, 4, 6, 6, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['course', 'point', 'cow', 'aid', 'post', 'today']
values = [2, 3, 4, 6, 6, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b9f8ff')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['steel', 'walk', 'wall', 'brass', 'bowl', 'vector', 'today', 'prison']","[2, 6, 8, 7, -3, 6, 1, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['steel', 'walk', 'wall', 'brass', 'bowl', 'vector', 'today', 'prison']
values = [2, 6, 8, 7, -3, 6, 1, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#bf25b3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pocket', 'switch', 'jar', 'grass']","[3, 2, 2, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pocket', 'switch', 'jar', 'grass']
values = [3, 2, 2, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#40f44f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['corps', 'drug', 'feed', 'random', 'song', 'shift', 'crew', 'guard']","[2, 3, 3, 8, 8, 6, 3, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['corps', 'drug', 'feed', 'random', 'song', 'shift', 'crew', 'guard']
values = [2, 3, 3, 8, 8, 6, 3, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#685d8d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['host', 'finger', 'sun', 'bar']","[3, 2, 1, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['host', 'finger', 'sun', 'bar']
values = [3, 2, 1, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4f6485')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sort', 'none']","[60, 30]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sort', 'none']
values = [60, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#be17ef')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['shop', 'poet', 'rock', 'rate', 'spirit']","[2, 6, 3, 8, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shop', 'poet', 'rock', 'rate', 'spirit']
values = [2, 6, 3, 8, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#34ec59')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['light', 'front', 'brush', 'base', 'cold', 'note']","[9, 7, 6, 6, 7, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['light', 'front', 'brush', 'base', 'cold', 'note']
values = [9, 7, 6, 6, 7, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ed16ee')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['feed', 'scope', 'risk', 'file', 'behalf']","[100000, 100000000, 10000000, 100, 100000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['feed', 'scope', 'risk', 'file', 'behalf']
values = [100000, 100000000, 10000000, 100, 100000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e088bd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['value', 'drug', 'luxury']","[6, 5, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['value', 'drug', 'luxury']
values = [6, 5, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2fa4cd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['charm', 'brick', 'ratio', 'press', 'stroke', 'cycle', 'spot', 'use', 'salary']","[9, 7, 9, 6, 3, 4, 4, 7, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['charm', 'brick', 'ratio', 'press', 'stroke', 'cycle', 'spot', 'use', 'salary']
values = [9, 7, 9, 6, 3, 4, 4, 7, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#484b2a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['moon', 'sea', 'column', 'card', 'vein', 'action', 'box', 'cream']","[7, 9, 2, 4, 6, 9, 5, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['moon', 'sea', 'column', 'card', 'vein', 'action', 'box', 'cream']
values = [7, 9, 2, 4, 6, 9, 5, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#cfa45d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['myth', 'plan', 'duty', 'length']","[40, 30, 60, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['myth', 'plan', 'duty', 'length']
values = [40, 30, 60, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4ebd5a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['area', 'victim', 'car']","[10, 10, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['area', 'victim', 'car']
values = [10, 10, 70]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#349e66')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['day', 'touch', 'budget', 'storm', 'minute', 'aid']","[4, 6, 5, 3, 7, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['day', 'touch', 'budget', 'storm', 'minute', 'aid']
values = [4, 6, 5, 3, 7, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ce55f8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rate', 'salary']","[4, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rate', 'salary']
values = [4, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#65717a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['youth', 'tool', 'coach', 'chin']","[2, 1, 8, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['youth', 'tool', 'coach', 'chin']
values = [2, 1, 8, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#af33e5')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['return', 'beard', 'lock', 'chorus']","[3, 8, 3, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['return', 'beard', 'lock', 'chorus']
values = [3, 8, 3, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f6dccd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dark', 'court', 'row', 'beat', 'horse', 'tea']","[7, 4, 7, 3, 8, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dark', 'court', 'row', 'beat', 'horse', 'tea']
values = [7, 4, 7, 3, 8, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#50713d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dollar', 'manner']","[30, 40]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dollar', 'manner']
values = [30, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8aaf45')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['worry', 'year', 'travel', 'choice', 'result']","[6, 1, 8, 3, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['worry', 'year', 'travel', 'choice', 'result']
values = [6, 1, 8, 3, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#caf720')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rice', 'police', 'show', 'root', 'flash']","[80, 30, 10, 80, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rice', 'police', 'show', 'root', 'flash']
values = [80, 30, 10, 80, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6f543b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bone', 'cheek']","[2, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bone', 'cheek']
values = [2, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8ef3db')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['path', 'prize', 'affair', 'south', 'iron']","[1, 2, 6, 4, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['path', 'prize', 'affair', 'south', 'iron']
values = [1, 2, 6, 4, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f99f5a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sitter', 'oil', 'color', 'figure', 'speed']","[2, 7, 7, 6, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sitter', 'oil', 'color', 'figure', 'speed']
values = [2, 7, 7, 6, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#34f234')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['camera', 'grave', 'iron', 'horror', 'artery']","[5, 1, 2, 1, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['camera', 'grave', 'iron', 'horror', 'artery']
values = [5, 1, 2, 1, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#08d4fa')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['whole', 'evil']","[4, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['whole', 'evil']
values = [4, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#78fa1c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['league', 'house', 'wave']","[6, 2, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['league', 'house', 'wave']
values = [6, 2, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#65d31b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['crowd', 'wound', 'leg', 'public', 'gay', 'lawyer']","[1, 5, 1, 6, 7, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crowd', 'wound', 'leg', 'public', 'gay', 'lawyer']
values = [1, 5, 1, 6, 7, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#38313f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['back', 'phase']","[9, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['back', 'phase']
values = [9, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ebcc4c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['phase', 'role', 'well', 'birth', 'box', 'engine', 'male']","[8, 3, 2, 3, 1, 8, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['phase', 'role', 'well', 'birth', 'box', 'engine', 'male']
values = [8, 3, 2, 3, 1, 8, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#24f45f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['staff', 'job', 'advice']","[3, 6, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['staff', 'job', 'advice']
values = [3, 6, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#89a475')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pistol', 'critic', 'list', 'area', 'pound']","[2, 3, 8, 9, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pistol', 'critic', 'list', 'area', 'pound']
values = [2, 3, 8, 9, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3600e4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sin', 'story', 'iron', 'water']","[3, -5, 1, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sin', 'story', 'iron', 'water']
values = [3, -5, 1, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4d16fe')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['law', 'novel', 'manner']","[50, 50, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['law', 'novel', 'manner']
values = [50, 50, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9dc0a5')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['art', 'fate', 'rock', 'talent', 'stick']","[4, 5, 5, 2, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['art', 'fate', 'rock', 'talent', 'stick']
values = [4, 5, 5, 2, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#df9f79')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['roof', 'grain', 'tongue', 'budget', 'pure', 'dear']","[1, 4, 2, 5, 1, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['roof', 'grain', 'tongue', 'budget', 'pure', 'dear']
values = [1, 4, 2, 5, 1, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#800ae3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['skill', 'pain', 'mind', 'noise']","[1, 1, 6, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['skill', 'pain', 'mind', 'noise']
values = [1, 1, 6, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#896ac1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['brass', 'drift', 'act', 'wealth']","[5, 7, 8, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['brass', 'drift', 'act', 'wealth']
values = [5, 7, 8, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c97a10')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['branch', 'sense']","[8, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['branch', 'sense']
values = [8, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d97d4d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['field', 'limit', 'memory']","[10, 30, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['field', 'limit', 'memory']
values = [10, 30, 70]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#23beba')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['yard', 'load', 'length', 'pound', 'dozen']","[3, 4, 2, 4, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['yard', 'load', 'length', 'pound', 'dozen']
values = [3, 4, 2, 4, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8fce3c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['none', 'day', 'injury', 'bag', 'shot']","[4, 7, 5, 5, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['none', 'day', 'injury', 'bag', 'shot']
values = [4, 7, 5, 5, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#fbaf89')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['art', 'mark', 'killer', 'bowl']","[4, 9, 5, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['art', 'mark', 'killer', 'bowl']
values = [4, 9, 5, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#54ccd7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['brand', 'price', 'target', 'end', 'nobody', 'drink']","[9, 9, 9, 4, 9, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['brand', 'price', 'target', 'end', 'nobody', 'drink']
values = [9, 9, 9, 4, 9, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#086bc1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stay', 'bullet', 'post']","[5, 8, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stay', 'bullet', 'post']
values = [5, 8, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1ef147')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['forth', 'car', 'club', 'wisdom']","[8, 5, 4, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['forth', 'car', 'club', 'wisdom']
values = [8, 5, 4, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9cba44')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['camp', 'regard', 'sample', 'today']","[4, 8, 1, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['camp', 'regard', 'sample', 'today']
values = [4, 8, 1, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6ff634')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['birth', 'root', 'grain']","[9, 6, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['birth', 'root', 'grain']
values = [9, 6, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ff4aac')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['matter', 'ratio', 'fault', 'rain', 'self']","[80, 50, 80, 80, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['matter', 'ratio', 'fault', 'rain', 'self']
values = [80, 50, 80, 80, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#be650e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bench', 'vice', 'fit']","[-7, 9, -7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bench', 'vice', 'fit']
values = [-7, 9, -7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#15089f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wise', 'row', 'today', 'fog', 'snow', 'point', 'carbon', 'victim']","[70, 10, 90, 50, 90, 10, 40, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wise', 'row', 'today', 'fog', 'snow', 'point', 'carbon', 'victim']
values = [70, 10, 90, 50, 90, 10, 40, 70]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#270006')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['poetry', 'excuse', 'post']","[5, 5, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['poetry', 'excuse', 'post']
values = [5, 5, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#559347')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sale', 'pain', 'mind', 'neck', 'study', 'reply']","[4, 1, 6, 2, 6, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sale', 'pain', 'mind', 'neck', 'study', 'reply']
values = [4, 1, 6, 2, 6, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b2e895')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mud', 'wonder', 'powder']","[40, 40, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mud', 'wonder', 'powder']
values = [40, 40, 90]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5b24c5')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['flight', 'grace', 'shop', 'marine', 'suite', 'paint', 'fuel']","[6, 5, 2, 7, 3, 5, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['flight', 'grace', 'shop', 'marine', 'suite', 'paint', 'fuel']
values = [6, 5, 2, 7, 3, 5, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#775167')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['vice', 'set', 'target', 'well']","[0, 9, 4, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vice', 'set', 'target', 'well']
values = [0, 9, 4, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6fc92a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['agent', 'use', 'health', 'lead', 'bath', 'loss']","[9, 1, 3, 5, 4, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['agent', 'use', 'health', 'lead', 'bath', 'loss']
values = [9, 1, 3, 5, 4, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6981f4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['line', 'pride', 'mouth', 'share', 'voice', 'midst']","[1, 4, 7, 7, 8, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['line', 'pride', 'mouth', 'share', 'voice', 'midst']
values = [1, 4, 7, 7, 8, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a2a1de')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['member', 'hell', 'pure', 'bay', 'shell', 'crop', 'burden', 'scheme', 'signal']","[1, -1, 6, 5, 8, 9, 6, 3, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['member', 'hell', 'pure', 'bay', 'shell', 'crop', 'burden', 'scheme', 'signal']
values = [1, -1, 6, 5, 8, 9, 6, 3, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#87a125')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['leg', 'engine', 'sphere', 'wage', 'hair', 'shot', 'amount', 'seat', 'plenty']","[9, 9, 8, 9, 9, 4, 4, 7, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['leg', 'engine', 'sphere', 'wage', 'hair', 'shot', 'amount', 'seat', 'plenty']
values = [9, 9, 8, 9, 9, 4, 4, 7, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#499d93')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bed', 'pain']","[8, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bed', 'pain']
values = [8, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8daef4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['owner', 'past', 'result', 'lot', 'input', 'escape', 'degree']","[3, 1, 1, 6, 9, 8, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['owner', 'past', 'result', 'lot', 'input', 'escape', 'degree']
values = [3, 1, 1, 6, 9, 8, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#114f19')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['result', 'hall', 'pitch', 'brain', 'post']","[5, 5, 9, 9, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['result', 'hall', 'pitch', 'brain', 'post']
values = [5, 5, 9, 9, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6fabab')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['outfit', 'farmer', 'patent', 'bay']","[2, 2, 2, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['outfit', 'farmer', 'patent', 'bay']
values = [2, 2, 2, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e54264')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['theme', 'speech']","[8, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['theme', 'speech']
values = [8, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7b93d4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ticket', 'wine', 'west', 'pocket', 'laugh', 'excess']","[5, 4, 9, 4, 2, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ticket', 'wine', 'west', 'pocket', 'laugh', 'excess']
values = [5, 4, 9, 4, 2, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e3045c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sale', 'dining', 'coach']","[4, 6, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sale', 'dining', 'coach']
values = [4, 6, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#76b136')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['medium', 'baby', 'war', 'bottle', 'hill', 'stress']","[1000, 10000, 1000000, 1, 100000, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['medium', 'baby', 'war', 'bottle', 'hill', 'stress']
values = [1000, 10000, 1000000, 1, 100000, 100000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3a605e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sport', 'heart', 'campus', 'center', 'mature']","[2, 6, 3, 5, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sport', 'heart', 'campus', 'center', 'mature']
values = [2, 6, 3, 5, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9b3f8f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['image', 'bath', 'area', 'tissue', 'ideal', 'vein']","[1000000000, 1000000000, 10000, 1000000000, 10, 10000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['image', 'bath', 'area', 'tissue', 'ideal', 'vein']
values = [1000000000, 1000000000, 10000, 1000000000, 10, 10000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#37266e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sorry', 'rifle', 'pay', 'forest', 'hell']","[7, 5, 7, 3, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sorry', 'rifle', 'pay', 'forest', 'hell']
values = [7, 5, 7, 3, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a29de8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['word', 'ocean', 'rain', 'week']","[30, 10, 40, 90]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['word', 'ocean', 'rain', 'week']
values = [30, 10, 40, 90]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#70d889')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['jar', 'pitch']","[2, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['jar', 'pitch']
values = [2, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9eb858')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hay', 'pocket', 'anyone']","[2, 5, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hay', 'pocket', 'anyone']
values = [2, 5, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#512116')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bond', 'city', 'belt', 'force']","[1, 9, 7, -5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bond', 'city', 'belt', 'force']
values = [1, 9, 7, -5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8aa36b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['source', 'campus', 'cost']","[30, 80, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['source', 'campus', 'cost']
values = [30, 80, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8bb369')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['editor', 'soul', 'ticket', 'brick', 'age', 'focus', 'tape']","[9, 5, 3, 7, 9, 7, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['editor', 'soul', 'ticket', 'brick', 'age', 'focus', 'tape']
values = [9, 5, 3, 7, 9, 7, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#58851f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bottle', 'nature', 'widow', 'anyone', 'worker', 'tool', 'scene']","[1, 6, 9, 9, 7, 3, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bottle', 'nature', 'widow', 'anyone', 'worker', 'tool', 'scene']
values = [1, 6, 9, 9, 7, 3, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6d663e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['switch', 'one', 'prayer', 'cannot']","[1, 4, 9, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['switch', 'one', 'prayer', 'cannot']
values = [1, 4, 9, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8b1e9c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['vote', 'harm', 'beer', 'arc', 'jazz', 'truth']","[5, 4, 5, 4, 9, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vote', 'harm', 'beer', 'arc', 'jazz', 'truth']
values = [5, 4, 5, 4, 9, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ac298e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['roll', 'lesson', 'hope', 'town']","[20, 40, 80, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['roll', 'lesson', 'hope', 'town']
values = [20, 40, 80, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ec0c0d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['terror', 'mean', 'engine', 'buffer', 'grade']","[8, 7, 3, 8, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['terror', 'mean', 'engine', 'buffer', 'grade']
values = [8, 7, 3, 8, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0c38dd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['house', 'dirt', 'owner']","[1000, 100, 10000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['house', 'dirt', 'owner']
values = [1000, 100, 10000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1eb6e7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['axis', 'strike', 'access', 'volume']","[1, 4, 4, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['axis', 'strike', 'access', 'volume']
values = [1, 4, 4, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e79a5b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['growth', 'hell']","[7, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['growth', 'hell']
values = [7, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#125704')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['joke', 'bridge', 'wheel', 'plain', 'income', 'closet', 'class']","[40, 80, 90, 30, 40, 50, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['joke', 'bridge', 'wheel', 'plain', 'income', 'closet', 'class']
values = [40, 80, 90, 30, 40, 50, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2e3a17')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['play', 'reform', 'vision']","[9, 6, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['play', 'reform', 'vision']
values = [9, 6, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#95abb9')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['march', 'bag', 'meal', 'degree', 'mature']","[90, 40, 70, 80, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['march', 'bag', 'meal', 'degree', 'mature']
values = [90, 40, 70, 80, 90]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e34c35')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['entry', 'cool', 'week']","[6, 8, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['entry', 'cool', 'week']
values = [6, 8, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3330c5')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['left', 'finger', 'site', 'office', 'memory', 'killer', 'share', 'agent']","[4, 3, 2, 8, 3, 1, 6, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['left', 'finger', 'site', 'office', 'memory', 'killer', 'share', 'agent']
values = [4, 3, 2, 8, 3, 1, 6, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#fbda9f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wisdom', 'hurry', 'anyone']","[90, 90, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wisdom', 'hurry', 'anyone']
values = [90, 90, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#fb72c3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['client', 'dear']","[9, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['client', 'dear']
values = [9, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c0fa02')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hope', 'beef', 'grain', 'city']","[100000000, 100000, 1000000000, 1000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hope', 'beef', 'grain', 'city']
values = [100000000, 100000, 1000000000, 1000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3e4ba3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['outfit', 'eye']","[40, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['outfit', 'eye']
values = [40, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a087a1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['horror', 'regime', 'survey', 'series', 'room', 'count', 'essay', 'farm']","[5, 5, 5, 7, 4, 8, 2, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['horror', 'regime', 'survey', 'series', 'room', 'count', 'essay', 'farm']
values = [5, 5, 5, 7, 4, 8, 2, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#552f83')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['colony', 'help', 'row', 'good']","[70, 90, 90, 20]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['colony', 'help', 'row', 'good']
values = [70, 90, 90, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d2c0cb')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['silver', 'hero', 'snow', 'pilot', 'show']","[60, 30, 50, 0, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['silver', 'hero', 'snow', 'pilot', 'show']
values = [60, 30, 50, 0, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#db0ca9')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dawn', 'voyage', 'driver', 'origin']","[7, 9, 7, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dawn', 'voyage', 'driver', 'origin']
values = [7, 9, 7, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2a71e5')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fee', 'dealer']","[2, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fee', 'dealer']
values = [2, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3dba7d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['safety', 'pride']","[1, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['safety', 'pride']
values = [1, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ccee43')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['look', 'blow', 'bomb', 'mode']","[8, 6, 2, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['look', 'blow', 'bomb', 'mode']
values = [8, 6, 2, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#03b8cd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cellar', 'show', 'dance', 'trust', 'proof', 'blue']","[1, 5, 6, 7, 4, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cellar', 'show', 'dance', 'trust', 'proof', 'blue']
values = [1, 5, 6, 7, 4, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6022b6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fly', 'sauce', 'site', 'phase', 'story', 'humor', 'count', 'vertex', 'coat']","[5, 5, 5, 7, 8, 9, 5, 9, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fly', 'sauce', 'site', 'phase', 'story', 'humor', 'count', 'vertex', 'coat']
values = [5, 5, 5, 7, 8, 9, 5, 9, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3f4eb6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['prison', 'fault', 'mirror', 'cellar', 'tree']","[1, 4, 8, 3, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['prison', 'fault', 'mirror', 'cellar', 'tree']
values = [1, 4, 8, 3, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9c6243')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['guard', 'grant', 'muscle']","[2, 2, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['guard', 'grant', 'muscle']
values = [2, 2, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1f3bf0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['angle', 'county', 'stuff', 'answer', 'blonde', 'hand', 'strip', 'force']","[3, 4, 9, 3, 1, 6, 2, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['angle', 'county', 'stuff', 'answer', 'blonde', 'hand', 'strip', 'force']
values = [3, 4, 9, 3, 1, 6, 2, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a53e41')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sitter', 'vein', 'sound', 'faint', 'hat', 'piano', 'family']","[1000000, 10000, 1000000, 10, 1000, 100000, 10000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sitter', 'vein', 'sound', 'faint', 'hat', 'piano', 'family']
values = [1000000, 10000, 1000000, 10, 1000, 100000, 10000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#cee3cc')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ladder', 'trail', 'ticket', 'entry', 'use', 'plenty', 'fury']","[1, 2, 2, 3, 6, 6, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ladder', 'trail', 'ticket', 'entry', 'use', 'plenty', 'fury']
values = [1, 2, 2, 3, 6, 6, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#64899e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fact', 'axis', 'driver', 'access', 'harm', 'auto', 'rage']","[60, 70, 10, 70, 60, 60, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fact', 'axis', 'driver', 'access', 'harm', 'auto', 'rage']
values = [60, 70, 10, 70, 60, 60, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1ac75d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stake', 'writer', 'ear']","[80, 30, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stake', 'writer', 'ear']
values = [80, 30, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#62aef9')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['maid', 'effort']","[4, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['maid', 'effort']
values = [4, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#422732')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['carbon', 'latter']","[8, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['carbon', 'latter']
values = [8, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4bb274')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pile', 'color', 'drift']","[5, 4, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pile', 'color', 'drift']
values = [5, 4, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b86ce9')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gain', 'room', 'radar', 'shot', 'fan']","[9, 5, 7, 8, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gain', 'room', 'radar', 'shot', 'fan']
values = [9, 5, 7, 8, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#532ca0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['canvas', 'rice', 'peace', 'injury', 'need']","[2, 3, 8, 9, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['canvas', 'rice', 'peace', 'injury', 'need']
values = [2, 3, 8, 9, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#780617')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['secret', 'camera', 'legend', 'faint', 'sir', 'depth', 'bit', 'curve']","[4, 9, 6, 4, 4, 7, 2, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['secret', 'camera', 'legend', 'faint', 'sir', 'depth', 'bit', 'curve']
values = [4, 9, 6, 4, 4, 7, 2, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#708aa3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stage', 'lay', 'vacuum', 'uncle', 'bulk']","[20, 10, 40, 40, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stage', 'lay', 'vacuum', 'uncle', 'bulk']
values = [20, 10, 40, 40, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#aff0a8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['office', 'wheel']","[1, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['office', 'wheel']
values = [1, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#dd8ad8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pride', 'iron', 'skill', 'brass']","[6, 2, 5, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pride', 'iron', 'skill', 'brass']
values = [6, 2, 5, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1600b1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['roof', 'amount', 'trade', 'death', 'public', 'world', 'dive', 'bone', 'gold']","[1, 5, 3, 2, 9, 5, 8, 4, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['roof', 'amount', 'trade', 'death', 'public', 'world', 'dive', 'bone', 'gold']
values = [1, 5, 3, 2, 9, 5, 8, 4, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#11c3f6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['shift', 'form', 'step']","[8, 1, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shift', 'form', 'step']
values = [8, 1, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#83cc49')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['talk', 'sky', 'blonde']","[2, 9, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['talk', 'sky', 'blonde']
values = [2, 9, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#475d0d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wash', 'heart', 'army', 'whole', 'twelve']","[80, 50, 70, 10, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wash', 'heart', 'army', 'whole', 'twelve']
values = [80, 50, 70, 10, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#55568c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tea', 'suite']","[6, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tea', 'suite']
values = [6, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6f94e4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sleep', 'field', 'angle']","[30, 70, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sleep', 'field', 'angle']
values = [30, 70, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#48f88e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['maid', 'sum']","[60, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['maid', 'sum']
values = [60, 90]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#77365a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['edge', 'cream', 'pack', 'sign', 'call']","[7, 2, 4, 3, -2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['edge', 'cream', 'pack', 'sign', 'call']
values = [7, 2, 4, 3, -2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#22d037')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['voice', 'cap', 'ship', 'flux', 'type']","[9, 3, 4, 1, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['voice', 'cap', 'ship', 'flux', 'type']
values = [9, 3, 4, 1, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#01ec21')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['beach', 'mother', 'land', 'search']","[7, 5, 8, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['beach', 'mother', 'land', 'search']
values = [7, 5, 8, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#148e75')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['refund', 'teeth', 'fan', 'sin']","[90, 50, 50, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['refund', 'teeth', 'fan', 'sin']
values = [90, 50, 50, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7d0ee0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['task', 'threat', 'animal', 'income', 'shape', 'circle', 'horse']","[70, 10, 80, 50, 10, 80, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['task', 'threat', 'animal', 'income', 'shape', 'circle', 'horse']
values = [70, 10, 80, 50, 10, 80, 70]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#40dedf')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['appeal', 'access', 'atom']","[8, 2, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['appeal', 'access', 'atom']
values = [8, 2, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#bc280a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bullet', 'estate', 'hen']","[1, 5, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bullet', 'estate', 'hen']
values = [1, 5, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b4fa70')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['anger', 'guilt', 'hold', 'fight', 'range', 'ballet']","[9, 3, 1, 2, 5, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['anger', 'guilt', 'hold', 'fight', 'range', 'ballet']
values = [9, 3, 1, 2, 5, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a51751')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['status', 'cow', 'mail', 'circle', 'date', 'kind']","[4, 1, 5, 8, 2, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['status', 'cow', 'mail', 'circle', 'date', 'kind']
values = [4, 1, 5, 8, 2, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c1ccfe')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mercy', 'error', 'liquor', 'profit', 'radio', 'stand', 'gain']","[3, 2, 4, 8, 9, 2, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mercy', 'error', 'liquor', 'profit', 'radio', 'stand', 'gain']
values = [3, 2, 4, 8, 9, 2, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6e4ee4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['job', 'bridge']","[7, 0]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['job', 'bridge']
values = [7, 0]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6ad2f0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['east', 'skirt', 'guy']","[7, 4, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['east', 'skirt', 'guy']
values = [7, 4, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9f1d7d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['call', 'mode']","[9, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['call', 'mode']
values = [9, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#61a5f5')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['plan', 'cool', 'pastor', 'spread']","[3, 2, 2, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['plan', 'cool', 'pastor', 'spread']
values = [3, 2, 2, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b8ecb5')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['money', 'desk', 'suit', 'brand', 'crash', 'liquor']","[20, 50, 40, 40, 50, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['money', 'desk', 'suit', 'brand', 'crash', 'liquor']
values = [20, 50, 40, 40, 50, 70]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#69dbab')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['corps', 'supper', 'studio', 'maid']","[50, 90, 70, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['corps', 'supper', 'studio', 'maid']
values = [50, 90, 70, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c8f02f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['grass', 'rate', 'cow', 'idea']","[-6, 9, 2, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['grass', 'rate', 'cow', 'idea']
values = [-6, 9, 2, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3f3021')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['artery', 'storm', 'rock', 'rifle']","[5, 4, 7, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['artery', 'storm', 'rock', 'rifle']
values = [5, 4, 7, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ac513f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['curve', 'day', 'rear', 'wind', 'crime', 'group', 'stuff']","[6, 3, 1, 7, 2, 9, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['curve', 'day', 'rear', 'wind', 'crime', 'group', 'stuff']
values = [6, 3, 1, 7, 2, 9, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2eb4f5')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['money', 'bride']","[2, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['money', 'bride']
values = [2, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#73a8cd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cabin', 'stock', 'radar', 'south', 'side']","[3, 9, 1, 6, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cabin', 'stock', 'radar', 'south', 'side']
values = [3, 9, 1, 6, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#841b5e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ideal', 'rage', 'tie', 'basis', 'answer', 'stream']","[1, 1, 3, 9, 7, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ideal', 'rage', 'tie', 'basis', 'answer', 'stream']
values = [1, 1, 3, 9, 7, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7c9174')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gun', 'hero', 'opera', 'vacuum', 'cycle', 'claim', 'thirty', 'shame']","[2, 1, 6, 1, 3, 6, 5, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gun', 'hero', 'opera', 'vacuum', 'cycle', 'claim', 'thirty', 'shame']
values = [2, 1, 6, 1, 3, 6, 5, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0711ca')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sand', 'pride', 'floor', 'tissue', 'pure', 'club']","[4, -6, 1, 1, 6, -1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sand', 'pride', 'floor', 'tissue', 'pure', 'club']
values = [4, -6, 1, 1, 6, -1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a8e731')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['throat', 'liquid', 'dirt', 'female', 'trip', 'cellar', 'stick']","[7, 7, -1, 8, 3, -9, -5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['throat', 'liquid', 'dirt', 'female', 'trip', 'cellar', 'stick']
values = [7, 7, -1, 8, 3, -9, -5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a15386')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['soul', 'dome', 'shell']","[4, 2, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['soul', 'dome', 'shell']
values = [4, 2, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f7b3d8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bundle', 'step', 'walk', 'circle', 'birth', 'agent']","[80, 50, 80, 90, 70, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bundle', 'step', 'walk', 'circle', 'birth', 'agent']
values = [80, 50, 80, 90, 70, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e49386')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['estate', 'mold', 'author', 'sake', 'warmth']","[3, 4, 3, 8, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['estate', 'mold', 'author', 'sake', 'warmth']
values = [3, 4, 3, 8, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#19b616')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['north', 'threat', 'match', 'artery', 'prayer', 'case', 'pack']","[9, 2, 3, 1, 6, 9, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['north', 'threat', 'match', 'artery', 'prayer', 'case', 'pack']
values = [9, 2, 3, 1, 6, 9, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2c7a98')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['knee', 'campus', 'till', 'panic', 'worry', 'bare', 'crisis']","[7, 7, 5, 9, -6, -6, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['knee', 'campus', 'till', 'panic', 'worry', 'bare', 'crisis']
values = [7, 7, 5, 9, -6, -6, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f12ae4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['period', 'god', 'rock', 'sin', 'coast', 'test']","[2, 4, 1, 6, 2, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['period', 'god', 'rock', 'sin', 'coast', 'test']
values = [2, 4, 1, 6, 2, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#477c99')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['milk', 'opera']","[8, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['milk', 'opera']
values = [8, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a03ad3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['unit', 'anode']","[-8, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['unit', 'anode']
values = [-8, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c28886')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hour', 'air', 'skill', 'kind', 'regime']","[9, 9, 9, 9, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hour', 'air', 'skill', 'kind', 'regime']
values = [9, 9, 9, 9, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5002af')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['truck', 'wagon', 'case', 'race']","[8, 6, 7, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['truck', 'wagon', 'case', 'race']
values = [8, 6, 7, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f3738d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tent', 'part']","[70, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tent', 'part']
values = [70, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4c0ca7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['card', 'shop', 'taste', 'bullet']","[1000000, 10000, 1000, 1000000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['card', 'shop', 'taste', 'bullet']
values = [1000000, 10000, 1000, 1000000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#101907')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pay', 'gain']","[2, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pay', 'gain']
values = [2, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#59e1a9')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['opera', 'cash', 'part', 'police', 'critic']","[0, 5, 3, 0, 0]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['opera', 'cash', 'part', 'police', 'critic']
values = [0, 5, 3, 0, 0]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4930e6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lack', 'stay']","[9, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lack', 'stay']
values = [9, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d68585')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cabin', 'host', 'plenty', 'heard', 'style', 'strike']","[70, 90, 60, 90, 30, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cabin', 'host', 'plenty', 'heard', 'style', 'strike']
values = [70, 90, 60, 90, 30, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a387ac')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['touch', 'coal', 'bride']","[3, 6, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['touch', 'coal', 'bride']
values = [3, 6, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2afe3e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['power', 'care', 'amount', 'cross']","[5, 2, 6, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['power', 'care', 'amount', 'cross']
values = [5, 2, 6, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a937f8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bus', 'water']","[-8, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bus', 'water']
values = [-8, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#22ee3c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ballet', 'half', 'minute', 'notion', 'ratio']","[30, 10, 80, 30, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ballet', 'half', 'minute', 'notion', 'ratio']
values = [30, 10, 80, 30, 90]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8d8fe6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bus', 'text', 'input', 'check', 'series', 'ranch', 'heard', 'access', 'sweat']","[2, 8, 7, 5, 1, 3, 2, 4, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bus', 'text', 'input', 'check', 'series', 'ranch', 'heard', 'access', 'sweat']
values = [2, 8, 7, 5, 1, 3, 2, 4, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9b7694')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['step', 'key', 'sweat']","[4, 9, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['step', 'key', 'sweat']
values = [4, 9, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#750554')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tent', 'dancer', 'affair']","[70, 70, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tent', 'dancer', 'affair']
values = [70, 70, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0ff3b0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cloth', 'plane', 'region', 'hero', 'gain', 'canvas', 'need', 'cash']","[3, 8, 3, 4, 9, 8, 6, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cloth', 'plane', 'region', 'hero', 'gain', 'canvas', 'need', 'cash']
values = [3, 8, 3, 4, 9, 8, 6, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3c272b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bench', 'colony', 'blue', 'honey', 'attack']","[4, 7, 7, 1, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bench', 'colony', 'blue', 'honey', 'attack']
values = [4, 7, 7, 1, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#938618')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['series', 'sound', 'rest', 'youth', 'sleep', 'notice', 'till', 'leg', 'survey']","[40, 90, 10, 80, 70, 60, 20, 90, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['series', 'sound', 'rest', 'youth', 'sleep', 'notice', 'till', 'leg', 'survey']
values = [40, 90, 10, 80, 70, 60, 20, 90, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7758f5')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['west', 'truck', 'barn', 'yield', 'street', 'budget']","[20, 30, 70, 60, 30, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['west', 'truck', 'barn', 'yield', 'street', 'budget']
values = [20, 30, 70, 60, 30, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#fe6d21')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['travel', 'visit', 'air', 'butter']","[60, 40, 60, 40]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['travel', 'visit', 'air', 'butter']
values = [60, 40, 60, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#30cd9f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ring', 'cow']","[1, -7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ring', 'cow']
values = [1, -7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#bd1a08')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['boy', 'bank']","[2, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['boy', 'bank']
values = [2, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ca22b6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['camera', 'savage', 'salt']","[7, 9, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['camera', 'savage', 'salt']
values = [7, 9, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#af36cd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['credit', 'bit', 'blue', 'pond']","[7, 9, 2, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['credit', 'bit', 'blue', 'pond']
values = [7, 9, 2, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#55c660')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['screen', 'author', 'ten']","[9, 1, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['screen', 'author', 'ten']
values = [9, 1, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a11508')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sale', 'ball', 'tie', 'jet', 'bag']","[3, 1, 5, 1, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sale', 'ball', 'tie', 'jet', 'bag']
values = [3, 1, 5, 1, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#493b5a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['desire', 'site', 'gun', 'storm', 'feel', 'combat']","[9, 9, 5, 6, -7, -5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['desire', 'site', 'gun', 'storm', 'feel', 'combat']
values = [9, 9, 5, 6, -7, -5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1a9405')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['coat', 'gain', 'dealer', 'cry']","[20, 30, 50, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['coat', 'gain', 'dealer', 'cry']
values = [20, 30, 50, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7b28af')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['drink', 'cut', 'stone', 'tone', 'budget', 'matter', 'worth']","[9, 9, 4, 1, 6, 1, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drink', 'cut', 'stone', 'tone', 'budget', 'matter', 'worth']
values = [9, 9, 4, 1, 6, 1, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7b1e27')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['door', 'market', 'task', 'nation', 'need']","[6, 8, 8, 2, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['door', 'market', 'task', 'nation', 'need']
values = [6, 8, 8, 2, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#14bc74')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bullet', 'threat', 'plenty', 'image', 'task']","[9, 8, 3, 8, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bullet', 'threat', 'plenty', 'image', 'task']
values = [9, 8, 3, 8, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f1a8e3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['order', 'patrol', 'blind', 'dirt', 'step', 'range']","[9, 6, 2, 2, 1, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['order', 'patrol', 'blind', 'dirt', 'step', 'range']
values = [9, 6, 2, 2, 1, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0d82f1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fish', 'office', 'pastor', 'window', 'impact', 'lesson', 'mother', 'gas', 'volume']","[7, 4, 1, 9, 7, 4, 7, 1, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fish', 'office', 'pastor', 'window', 'impact', 'lesson', 'mother', 'gas', 'volume']
values = [7, 4, 1, 9, 7, 4, 7, 1, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#cdbaf0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cover', 'text', 'gift']","[10, 30, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cover', 'text', 'gift']
values = [10, 30, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#114917')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['soil', 'wine', 'degree']","[4, 3, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['soil', 'wine', 'degree']
values = [4, 3, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0422ca')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stay', 'terror', 'rain', 'peace', 'prison', 'guide']","[9, 5, 1, 8, 5, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stay', 'terror', 'rain', 'peace', 'prison', 'guide']
values = [9, 5, 1, 8, 5, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#acaf16')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['museum', 'model', 'class']","[30, 30, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['museum', 'model', 'class']
values = [30, 30, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#dddefa')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['basis', 'advice', 'role', 'unity', 'award']","[3, 2, 6, 8, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['basis', 'advice', 'role', 'unity', 'award']
values = [3, 2, 6, 8, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1c4e68')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['panel', 'cure']","[1, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['panel', 'cure']
values = [1, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1bc8e1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['league', 'lot', 'artery', 'pile', 'list', 'cut', 'wall', 'stairs']","[1, 8, 5, 3, 7, 6, 7, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['league', 'lot', 'artery', 'pile', 'list', 'cut', 'wall', 'stairs']
values = [1, 8, 5, 3, 7, 6, 7, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#44b4c7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['number', 'sense', 'east', 'bit']","[6, 2, 7, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['number', 'sense', 'east', 'bit']
values = [6, 2, 7, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7a4082')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['test', 'style', 'slope', 'grave']","[20, 60, 70, 90]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['test', 'style', 'slope', 'grave']
values = [20, 60, 70, 90]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#77ab4b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gown', 'studio']","[7, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gown', 'studio']
values = [7, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8ff4d7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['month', 'device', 'dress', 'studio', 'board']","[1000000000, 10, 10, 1000, 10000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['month', 'device', 'dress', 'studio', 'board']
values = [1000000000, 10, 10, 1000, 10000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f9cbe7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['beach', 'rule', 'whisky', 'term']","[7, 1, 9, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['beach', 'rule', 'whisky', 'term']
values = [7, 1, 9, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2e3398')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lobby', 'fool', 'movie', 'soil']","[8, 1, 7, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lobby', 'fool', 'movie', 'soil']
values = [8, 1, 7, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a38c12')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cent', 'genius']","[6, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cent', 'genius']
values = [6, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#93a79f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['snake', 'boat', 'back']","[9, 5, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['snake', 'boat', 'back']
values = [9, 5, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b6954b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['death', 'money', 'making']","[4, 1, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['death', 'money', 'making']
values = [4, 1, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3c8fe8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['career', 'hole']","[80, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['career', 'hole']
values = [80, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2350f1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sin', 'rhythm', 'block', 'game']","[2, 8, 7, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sin', 'rhythm', 'block', 'game']
values = [2, 8, 7, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a80112')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['source', 'trap', 'bond', 'meat']","[70, 50, 90, 20]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['source', 'trap', 'bond', 'meat']
values = [70, 50, 90, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0ebabe')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['food', 'knife', 'tissue', 'hay', 'spread', 'cabin', 'life', 'winter', 'piano']","[90, 60, 50, 10, 40, 40, 60, 90, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['food', 'knife', 'tissue', 'hay', 'spread', 'cabin', 'life', 'winter', 'piano']
values = [90, 60, 50, 10, 40, 40, 60, 90, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#18ab9a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['show', 'tire']","[6, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['show', 'tire']
values = [6, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#bca4eb')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tax', 'lawyer', 'cry', 'valley', 'pound']","[5, 6, 5, 6, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tax', 'lawyer', 'cry', 'valley', 'pound']
values = [5, 6, 5, 6, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ff2773')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['clerk', 'cash']","[5, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['clerk', 'cash']
values = [5, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ea402e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['total', 'laugh', 'bird', 'garden', 'pool']","[8, 1, 1, 7, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['total', 'laugh', 'bird', 'garden', 'pool']
values = [8, 1, 1, 7, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0378ee')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['foam', 'mail', 'milk', 'threat']","[7, 1, 7, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['foam', 'mail', 'milk', 'threat']
values = [7, 1, 7, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#fd0356')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['job', 'label', 'manner']","[5, 3, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['job', 'label', 'manner']
values = [5, 3, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a0f4aa')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['middle', 'beam', 'class', 'root']","[2, 8, 6, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['middle', 'beam', 'class', 'root']
values = [2, 8, 6, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9e1d18')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pass', 'pilot', 'beef', 'plug', 'ring', 'sand', 'paint']","[90, 20, 30, 70, 90, 20, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pass', 'pilot', 'beef', 'plug', 'ring', 'sand', 'paint']
values = [90, 20, 30, 70, 90, 20, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#faaf7e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tongue', 'length', 'weapon']","[9, 2, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tongue', 'length', 'weapon']
values = [9, 2, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#764576')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['talent', 'latter', 'guy', 'storm', 'water', 'milk', 'way', 'strain', 'terror']","[4, 5, 3, 4, 4, 9, 6, 7, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['talent', 'latter', 'guy', 'storm', 'water', 'milk', 'way', 'strain', 'terror']
values = [4, 5, 3, 4, 4, 9, 6, 7, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f52743')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hunger', 'film', 'beauty', 'way', 'diet', 'hell']","[7, 5, 1, 7, 1, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hunger', 'film', 'beauty', 'way', 'diet', 'hell']
values = [7, 5, 1, 7, 1, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9c4673')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['art', 'impact', 'rage', 'income', 'desk']","[1, 0, 7, 7, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['art', 'impact', 'rage', 'income', 'desk']
values = [1, 0, 7, 7, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5173e6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['skill', 'oil', 'jail']","[1, 4, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['skill', 'oil', 'jail']
values = [1, 4, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#de1a9c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hole', 'cloud', 'review', 'heat', 'jacket']","[1, 2, 2, 9, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hole', 'cloud', 'review', 'heat', 'jacket']
values = [1, 2, 2, 9, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#acf758')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['moment', 'strike', 'bowl', 'metal']","[5, 8, 2, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['moment', 'strike', 'bowl', 'metal']
values = [5, 8, 2, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#83cfb6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['crisis', 'saline', 'sitter', 'signal', 'vice', 'stock']","[60, 90, 80, 70, 10, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crisis', 'saline', 'sitter', 'signal', 'vice', 'stock']
values = [60, 90, 80, 70, 10, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a5ae15')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wit', 'voice', 'point', 'crime', 'anyone']","[70, 70, 20, 70, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wit', 'voice', 'point', 'crime', 'anyone']
values = [70, 70, 20, 70, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#aa0c8b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['table', 'sex', 'file']","[90, 30, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['table', 'sex', 'file']
values = [90, 30, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0f983b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gold', 'record', 'count', 'wheel', 'parade', 'taxi']","[100000000, 100000, 10000, 10000000, 100, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gold', 'record', 'count', 'wheel', 'parade', 'taxi']
values = [100000000, 100000, 10000, 10000000, 100, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b64131')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['water', 'meal', 'bride', 'barrel', 'lip']","[0, 2, 6, 0, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['water', 'meal', 'bride', 'barrel', 'lip']
values = [0, 2, 6, 0, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2befdd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['factor', 'farm', 'get', 'gun', 'player']","[4, 5, 3, 1, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['factor', 'farm', 'get', 'gun', 'player']
values = [4, 5, 3, 1, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#048bec')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sound', 'law', 'kid', 'bridge', 'jail', 'corn', 'route']","[1, 7, 1, 6, 2, 6, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sound', 'law', 'kid', 'bridge', 'jail', 'corn', 'route']
values = [1, 7, 1, 6, 2, 6, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d820ef')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rage', 'bond']","[60, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rage', 'bond']
values = [60, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#913f62')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['expert', 'hotel']","[2, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['expert', 'hotel']
values = [2, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e0d225')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['future', 'snake', 'war']","[6, 6, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['future', 'snake', 'war']
values = [6, 6, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3ddb72')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['self', 'light', 'talk', 'cannot', 'paint', 'string', 'door']","[5, 2, 6, 6, 5, 6, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['self', 'light', 'talk', 'cannot', 'paint', 'string', 'door']
values = [5, 2, 6, 6, 5, 6, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#cc8783')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['danger', 'star']","[1, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['danger', 'star']
values = [1, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f5839d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stream', 'list']","[5, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stream', 'list']
values = [5, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#102672')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['canvas', 'cross', 'dark', 'foil', 'glass', 'wash']","[10000, 10000000, 1000000000, 100000000, 10000000, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['canvas', 'cross', 'dark', 'foil', 'glass', 'wash']
values = [10000, 10000000, 1000000000, 100000000, 10000000, 100000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#cf87ef')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pilot', 'luxury', 'item', 'bullet']","[10, 70, 20, 90]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pilot', 'luxury', 'item', 'bullet']
values = [10, 70, 20, 90]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#88fd2c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['paper', 'visit', 'desk', 'guard', 'bond', 'drop']","[0, 0, 40, 0, 60, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['paper', 'visit', 'desk', 'guard', 'bond', 'drop']
values = [0, 0, 40, 0, 60, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9d754f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['drift', 'roof', 'coast', 'weight', 'plate', 'trap', 'lap', 'boat', 'graph']","[1, 7, 8, 1, 7, 6, 7, 1, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drift', 'roof', 'coast', 'weight', 'plate', 'trap', 'lap', 'boat', 'graph']
values = [1, 7, 8, 1, 7, 6, 7, 1, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#97619c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['match', 'foot', 'friend', 'cotton', 'bullet', 'radar']","[90, 90, 60, 80, 90, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['match', 'foot', 'friend', 'cotton', 'bullet', 'radar']
values = [90, 90, 60, 80, 90, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1873b8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['play', 'whole']","[10000000, 10000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['play', 'whole']
values = [10000000, 10000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#bb9ae3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['place', 'bar']","[40, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['place', 'bar']
values = [40, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8c00c1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sitter', 'disk']","[1, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sitter', 'disk']
values = [1, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9b5dcc')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fog', 'bundle', 'wine', 'frame']","[2, 3, 9, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fog', 'bundle', 'wine', 'frame']
values = [2, 3, 9, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5332f6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['vertex', 'wife', 'north', 'ship', 'plenty', 'oil']","[9, 4, 2, 9, 2, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vertex', 'wife', 'north', 'ship', 'plenty', 'oil']
values = [9, 4, 2, 9, 2, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7ca06e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['news', 'poem', 'colony']","[2, 8, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['news', 'poem', 'colony']
values = [2, 8, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f4c3d8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stick', 'hunger', 'union', 'god', 'past', 'label', 'news']","[1, 7, 5, 4, 9, 1, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stick', 'hunger', 'union', 'god', 'past', 'label', 'news']
values = [1, 7, 5, 4, 9, 1, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8e1644')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['source', 'roof', 'code', 'road']","[3, 7, 9, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['source', 'roof', 'code', 'road']
values = [3, 7, 9, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3a9533')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['note', 'class', 'sample', 'fun', 'fluid', 'lady']","[5, 2, 2, 9, 6, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['note', 'class', 'sample', 'fun', 'fluid', 'lady']
values = [5, 2, 2, 9, 6, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#379913')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ball', 'soul', 'beer', 'goal']","[9, 9, 2, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ball', 'soul', 'beer', 'goal']
values = [9, 9, 2, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#749438')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['phase', 'luxury', 'help', 'wealth', 'part']","[60, 60, 50, 70, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['phase', 'luxury', 'help', 'wealth', 'part']
values = [60, 60, 50, 70, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#baecfb')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['block', 'artery', 'pilot', 'fee']","[6, 8, 5, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['block', 'artery', 'pilot', 'fee']
values = [6, 8, 5, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8beff3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['snake', 'bottle', 'job', 'skill']","[70, 80, 40, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['snake', 'bottle', 'job', 'skill']
values = [70, 80, 40, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#633359')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['laugh', 'mode', 'input', 'air', 'author', 'record']","[4, 5, 4, 1, 1, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['laugh', 'mode', 'input', 'air', 'author', 'record']
values = [4, 5, 4, 1, 1, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1023da')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['park', 'card', 'vote', 'career', 'worth', 'wine', 'test']","[3, 2, 2, 4, 5, 5, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['park', 'card', 'vote', 'career', 'worth', 'wine', 'test']
values = [3, 2, 2, 4, 5, 5, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#cf9790')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['blind', 'poet', 'member']","[40, 60, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['blind', 'poet', 'member']
values = [40, 60, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e81718')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bulk', 'winter', 'face']","[9, 6, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bulk', 'winter', 'face']
values = [9, 6, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0f7766')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['park', 'level', 'jacket', 'ward']","[7, 1, 5, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['park', 'level', 'jacket', 'ward']
values = [7, 1, 5, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#517e4f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['deal', 'break', 'harbor']","[9, 5, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['deal', 'break', 'harbor']
values = [9, 5, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9f5761')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stress', 'series', 'coach', 'fight', 'tail', 'guide']","[9, 9, 1, 7, 1, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stress', 'series', 'coach', 'fight', 'tail', 'guide']
values = [9, 9, 1, 7, 1, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d67f57')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['clay', 'god', 'seed', 'clerk']","[8, 6, 7, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['clay', 'god', 'seed', 'clerk']
values = [8, 6, 7, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c46512')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['carbon', 'path', 'steel', 'fate']","[6, 8, 7, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['carbon', 'path', 'steel', 'fate']
values = [6, 8, 7, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#93e323')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['maid', 'well', 'crew', 'report', 'affair']","[1, 4, 2, 7, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['maid', 'well', 'crew', 'report', 'affair']
values = [1, 4, 2, 7, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e87924')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cell', 'liquid', 'work', 'random']","[5, 2, 4, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cell', 'liquid', 'work', 'random']
values = [5, 2, 4, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d5e672')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['input', 'blue', 'damage', 'past', 'coal', 'denial', 'shift', 'crime', 'era']","[3, 6, 9, 5, 3, 4, 2, 3, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['input', 'blue', 'damage', 'past', 'coal', 'denial', 'shift', 'crime', 'era']
values = [3, 6, 9, 5, 3, 4, 2, 3, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c6f684')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['talent', 'tail', 'agency', 'file', 'entry', 'queen']","[3, 4, 1, 9, 6, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['talent', 'tail', 'agency', 'file', 'entry', 'queen']
values = [3, 4, 1, 9, 6, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7d5853')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mess', 'model', 'credit', 'nose', 'minute', 'police', 'pitch']","[60, 50, 30, 30, 20, 50, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mess', 'model', 'credit', 'nose', 'minute', 'police', 'pitch']
values = [60, 50, 30, 30, 20, 50, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8b98c1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['chin', 'honor', 'part', 'teeth', 'nose']","[6, 1, 2, 6, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chin', 'honor', 'part', 'teeth', 'nose']
values = [6, 1, 2, 6, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#015368')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['serum', 'news']","[4, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['serum', 'news']
values = [4, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7dea50')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['count', 'flash', 'maid']","[7, 3, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['count', 'flash', 'maid']
values = [7, 3, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6b4877')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['horror', 'fear', 'living', 'aspect', 'use', 'pound', 'mass', 'barn']","[90, 40, 90, 30, 70, 10, 40, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['horror', 'fear', 'living', 'aspect', 'use', 'pound', 'mass', 'barn']
values = [90, 40, 90, 30, 70, 10, 40, 70]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a89e90')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['anode', 'grace', 'camp', 'top', 'trade', 'aspect']","[10, 10, 40, 30, 50, 0]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['anode', 'grace', 'camp', 'top', 'trade', 'aspect']
values = [10, 10, 40, 30, 50, 0]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#11809a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['desk', 'tongue', 'novel', 'snake', 'public', 'kid', 'watch']","[20, 10, 90, 70, 80, 10, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['desk', 'tongue', 'novel', 'snake', 'public', 'kid', 'watch']
values = [20, 10, 90, 70, 80, 10, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#658de5')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rifle', 'parlor', 'season', 'dining', 'bread', 'bridge']","[90, 80, 10, 70, 30, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rifle', 'parlor', 'season', 'dining', 'bread', 'bridge']
values = [90, 80, 10, 70, 30, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d3a327')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['knee', 'line', 'genius', 'path', 'tale']","[10, 50, 40, 40, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['knee', 'line', 'genius', 'path', 'tale']
values = [10, 50, 40, 40, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#eae787')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dive', 'break', 'ride', 'throat', 'colony', 'good']","[7, 5, 3, 8, 1, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dive', 'break', 'ride', 'throat', 'colony', 'good']
values = [7, 5, 3, 8, 1, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#34d702')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sleep', 'boy', 'basket', 'color', 'mine', 'end', 'hope', 'gun']","[9, 7, 8, 2, 7, 8, 8, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sleep', 'boy', 'basket', 'color', 'mine', 'end', 'hope', 'gun']
values = [9, 7, 8, 2, 7, 8, 8, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#85927a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['brass', 'result', 'key', 'wave', 'column', 'noon', 'report']","[1000000, 1000000000, 100000, 1000000000, 1000, 100000, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['brass', 'result', 'key', 'wave', 'column', 'noon', 'report']
values = [1000000, 1000000000, 100000, 1000000000, 1000, 100000, 100000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#54ecfb')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hay', 'tax', 'award']","[9, 7, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hay', 'tax', 'award']
values = [9, 7, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3de658')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fall', 'street', 'decade']","[6, 3, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fall', 'street', 'decade']
values = [6, 3, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#62fa0d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['skirt', 'disk', 'while', 'route', 'home']","[40, 30, 90, 20, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['skirt', 'disk', 'while', 'route', 'home']
values = [40, 30, 90, 20, 70]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c03e0a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['access', 'bridge']","[8, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['access', 'bridge']
values = [8, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5b0c2c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['master', 'union', 'charge', 'supper', 'battle', 'appeal']","[90, 90, 30, 40, 10, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['master', 'union', 'charge', 'supper', 'battle', 'appeal']
values = [90, 90, 30, 40, 10, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#074f8f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['animal', 'bit']","[3, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['animal', 'bit']
values = [3, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#34ebcd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['uncle', 'fellow']","[6, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['uncle', 'fellow']
values = [6, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#608203')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['estate', 'work', 'show', 'sera', 'ride', 'widow', 'firm', 'lip']","[70, 80, 70, 80, 90, 20, 90, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['estate', 'work', 'show', 'sera', 'ride', 'widow', 'firm', 'lip']
values = [70, 80, 70, 80, 90, 20, 90, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e7e2ae')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['note', 'vacuum', 'trap', 'today']","[7, 5, 9, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['note', 'vacuum', 'trap', 'today']
values = [7, 5, 9, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a1d570')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['barrel', 'hero', 'campus', 'speech']","[4, 6, -8, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['barrel', 'hero', 'campus', 'speech']
values = [4, 6, -8, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#fc682b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['half', 'driver', 'pound', 'parade', 'gas']","[80, 50, 80, 70, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['half', 'driver', 'pound', 'parade', 'gas']
values = [80, 50, 80, 70, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#41fc73')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['unity', 'field', 'voting', 'vein', 'legend', 'power']","[8, 3, 3, 2, 5, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['unity', 'field', 'voting', 'vein', 'legend', 'power']
values = [8, 3, 3, 2, 5, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a25792')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['twelve', 'screen', 'essay', 'medium', 'team', 'ballet', 'result', 'liquid', 'gain']","[5, 1, 3, 9, 7, 4, 7, 7, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['twelve', 'screen', 'essay', 'medium', 'team', 'ballet', 'result', 'liquid', 'gain']
values = [5, 1, 3, 9, 7, 4, 7, 7, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#91191c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fellow', 'one', 'belief', 'hell', 'refund']","[1000000000, 10000, 1000000, 1000, 10000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fellow', 'one', 'belief', 'hell', 'refund']
values = [1000000000, 10000, 1000000, 1000, 10000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#de3742')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['closet', 'attack', 'ladder', 'news', 'guilt', 'dining']","[30, 60, 50, 80, 60, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['closet', 'attack', 'ladder', 'news', 'guilt', 'dining']
values = [30, 60, 50, 80, 60, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#945c06')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['code', 'stream', 'studio', 'tie']","[6, 7, 1, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['code', 'stream', 'studio', 'tie']
values = [6, 7, 1, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#050355')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['joke', 'ladder', 'list']","[90, 30, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['joke', 'ladder', 'list']
values = [90, 30, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#240cd1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['circle', 'fund', 'input']","[5, 3, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['circle', 'fund', 'input']
values = [5, 3, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#55995a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['risk', 'trade', 'reform', 'code', 'worker', 'bird', 'autumn']","[0, 50, 60, 20, 80, 80, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['risk', 'trade', 'reform', 'code', 'worker', 'bird', 'autumn']
values = [0, 50, 60, 20, 80, 80, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#83c124')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['jazz', 'outfit', 'pink', 'butter', 'vote', 'lawyer', 'grass', 'mouth']","[10, 90, 20, 90, 20, 40, 70, 30]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['jazz', 'outfit', 'pink', 'butter', 'vote', 'lawyer', 'grass', 'mouth']
values = [10, 90, 20, 90, 20, 40, 70, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4418e3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['soap', 'horror', 'cotton', 'core']","[1, 1, 7, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['soap', 'horror', 'cotton', 'core']
values = [1, 1, 7, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1c925c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tip', 'light', 'tire']","[3, 3, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tip', 'light', 'tire']
values = [3, 3, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#53f3c2')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['source', 'radio', 'voting', 'lot', 'dance', 'chip', 'injury']","[0, 4, 8, 1, 9, 2, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['source', 'radio', 'voting', 'lot', 'dance', 'chip', 'injury']
values = [0, 4, 8, 1, 9, 2, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5eca37')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['iodine', 'study', 'sum', 'motor', 'suit', 'start']","[8, 7, 2, 7, 1, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['iodine', 'study', 'sum', 'motor', 'suit', 'start']
values = [8, 7, 2, 7, 1, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9606dd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['supper', 'pool', 'demand']","[2, 5, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['supper', 'pool', 'demand']
values = [2, 5, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e5de13')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sauce', 'fluid', 'month']","[20, 50, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sauce', 'fluid', 'month']
values = [20, 50, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c80063')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['chorus', 'meat', 'taxi', 'cap', 'truth', 'worth']","[40, 50, 40, 20, 20, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chorus', 'meat', 'taxi', 'cap', 'truth', 'worth']
values = [40, 50, 40, 20, 20, 70]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#dfed58')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['income', 'west', 'one', 'player']","[3, 8, 1, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['income', 'west', 'one', 'player']
values = [3, 8, 1, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d73cde')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['trap', 'bit', 'beat', 'circle', 'front']","[2, 9, 3, 3, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['trap', 'bit', 'beat', 'circle', 'front']
values = [2, 9, 3, 3, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7213fa')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rain', 'vice', 'city', 'mode', 'auto', 'meal', 'legs']","[8, 6, 0, 4, 7, 3, 0]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rain', 'vice', 'city', 'mode', 'auto', 'meal', 'legs']
values = [8, 6, 0, 4, 7, 3, 0]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2daa1b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fan', 'table', 'escape', 'brick']","[60, 90, 30, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fan', 'table', 'escape', 'brick']
values = [60, 90, 30, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ba202c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pitch', 'figure', 'valley', 'route', 'cotton']","[4, 3, 3, 3, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pitch', 'figure', 'valley', 'route', 'cotton']
values = [4, 3, 3, 3, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a5b2a1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['power', 'temple', 'anyone', 'dome', 'class']","[6, 5, 4, 9, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['power', 'temple', 'anyone', 'dome', 'class']
values = [6, 5, 4, 9, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d69069')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['train', 'dress', 'blood', 'glance', 'tax', 'proof']","[5, 4, 4, 8, 4, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['train', 'dress', 'blood', 'glance', 'tax', 'proof']
values = [5, 4, 4, 8, 4, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e0714f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['means', 'origin', 'shirt']","[8, 1, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['means', 'origin', 'shirt']
values = [8, 1, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a3feae')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['watch', 'look', 'unit']","[2, 3, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['watch', 'look', 'unit']
values = [2, 3, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#10062f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dirt', 'flow', 'gay', 'radar', 'screen', 'credit', 'study', 'shape']","[7, 1, 3, 1, 6, 8, 7, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dirt', 'flow', 'gay', 'radar', 'screen', 'credit', 'study', 'shape']
values = [7, 1, 3, 1, 6, 8, 7, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#485b45')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tale', 'wisdom', 'talent', 'sum']","[2, 1, 9, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tale', 'wisdom', 'talent', 'sum']
values = [2, 1, 9, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4b727a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['boss', 'soil', 'branch']","[90, 60, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['boss', 'soil', 'branch']
values = [90, 60, 70]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1c3ebf')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bare', 'nature', 'staff', 'music']","[7, 9, 4, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bare', 'nature', 'staff', 'music']
values = [7, 9, 4, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#657627')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['peace', 'cloud', 'knife', 'nature', 'bowl', 'grass', 'park', 'foam']","[8, 2, 7, 5, 9, 7, 3, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['peace', 'cloud', 'knife', 'nature', 'bowl', 'grass', 'park', 'foam']
values = [8, 2, 7, 5, 9, 7, 3, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2becea')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['table', 'policy', 'cloud']","[1, 7, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['table', 'policy', 'cloud']
values = [1, 7, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6b5f00')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['route', 'season', 'bench']","[60, 30, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['route', 'season', 'bench']
values = [60, 30, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#58ebe1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['scheme', 'view']","[80, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['scheme', 'view']
values = [80, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d242c0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['supply', 'point', 'voice', 'dog', 'right', 'studio', 'myth']","[6, 9, 6, 8, 8, 7, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['supply', 'point', 'voice', 'dog', 'right', 'studio', 'myth']
values = [6, 9, 6, 8, 8, 7, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b4a856')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mark', 'stick', 'fight', 'walk', 'warmth', 'slope']","[10, 60, 30, 20, 80, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mark', 'stick', 'fight', 'walk', 'warmth', 'slope']
values = [10, 60, 30, 20, 80, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#640bf7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['vector', 'island', 'damage']","[70, 40, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vector', 'island', 'damage']
values = [70, 40, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4e7e34')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['behalf', 'play']","[8, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['behalf', 'play']
values = [8, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#683219')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['couple', 'pay', 'slope', 'data', 'medium', 'name', 'supply']","[8, 6, 8, -6, 3, 6, -4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['couple', 'pay', 'slope', 'data', 'medium', 'name', 'supply']
values = [8, 6, 8, -6, 3, 6, -4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e4c6af')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rear', 'good', 'edge']","[2, 7, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rear', 'good', 'edge']
values = [2, 7, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e258f9')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['writer', 'touch', 'voting']","[7, 8, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['writer', 'touch', 'voting']
values = [7, 8, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#600315')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bath', 'slave', 'tape', 'sera', 'spirit', 'noise', 'cereal']","[9, 8, 7, 4, 5, 5, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bath', 'slave', 'tape', 'sera', 'spirit', 'noise', 'cereal']
values = [9, 8, 7, 4, 5, 5, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a8d811')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['order', 'wonder']","[60, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['order', 'wonder']
values = [60, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#68463e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['world', 'king', 'closet', 'night', 'sister', 'patent', 'blood']","[4, 2, 6, 4, 4, 6, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['world', 'king', 'closet', 'night', 'sister', 'patent', 'blood']
values = [4, 2, 6, 4, 4, 6, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b27885')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bride', 'core']","[60, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bride', 'core']
values = [60, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5536a9')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['life', 'denial', 'color', 'mean']","[2, -9, 5, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['life', 'denial', 'color', 'mean']
values = [2, -9, 5, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5ecf6c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['liquid', 'reply', 'text', 'system', 'cause', 'energy', 'colony', 'curve']","[20, 50, 50, 20, 40, 20, 80, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['liquid', 'reply', 'text', 'system', 'cause', 'energy', 'colony', 'curve']
values = [20, 50, 50, 20, 40, 20, 80, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e8d1b4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bone', 'river', 'carbon', 'park', 'police', 'rock']","[3, 9, 4, 5, 8, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bone', 'river', 'carbon', 'park', 'police', 'rock']
values = [3, 9, 4, 5, 8, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c1a673')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['snake', 'glance', 'demand', 'notion']","[4, 8, 2, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['snake', 'glance', 'demand', 'notion']
values = [4, 8, 2, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3088ec')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['river', 'voice', 'shop', 'crew', 'grip', 'reason', 'jury', 'disk']","[1000, 1000, 1000, 10000000, 100, 1000000000, 10000, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['river', 'voice', 'shop', 'crew', 'grip', 'reason', 'jury', 'disk']
values = [1000, 1000, 1000, 10000000, 100, 1000000000, 10000, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#990744')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['grass', 'jury', 'luck', 'coast']","[7, 4, 6, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['grass', 'jury', 'luck', 'coast']
values = [7, 4, 6, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#56acb0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['degree', 'today']","[7, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['degree', 'today']
values = [7, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f45d7a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['motion', 'lack', 'lead', 'player', 'deck', 'joy']","[4, 7, 6, 8, 9, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['motion', 'lack', 'lead', 'player', 'deck', 'joy']
values = [4, 7, 6, 8, 9, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c8163f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['artery', 'secret']","[4, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['artery', 'secret']
values = [4, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b62bcd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['brush', 'sum', 'number']","[100, 1000, 1000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['brush', 'sum', 'number']
values = [100, 1000, 1000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9c00e3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['story', 'powder', 'sand']","[2, 1, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['story', 'powder', 'sand']
values = [2, 1, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ba51f0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['claim', 'root', 'wine', 'mail', 'file', 'jury', 'tire', 'health']","[4, 3, 9, 5, 4, 6, 9, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['claim', 'root', 'wine', 'mail', 'file', 'jury', 'tire', 'health']
values = [4, 3, 9, 5, 4, 6, 9, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a3ba41')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['night', 'claim', 'sphere', 'melody', 'saline', 'game', 'winter', 'terror', 'ocean']","[3, 7, 8, 9, 3, 3, 1, 6, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['night', 'claim', 'sphere', 'melody', 'saline', 'game', 'winter', 'terror', 'ocean']
values = [3, 7, 8, 9, 3, 3, 1, 6, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c39c64')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['youth', 'trial', 'iodine']","[50, 80, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['youth', 'trial', 'iodine']
values = [50, 80, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#154990')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sitter', 'rear', 'coast', 'bit', 'dinner', 'master', 'ship', 'excess', 'storm']","[1, 8, 9, 8, 7, 7, 8, 3, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sitter', 'rear', 'coast', 'bit', 'dinner', 'master', 'ship', 'excess', 'storm']
values = [1, 8, 9, 8, 7, 7, 8, 3, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#207e3e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sport', 'policy']","[70, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sport', 'policy']
values = [70, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f95888')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['note', 'sake', 'milk', 'favor', 'horse']","[1, 2, 5, 3, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['note', 'sake', 'milk', 'favor', 'horse']
values = [1, 2, 5, 3, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7c0cf8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gas', 'fog', 'stay', 'path']","[4, 5, 5, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gas', 'fog', 'stay', 'path']
values = [4, 5, 5, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#206969')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['answer', 'pipe', 'coach', 'basket']","[60, 90, 70, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['answer', 'pipe', 'coach', 'basket']
values = [60, 90, 70, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#756811')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['brush', 'part', 'stress', 'craft', 'adult']","[70, 10, 60, 60, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['brush', 'part', 'stress', 'craft', 'adult']
values = [70, 10, 60, 60, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1ae3a7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['while', 'sleep', 'ten']","[7, 1, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['while', 'sleep', 'ten']
values = [7, 1, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#dc97c3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['memory', 'nose', 'stroke', 'pile', 'vice', 'need', 'cabin']","[5, 4, 3, 7, 9, 3, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['memory', 'nose', 'stroke', 'pile', 'vice', 'need', 'cabin']
values = [5, 4, 3, 7, 9, 3, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#547934')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['right', 'shift', 'track', 'data', 'cabin']","[0, 0, 0, 1, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['right', 'shift', 'track', 'data', 'cabin']
values = [0, 0, 0, 1, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d4ffaf')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['oxygen', 'member', 'gold', 'butter', 'mirror', 'kid']","[9, 1, 4, 6, 1, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['oxygen', 'member', 'gold', 'butter', 'mirror', 'kid']
values = [9, 1, 4, 6, 1, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#bf90b6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['clock', 'ratio', 'value', 'case', 'savage']","[8, 2, 5, 9, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['clock', 'ratio', 'value', 'case', 'savage']
values = [8, 2, 5, 9, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b9f975')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bent', 'theory', 'output']","[30, 70, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bent', 'theory', 'output']
values = [30, 70, 70]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3d5f4d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hurry', 'grass', 'belief']","[80, 50, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hurry', 'grass', 'belief']
values = [80, 50, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3e353f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['thirty', 'rice', 'knee', 'bench', 'style', 'animal', 'board', 'tone', 'comedy']","[9, 3, 1, 9, 6, 6, 2, 4, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['thirty', 'rice', 'knee', 'bench', 'style', 'animal', 'board', 'tone', 'comedy']
values = [9, 3, 1, 9, 6, 6, 2, 4, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#bac9c7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['taxi', 'touch']","[5, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['taxi', 'touch']
values = [5, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e12fc3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['while', 'source', 'path', 'action', 'boss']","[50, 10, 70, 50, 20]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['while', 'source', 'path', 'action', 'boss']
values = [50, 10, 70, 50, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#62f82b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['behalf', 'dance', 'horse']","[8, 6, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['behalf', 'dance', 'horse']
values = [8, 6, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2d9881')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['poet', 'period', 'manner', 'milk', 'cheek', 'mirror']","[7, 5, 2, 4, 2, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['poet', 'period', 'manner', 'milk', 'cheek', 'mirror']
values = [7, 5, 2, 4, 2, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c45a60')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['window', 'time', 'fellow', 'love']","[1, 6, 4, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['window', 'time', 'fellow', 'love']
values = [1, 6, 4, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ffbac1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['world', 'fist', 'meal', 'cloud']","[3, 8, 3, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['world', 'fist', 'meal', 'cloud']
values = [3, 8, 3, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#21886f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['vice', 'index', 'image', 'mail', 'route', 'smile', 'rest', 'spot']","[1, 8, 4, 1, 2, 1, 9, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vice', 'index', 'image', 'mail', 'route', 'smile', 'rest', 'spot']
values = [1, 8, 4, 1, 2, 1, 9, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#bec2b7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fun', 'closet', 'tissue', 'shift', 'dark']","[8, 6, 7, 4, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fun', 'closet', 'tissue', 'shift', 'dark']
values = [8, 6, 7, 4, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#75d262')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['roll', 'mine', 'bath', 'dog']","[1000000000, 1000000000, 1000, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['roll', 'mine', 'bath', 'dog']
values = [1000000000, 1000000000, 1000, 100000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#209df8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['critic', 'tissue', 'artist', 'tour']","[100000000, 10, 100000, 100]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['critic', 'tissue', 'artist', 'tour']
values = [100000000, 10, 100000, 100]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#fc3864')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['luck', 'poem', 'fly']","[100000, 1000000, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['luck', 'poem', 'fly']
values = [100000, 1000000, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#14127c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['entry', 'coach', 'dawn', 'twelve', 'corner', 'phone', 'nature', 'faint']","[3, 4, 5, 2, 2, 7, 5, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['entry', 'coach', 'dawn', 'twelve', 'corner', 'phone', 'nature', 'faint']
values = [3, 4, 5, 2, 2, 7, 5, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8ab013')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mode', 'feed', 'twenty', 'grain']","[80, 40, 10, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mode', 'feed', 'twenty', 'grain']
values = [80, 40, 10, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6d903e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['phrase', 'melody', 'whisky', 'piano', 'hold', 'bird', 'ladder', 'card', 'feel']","[6, 2, 8, 2, 3, 5, 3, 9, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['phrase', 'melody', 'whisky', 'piano', 'hold', 'bird', 'ladder', 'card', 'feel']
values = [6, 2, 8, 2, 3, 5, 3, 9, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#34b882')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['prize', 'roll', 'person', 'north', 'woman']","[4, 5, 6, 4, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['prize', 'roll', 'person', 'north', 'woman']
values = [4, 5, 6, 4, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7415ae')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['frame', 'origin', 'lie']","[50, 10, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['frame', 'origin', 'lie']
values = [50, 10, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6c3f1e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rise', 'savage', 'mark', 'arc', 'clay', 'fiber']","[50, 60, 90, 70, 20, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rise', 'savage', 'mark', 'arc', 'clay', 'fiber']
values = [50, 60, 90, 70, 20, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d99e8e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['budget', 'feed', 'merit', 'drive', 'base', 'grain', 'train']","[10, 20, 50, 30, 50, 90, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['budget', 'feed', 'merit', 'drive', 'base', 'grain', 'train']
values = [10, 20, 50, 30, 50, 90, 70]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#adcc6d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['suit', 'bundle', 'corner']","[2, 3, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['suit', 'bundle', 'corner']
values = [2, 3, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#46e2fa')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['chain', 'chorus', 'chair', 'coal', 'neck', 'act']","[1000000, 10000, 100000, 1000000, 1000, 100000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chain', 'chorus', 'chair', 'coal', 'neck', 'act']
values = [1000000, 10000, 100000, 1000000, 1000, 100000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#fc6d20')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rage', 'faint', 'danger']","[5, 8, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rage', 'faint', 'danger']
values = [5, 8, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#10eb47')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['serum', 'colony', 'joke', 'anger', 'well', 'regard']","[8, 9, 6, 6, 5, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['serum', 'colony', 'joke', 'anger', 'well', 'regard']
values = [8, 9, 6, 6, 5, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#57bfcf')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['symbol', 'film', 'stairs', 'panic', 'regime']","[4, 2, 1, 3, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['symbol', 'film', 'stairs', 'panic', 'regime']
values = [4, 2, 1, 3, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9ceafd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['comedy', 'plane', 'flood', 'way']","[70, 20, 90, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['comedy', 'plane', 'flood', 'way']
values = [70, 20, 90, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4d59d8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['golf', 'star', 'sugar', 'hall', 'maid']","[7, 2, 8, 9, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['golf', 'star', 'sugar', 'hall', 'maid']
values = [7, 2, 8, 9, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d8fe61')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pipe', 'ship', 'seed', 'refund', 'bowl']","[100000, 10, 1000000, 10000, 10000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pipe', 'ship', 'seed', 'refund', 'bowl']
values = [100000, 10, 1000000, 10000, 10000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c2ad53')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dome', 'force']","[4, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dome', 'force']
values = [4, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#580e48')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['radar', 'jungle']","[60, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['radar', 'jungle']
values = [60, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b8b1ab')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['amount', 'gold', 'series', 'bunk']","[3, 6, 9, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['amount', 'gold', 'series', 'bunk']
values = [3, 6, 9, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8bb14d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stress', 'novel', 'radar', 'supper']","[3, 8, 7, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stress', 'novel', 'radar', 'supper']
values = [3, 8, 7, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#76fb47')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['son', 'worth', 'sleep', 'press', 'bit', 'entry', 'basket']","[30, 40, 10, 20, 90, 30, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['son', 'worth', 'sleep', 'press', 'bit', 'entry', 'basket']
values = [30, 40, 10, 20, 90, 30, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5eb772')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['father', 'theory', 'lie', 'iron', 'lady', 'jury', 'doubt', 'roll']","[5, 2, 6, 2, 9, 2, 5, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['father', 'theory', 'lie', 'iron', 'lady', 'jury', 'doubt', 'roll']
values = [5, 2, 6, 2, 9, 2, 5, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5128e8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cell', 'strike', 'paper', 'key']","[2, 7, 9, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cell', 'strike', 'paper', 'key']
values = [2, 7, 9, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d24d6a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['twenty', 'shadow', 'strike', 'autumn']","[3, 5, 1, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['twenty', 'shadow', 'strike', 'autumn']
values = [3, 5, 1, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c4dbf4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['feel', 'entry']","[1, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['feel', 'entry']
values = [1, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e5a65f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['spring', 'window']","[4, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['spring', 'window']
values = [4, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#022937')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sample', 'vector']","[1, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sample', 'vector']
values = [1, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e50ef7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tongue', 'beam', 'wine', 'escape', 'autumn']","[3, 7, 6, 9, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tongue', 'beam', 'wine', 'escape', 'autumn']
values = [3, 7, 6, 9, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8f9679')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['knife', 'blue', 'change', 'vision', 'fate', 'disk', 'host']","[8, 2, 4, 2, 2, 2, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['knife', 'blue', 'change', 'vision', 'fate', 'disk', 'host']
values = [8, 2, 4, 2, 2, 2, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a8fa95')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['term', 'scope']","[10, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['term', 'scope']
values = [10, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#acd6cb')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['object', 'text', 'county', 'stress', 'team', 'proof', 'book']","[4, 1, 6, 7, 7, 4, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['object', 'text', 'county', 'stress', 'team', 'proof', 'book']
values = [4, 1, 6, 7, 7, 4, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d0fb07')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['county', 'close', 'pond', 'driver']","[9, 6, 4, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['county', 'close', 'pond', 'driver']
values = [9, 6, 4, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#42452b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['person', 'mode', 'cup']","[80, 90, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['person', 'mode', 'cup']
values = [80, 90, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a567ea')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['leader', 'vein', 'period', 'arm', 'field']","[100, 100000, 10, 100, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['leader', 'vein', 'period', 'arm', 'field']
values = [100, 100000, 10, 100, 100000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#98b1c4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['coffee', 'energy', 'auto', 'metal', 'item', 'cotton']","[7, 8, 7, 5, 6, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['coffee', 'energy', 'auto', 'metal', 'item', 'cotton']
values = [7, 8, 7, 5, 6, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#325e7c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['boss', 'idea', 'denial', 'result', 'cap']","[1000000000, 10, 10000000, 10000000, 1000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['boss', 'idea', 'denial', 'result', 'cap']
values = [1000000000, 10, 10000000, 10000000, 1000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0bea4e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['safety', 'threat', 'grave', 'love', 'nobody', 'lack', 'watch']","[8, 7, 4, 7, 3, 4, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['safety', 'threat', 'grave', 'love', 'nobody', 'lack', 'watch']
values = [8, 7, 4, 7, 3, 4, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b774a8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['herd', 'status', 'deck']","[80, 20, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['herd', 'status', 'deck']
values = [80, 20, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a1b2f7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['beer', 'bunk', 'hunger']","[9, 5, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['beer', 'bunk', 'hunger']
values = [9, 5, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#98a1ba')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['male', 'fall', 'angle', 'set', 'smell', 'north']","[7, 5, 9, 4, 7, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['male', 'fall', 'angle', 'set', 'smell', 'north']
values = [7, 5, 9, 4, 7, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5e8a14')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['adult', 'signal', 'weapon']","[1, 7, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['adult', 'signal', 'weapon']
values = [1, 7, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3911b4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['south', 'trap', 'cycle', 'mean', 'hope']","[7, 9, 3, 6, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['south', 'trap', 'cycle', 'mean', 'hope']
values = [7, 9, 3, 6, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3df56b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['crew', 'blood']","[3, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crew', 'blood']
values = [3, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#dec086')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['period', 'wall', 'gas', 'fist']","[8, 6, 4, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['period', 'wall', 'gas', 'fist']
values = [8, 6, 4, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#160d0d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['critic', 'dog', 'rule', 'danger']","[90, 90, 30, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['critic', 'dog', 'rule', 'danger']
values = [90, 90, 30, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9d9bfc')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['regard', 'fall', 'pitch', 'chain', 'comedy', 'shade', 'wash']","[5, 0, 7, 5, 8, 7, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['regard', 'fall', 'pitch', 'chain', 'comedy', 'shade', 'wash']
values = [5, 0, 7, 5, 8, 7, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#61341e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['credit', 'wise']","[20, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['credit', 'wise']
values = [20, 90]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3d8153')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['luxury', 'theme', 'step']","[7, 1, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['luxury', 'theme', 'step']
values = [7, 1, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#94baaf')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['week', 'device', 'access']","[7, 7, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['week', 'device', 'access']
values = [7, 7, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6bdda7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['golf', 'verse']","[40, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['golf', 'verse']
values = [40, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#76db74')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pound', 'wheel', 'cash']","[60, 80, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pound', 'wheel', 'cash']
values = [60, 80, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5115f0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['honey', 'attack', 'signal', 'aspect']","[100, 1000000000, 10, 1000000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['honey', 'attack', 'signal', 'aspect']
values = [100, 1000000000, 10, 1000000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#02c3f0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['grant', 'matter', 'speech', 'powder']","[4, 7, 4, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['grant', 'matter', 'speech', 'powder']
values = [4, 7, 4, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b99a52')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gay', 'move']","[2, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gay', 'move']
values = [2, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#eb3389')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['teeth', 'key', 'belief', 'head']","[7, 2, 4, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['teeth', 'key', 'belief', 'head']
values = [7, 2, 4, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#03af6a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bureau', 'buffer']","[1000000, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bureau', 'buffer']
values = [1000000, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e2ee5b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['flood', 'unity', 'whisky', 'date', 'camera', 'atom', 'bottle']","[3, 1, 8, 3, 1, 5, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['flood', 'unity', 'whisky', 'date', 'camera', 'atom', 'bottle']
values = [3, 1, 8, 3, 1, 5, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e49b15')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['drop', 'wire', 'tray', 'skin', 'poet']","[1, 5, 2, 2, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drop', 'wire', 'tray', 'skin', 'poet']
values = [1, 5, 2, 2, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#764a14')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['crew', 'word', 'whole', 'graph', 'stairs']","[4, 9, 9, 8, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crew', 'word', 'whole', 'graph', 'stairs']
values = [4, 9, 9, 8, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ae0c4b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['grant', 'stay']","[4, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['grant', 'stay']
values = [4, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8ac1bf')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['study', 'soul']","[6, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['study', 'soul']
values = [6, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c6bf5c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['factor', 'water', 'faith']","[80, 40, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['factor', 'water', 'faith']
values = [80, 40, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2eec2c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['second', 'tray', 'coast', 'doubt', 'rank', 'middle', 'smile', 'basis']","[9, 9, 2, 5, 7, 7, 3, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['second', 'tray', 'coast', 'doubt', 'rank', 'middle', 'smile', 'basis']
values = [9, 9, 2, 5, 7, 7, 3, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#25eab2')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['writer', 'roof', 'savage', 'marine', 'money', 'copy', 'flavor', 'queen']","[50, 30, 60, 60, 90, 30, 80, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['writer', 'roof', 'savage', 'marine', 'money', 'copy', 'flavor', 'queen']
values = [50, 30, 60, 60, 90, 30, 80, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b9a740')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['chest', 'trial', 'prize', 'mile', 'depth', 'string']","[3, 5, 1, 7, 1, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chest', 'trial', 'prize', 'mile', 'depth', 'string']
values = [3, 5, 1, 7, 1, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#04c841')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pause', 'league', 'shade', 'week', 'note', 'duty']","[3, 8, 5, 8, 8, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pause', 'league', 'shade', 'week', 'note', 'duty']
values = [3, 8, 5, 8, 8, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#109b90')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['post', 'day', 'smoke', 'clouds', 'axis', 'study', 'whole', 'pitch', 'limit']","[8, 7, 5, 3, 7, 1, 8, 8, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['post', 'day', 'smoke', 'clouds', 'axis', 'study', 'whole', 'pitch', 'limit']
values = [8, 7, 5, 3, 7, 1, 8, 8, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d9437f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['street', 'noon', 'event', 'chip', 'joy']","[60, 40, 60, 60, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['street', 'noon', 'event', 'chip', 'joy']
values = [60, 40, 60, 60, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a85ee6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stick', 'dear', 'pace', 'leader', 'game', 'day']","[10, 20, 20, 70, 70, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stick', 'dear', 'pace', 'leader', 'game', 'day']
values = [10, 20, 20, 70, 70, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c96703')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['path', 'coat', 'sitter', 'access', 'lead']","[1, 3, 2, 6, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['path', 'coat', 'sitter', 'access', 'lead']
values = [1, 3, 2, 6, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f21096')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['touch', 'father', 'star', 'medium', 'cloud', 'peace']","[70, 60, 90, 10, 10, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['touch', 'father', 'star', 'medium', 'cloud', 'peace']
values = [70, 60, 90, 10, 10, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#37b160')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['city', 'bottom', 'fish', 'center', 'train', 'mud', 'sleep', 'fool', 'garage']","[30, 70, 80, 20, 90, 10, 80, 30, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['city', 'bottom', 'fish', 'center', 'train', 'mud', 'sleep', 'fool', 'garage']
values = [30, 70, 80, 20, 90, 10, 80, 30, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#79dbaa')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['drunk', 'poem']","[40, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drunk', 'poem']
values = [40, 90]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e5a3c9')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lamp', 'blood']","[4, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lamp', 'blood']
values = [4, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#726e35')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lip', 'drop', 'blind', 'mercy', 'teeth', 'drama', 'dress', 'choice']","[1, 2, 2, 9, 4, 2, 7, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lip', 'drop', 'blind', 'mercy', 'teeth', 'drama', 'dress', 'choice']
values = [1, 2, 2, 9, 4, 2, 7, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#227d62')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['trust', 'moment', 'cost', 'trap']","[50, 90, 30, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['trust', 'moment', 'cost', 'trap']
values = [50, 90, 30, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2d0118')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pound', 'action', 'shift', 'artist', 'thick']","[3, 6, 2, 3, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pound', 'action', 'shift', 'artist', 'thick']
values = [3, 6, 2, 3, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#94ba99')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['desire', 'dance']","[2, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['desire', 'dance']
values = [2, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#bf74a8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['habit', 'panel', 'moment', 'craft', 'world', 'fury', 'tone', 'hand']","[6, 8, 1, 1, 9, 5, 1, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['habit', 'panel', 'moment', 'craft', 'world', 'fury', 'tone', 'hand']
values = [6, 8, 1, 1, 9, 5, 1, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ec1bc5')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['storm', 'lap', 'curve']","[7, 1, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['storm', 'lap', 'curve']
values = [7, 1, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b1afee')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['shadow', 'answer']","[20, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shadow', 'answer']
values = [20, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#89cf06')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rifle', 'novel', 'switch', 'disk', 'claim']","[10, 20, 80, 90, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rifle', 'novel', 'switch', 'disk', 'claim']
values = [10, 20, 80, 90, 70]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#be030f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ward', 'mine', 'play', 'cast']","[70, 60, 20, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ward', 'mine', 'play', 'cast']
values = [70, 60, 20, 90]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#cd5ef0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['year', 'bench']","[4, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['year', 'bench']
values = [4, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8f95ca')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['murder', 'lap', 'damage']","[50, 70, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['murder', 'lap', 'damage']
values = [50, 70, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0ec916')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['theory', 'scene']","[50, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['theory', 'scene']
values = [50, 70]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9bb53d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bunk', 'figure', 'event', 'limit', 'essay']","[1, 6, 9, 2, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bunk', 'figure', 'event', 'limit', 'essay']
values = [1, 6, 9, 2, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#129570')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['laugh', 'ocean']","[4, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['laugh', 'ocean']
values = [4, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d5cf7e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['color', 'child', 'stone', 'shift', 'snake']","[9, 7, 4, 1, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['color', 'child', 'stone', 'shift', 'snake']
values = [9, 7, 4, 1, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#98d706')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['thick', 'total', 'income', 'page']","[4, 8, 6, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['thick', 'total', 'income', 'page']
values = [4, 8, 6, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ea0692')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['girl', 'chorus', 'star', 'effort', 'harbor', 'load']","[40, 30, 90, 40, 80, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['girl', 'chorus', 'star', 'effort', 'harbor', 'load']
values = [40, 30, 90, 40, 80, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#bbbf31')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['review', 'window']","[50, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['review', 'window']
values = [50, 90]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#fc5348')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['barn', 'drop', 'skin']","[40, 40, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['barn', 'drop', 'skin']
values = [40, 40, 70]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#361061')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['music', 'health', 'bag']","[9, 5, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['music', 'health', 'bag']
values = [9, 5, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ace560')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cool', 'watch', 'salt']","[4, 6, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cool', 'watch', 'salt']
values = [4, 6, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0efe9a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['press', 'foam', 'minute', 'credit', 'luck', 'glance', 'child', 'fluid']","[60, 50, 30, 60, 20, 70, 50, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['press', 'foam', 'minute', 'credit', 'luck', 'glance', 'child', 'fluid']
values = [60, 50, 30, 60, 20, 70, 50, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#08ff00')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['loan', 'hole', 'joke', 'race']","[1000000000, 10000000, 1000, 10000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['loan', 'hole', 'joke', 'race']
values = [1000000000, 10000000, 1000, 10000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ade561')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['face', 'vector', 'iron', 'use', 'habit', 'carbon']","[100000, 100000, 100000, 10, 1000000000, 1000000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['face', 'vector', 'iron', 'use', 'habit', 'carbon']
values = [100000, 100000, 100000, 10, 1000000000, 1000000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6f3237')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['screen', 'birth', 'class', 'colony', 'random', 'chief', 'news']","[6, 4, 7, 4, 9, 2, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['screen', 'birth', 'class', 'colony', 'random', 'chief', 'news']
values = [6, 4, 7, 4, 9, 2, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#72d08a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hat', 'player', 'mad', 'winter']","[5, 1, 6, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hat', 'player', 'mad', 'winter']
values = [5, 1, 6, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#37b0c4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['forest', 'father', 'anger', 'dozen', 'bulk', 'base', 'legs', 'soul']","[4, 9, 9, 9, 6, 3, 7, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['forest', 'father', 'anger', 'dozen', 'bulk', 'base', 'legs', 'soul']
values = [4, 9, 9, 9, 6, 3, 7, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#98a879')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ticket', 'worker', 'carbon', 'cup', 'dress']","[6, 1, 7, 9, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ticket', 'worker', 'carbon', 'cup', 'dress']
values = [6, 1, 7, 9, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7917b1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['word', 'spring', 'ground', 'harbor', 'couple', 'editor']","[7, 6, 7, 1, 5, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['word', 'spring', 'ground', 'harbor', 'couple', 'editor']
values = [7, 6, 7, 1, 5, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#bb3b52')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bird', 'column', 'pure', 'mile', 'blue', 'life', 'film', 'stake', 'lawyer']","[10, 50, 30, 70, 60, 60, 40, 10, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bird', 'column', 'pure', 'mile', 'blue', 'life', 'film', 'stake', 'lawyer']
values = [10, 50, 30, 70, 60, 60, 40, 10, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#bb48d4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['boss', 'vice', 'campus']","[9, 1, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['boss', 'vice', 'campus']
values = [9, 1, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3b22ef')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['middle', 'jury', 'guard']","[3, 7, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['middle', 'jury', 'guard']
values = [3, 7, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0305ee')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ticket', 'phrase', 'shirt', 'coast', 'minute', 'motor', 'night']","[6, 5, 7, 1, 6, 5, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ticket', 'phrase', 'shirt', 'coast', 'minute', 'motor', 'night']
values = [6, 5, 7, 1, 6, 5, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0d1ba1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['unit', 'past', 'favor', 'ship']","[5, 4, 1, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['unit', 'past', 'favor', 'ship']
values = [5, 4, 1, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e85f8b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mature', 'finger', 'floor', 'notion', 'lock', 'fence', 'source']","[1, 9, 5, 7, 1, 3, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mature', 'finger', 'floor', 'notion', 'lock', 'fence', 'source']
values = [1, 9, 5, 7, 1, 3, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c8bb55')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['powder', 'crisis', 'owner', 'plug', 'humor']","[50, 30, 10, 70, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['powder', 'crisis', 'owner', 'plug', 'humor']
values = [50, 30, 10, 70, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#cf438e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['closet', 'brick', 'lady']","[30, 70, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['closet', 'brick', 'lady']
values = [30, 70, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#83924f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['air', 'loan', 'grace', 'crop']","[1, 1, 6, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['air', 'loan', 'grace', 'crop']
values = [1, 1, 6, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b810c4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['story', 'escape', 'fury', 'wait']","[2, 4, 7, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['story', 'escape', 'fury', 'wait']
values = [2, 4, 7, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#31eabd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['crowd', 'left', 'goal']","[6, 1, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crowd', 'left', 'goal']
values = [6, 1, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6a2a0d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['need', 'beach', 'effort', 'poetry']","[9, 9, 6, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['need', 'beach', 'effort', 'poetry']
values = [9, 9, 6, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d325ba')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['travel', 'anger', 'order', 'strike', 'rank', 'oxygen', 'second', 'loss', 'feel']","[40, 40, 80, 10, 60, 50, 60, 60, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['travel', 'anger', 'order', 'strike', 'rank', 'oxygen', 'second', 'loss', 'feel']
values = [40, 40, 80, 10, 60, 50, 60, 60, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3e4246')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ocean', 'issue', 'drug', 'muscle', 'poem', 'horror', 'reader']","[4, -2, 6, -3, 2, 5, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ocean', 'issue', 'drug', 'muscle', 'poem', 'horror', 'reader']
values = [4, -2, 6, -3, 2, 5, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c0a874')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['leader', 'art']","[4, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['leader', 'art']
values = [4, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ed0cc1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gay', 'soul', 'space', 'check', 'guitar']","[7, 5, 9, 5, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gay', 'soul', 'space', 'check', 'guitar']
values = [7, 5, 9, 5, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#480941')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['murder', 'month']","[10, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['murder', 'month']
values = [10, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0a682f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['letter', 'hair', 'square', 'denial']","[7, 6, 2, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['letter', 'hair', 'square', 'denial']
values = [7, 6, 2, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8a9f0e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['skin', 'ballet', 'sound', 'chief', 'age', 'making']","[4, 7, 5, 5, 1, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['skin', 'ballet', 'sound', 'chief', 'age', 'making']
values = [4, 7, 5, 5, 1, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#254637')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['grade', 'course', 'detail', 'loan', 'comedy', 'cry', 'region']","[2, 9, 9, 9, 0, 4, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['grade', 'course', 'detail', 'loan', 'comedy', 'cry', 'region']
values = [2, 9, 9, 9, 0, 4, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#afe3e2')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['point', 'jacket', 'index', 'appeal', 'lunch', 'craft']","[30, 80, 70, 40, 20, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['point', 'jacket', 'index', 'appeal', 'lunch', 'craft']
values = [30, 80, 70, 40, 20, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#15ae50')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['length', 'place', 'honor', 'pair']","[70, 40, 50, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['length', 'place', 'honor', 'pair']
values = [70, 40, 50, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#68a772')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wisdom', 'pride']","[60, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wisdom', 'pride']
values = [60, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b91934')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['beat', 'angle', 'court', 'milk', 'touch', 'cabin']","[3, 4, 9, 7, 7, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['beat', 'angle', 'court', 'milk', 'touch', 'cabin']
values = [3, 4, 9, 7, 7, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a01170')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bit', 'joke']","[8, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bit', 'joke']
values = [8, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4f7540')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['craft', 'member']","[4, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['craft', 'member']
values = [4, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#72f3ba')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ticket', 'heart', 'wagon', 'honey', 'cut', 'sleep', 'depth', 'string']","[3, 5, 4, 7, 7, 8, 7, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ticket', 'heart', 'wagon', 'honey', 'cut', 'sleep', 'depth', 'string']
values = [3, 5, 4, 7, 7, 8, 7, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3c84c0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['origin', 'hope', 'flavor', 'player']","[90, 70, 80, 90]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['origin', 'hope', 'flavor', 'player']
values = [90, 70, 80, 90]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f02aaf')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['choice', 'one', 'bread']","[8, 6, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['choice', 'one', 'bread']
values = [8, 6, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a89063')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wealth', 'beauty', 'cash', 'mail', 'time', 'sea', 'paint']","[5, 1, 9, 5, 1, 3, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wealth', 'beauty', 'cash', 'mail', 'time', 'sea', 'paint']
values = [5, 1, 9, 5, 1, 3, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ad90b2')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hell', 'dining', 'youth', 'degree', 'snow', 'blood', 'city', 'size', 'gift']","[7, 4, 1, 0, 1, 6, 4, 8, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hell', 'dining', 'youth', 'degree', 'snow', 'blood', 'city', 'size', 'gift']
values = [7, 4, 1, 0, 1, 6, 4, 8, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c727f4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['column', 'crowd', 'making', 'law', 'month']","[8, 9, 7, 7, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['column', 'crowd', 'making', 'law', 'month']
values = [8, 9, 7, 7, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#bb0f97')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dog', 'score', 'return', 'load', 'day']","[1, 9, 3, 8, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dog', 'score', 'return', 'load', 'day']
values = [1, 9, 3, 8, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#837e01')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['method', 'lock', 'grant', 'tray', 'sheet', 'race', 'plug', 'help', 'show']","[5, 5, 7, 0, 4, 1, 3, 7, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['method', 'lock', 'grant', 'tray', 'sheet', 'race', 'plug', 'help', 'show']
values = [5, 5, 7, 0, 4, 1, 3, 7, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#04a749')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hold', 'path', 'child', 'share', 'output', 'bag', 'phone']","[9, 2, 9, 5, 1, 5, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hold', 'path', 'child', 'share', 'output', 'bag', 'phone']
values = [9, 2, 9, 5, 1, 5, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#51208e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['slave', 'list', 'shore']","[6, 4, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['slave', 'list', 'shore']
values = [6, 4, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5e7773')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['barn', 'axis', 'saline', 'inside', 'guide']","[8, 4, 3, -3, -4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['barn', 'axis', 'saline', 'inside', 'guide']
values = [8, 4, 3, -3, -4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#21386f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stop', 'end', 'breath']","[5, 2, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stop', 'end', 'breath']
values = [5, 2, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0abc5c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['good', 'fog']","[4, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['good', 'fog']
values = [4, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a0aaf2')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['shot', 'root', 'disk', 'flesh', 'supply', 'unit', 'parade', 'pool', 'snake']","[90, 10, 40, 10, 40, 10, 30, 70, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shot', 'root', 'disk', 'flesh', 'supply', 'unit', 'parade', 'pool', 'snake']
values = [90, 10, 40, 10, 40, 10, 30, 70, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0222e4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stick', 'blue', 'colony', 'board', 'beat', 'temple', 'middle']","[6, 4, 7, 6, 2, 3, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stick', 'blue', 'colony', 'board', 'beat', 'temple', 'middle']
values = [6, 4, 7, 6, 2, 3, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#906e05')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['court', 'tour', 'sun', 'seed', 'heard', 'dark']","[6, 4, 4, 6, 5, 0]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['court', 'tour', 'sun', 'seed', 'heard', 'dark']
values = [6, 4, 4, 6, 5, 0]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#335d0d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wife', 'land', 'radar', 'tone', 'length']","[10000, 1000000, 1000, 100000, 1000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wife', 'land', 'radar', 'tone', 'length']
values = [10000, 1000000, 1000, 100000, 1000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ca41df')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['grant', 'firm', 'reform', 'belt']","[4, 5, 9, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['grant', 'firm', 'reform', 'belt']
values = [4, 5, 9, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e77f8b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cycle', 'artist', 'gate', 'decade', 'stand']","[8, 4, 9, 8, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cycle', 'artist', 'gate', 'decade', 'stand']
values = [8, 4, 9, 8, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#595b93')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['regime', 'kid', 'pack', 'truth']","[9, 4, 8, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['regime', 'kid', 'pack', 'truth']
values = [9, 4, 8, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#abbc73')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['chance', 'bullet', 'cereal', 'medium']","[7, 2, 1, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chance', 'bullet', 'cereal', 'medium']
values = [7, 2, 1, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5c5397')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['visit', 'relief', 'temple', 'trap', 'crisis', 'door']","[9, 2, 8, 2, 8, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['visit', 'relief', 'temple', 'trap', 'crisis', 'door']
values = [9, 2, 8, 2, 8, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#362fcd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['refund', 'page', 'taxi', 'marine', 'road', 'fellow']","[9, 9, 8, 9, 6, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['refund', 'page', 'taxi', 'marine', 'road', 'fellow']
values = [9, 9, 8, 9, 6, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b6fd1d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['faith', 'space']","[9, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['faith', 'space']
values = [9, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#03e842')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['son', 'author', 'self', 'stock', 'maid', 'source']","[8, 7, 3, 4, 8, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['son', 'author', 'self', 'stock', 'maid', 'source']
values = [8, 7, 3, 4, 8, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#cb71b3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cold', 'ship', 'fog', 'park']","[9, 1, 2, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cold', 'ship', 'fog', 'park']
values = [9, 1, 2, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ab89f1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['police', 'street', 'stairs', 'ladder', 'search']","[9, 9, 5, 9, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['police', 'street', 'stairs', 'ladder', 'search']
values = [9, 9, 5, 9, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#91ec2d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['regard', 'rhythm', 'yield', 'clerk', 'fall', 'pink', 'critic', 'park', 'wire']","[5, 3, 1, 7, 3, 3, 5, 5, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['regard', 'rhythm', 'yield', 'clerk', 'fall', 'pink', 'critic', 'park', 'wire']
values = [5, 3, 1, 7, 3, 3, 5, 5, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#527b42')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pay', 'east', 'guitar']","[1, 8, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pay', 'east', 'guitar']
values = [1, 8, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#94b2be')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['glance', 'dealer', 'lead', 'close', 'report']","[9, 7, 2, 9, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['glance', 'dealer', 'lead', 'close', 'report']
values = [9, 7, 2, 9, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#16de67')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ticket', 'aspect']","[7, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ticket', 'aspect']
values = [7, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#604c96')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['merger', 'battle', 'area', 'estate']","[90, 20, 20, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['merger', 'battle', 'area', 'estate']
values = [90, 20, 20, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9249e6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rush', 'radio', 'inside', 'flash', 'random', 'clerk', 'bent']","[1, 6, 9, 8, 6, 6, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rush', 'radio', 'inside', 'flash', 'random', 'clerk', 'bent']
values = [1, 6, 9, 8, 6, 6, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#dae537')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['train', 'grade', 'bullet', 'dawn', 'sewage']","[10, 10, 80, 20, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['train', 'grade', 'bullet', 'dawn', 'sewage']
values = [10, 10, 80, 20, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b00f4c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['car', 'study', 'well', 'chain', 'beam']","[4, 1, 7, 5, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['car', 'study', 'well', 'chain', 'beam']
values = [4, 1, 7, 5, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f0197b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sign', 'level', 'unity']","[8, 1, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sign', 'level', 'unity']
values = [8, 1, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#395cb0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pink', 'cabin', 'autumn', 'smoke', 'gun', 'stake', 'fog', 'court', 'board']","[70, 60, 70, 40, 70, 10, 70, 60, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pink', 'cabin', 'autumn', 'smoke', 'gun', 'stake', 'fog', 'court', 'board']
values = [70, 60, 70, 40, 70, 10, 70, 60, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3164a3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['disk', 'walk', 'bar', 'week', 'hell', 'trail']","[60, 30, 40, 20, 20, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['disk', 'walk', 'bar', 'week', 'hell', 'trail']
values = [60, 30, 40, 20, 20, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#789266')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['core', 'ship']","[4, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['core', 'ship']
values = [4, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5e7485')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['light', 'center', 'drive', 'sum', 'good']","[8, 7, 8, 6, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['light', 'center', 'drive', 'sum', 'good']
values = [8, 7, 8, 6, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4c4cf2')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['tie', 'mile']","[0, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tie', 'mile']
values = [0, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e66ca8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['summer', 'court', 'cover']","[5, 6, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['summer', 'court', 'cover']
values = [5, 6, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e2dffd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sport', 'taxi', 'bag', 'value', 'king', 'type']","[5, 9, 1, 7, 2, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sport', 'taxi', 'bag', 'value', 'king', 'type']
values = [5, 9, 1, 7, 2, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3af43b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['parade', 'hay', 'mile']","[4, 6, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['parade', 'hay', 'mile']
values = [4, 6, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#575769')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cell', 'lunch', 'sweat', 'flavor', 'turn', 'back', 'output']","[1000000000, 10, 10000000, 10000, 10, 1000000000, 100]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cell', 'lunch', 'sweat', 'flavor', 'turn', 'back', 'output']
values = [1000000000, 10, 10000000, 10000, 10, 1000000000, 100]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8bccd7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['source', 'cent', 'route', 'salt', 'wagon']","[1, 7, 1, 7, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['source', 'cent', 'route', 'salt', 'wagon']
values = [1, 7, 1, 7, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ca17d7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['glass', 'coast']","[60, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['glass', 'coast']
values = [60, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#955cb3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['agent', 'east', 'focus', 'cent']","[9, 6, 2, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['agent', 'east', 'focus', 'cent']
values = [9, 6, 2, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#31a042')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['age', 'unity', 'yield']","[5, 4, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['age', 'unity', 'yield']
values = [5, 4, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b3c650')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['yield', 'room', 'appeal', 'lay', 'list', 'brand']","[3, 4, 7, 4, 2, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['yield', 'room', 'appeal', 'lay', 'list', 'brand']
values = [3, 4, 7, 4, 2, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#60cba4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['soil', 'board', 'axis', 'limit', 'scene', 'south']","[9, 3, 3, 8, 9, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['soil', 'board', 'axis', 'limit', 'scene', 'south']
values = [9, 3, 3, 8, 9, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#fde377')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mode', 'mass', 'middle', 'chief', 'root', 'land']","[1000000, 100, 100, 10, 100000, 1000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mode', 'mass', 'middle', 'chief', 'root', 'land']
values = [1000000, 100, 100, 10, 100000, 1000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#de077e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['search', 'police', 'shock', 'good', 'tie', 'career', 'agent']","[1, 2, -4, 8, 7, 7, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['search', 'police', 'shock', 'good', 'tie', 'career', 'agent']
values = [1, 2, -4, 8, 7, 7, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#78db28')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['metal', 'fate', 'boat']","[8, 5, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['metal', 'fate', 'boat']
values = [8, 5, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4f4cf6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['threat', 'flesh', 'estate', 'space']","[8, 9, 9, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['threat', 'flesh', 'estate', 'space']
values = [8, 9, 9, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d5bc73')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['voice', 'foil', 'radar', 'harbor']","[5, 3, 3, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['voice', 'foil', 'radar', 'harbor']
values = [5, 3, 3, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#683670')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['uncle', 'good', 'extent', 'money']","[3, 2, 2, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['uncle', 'good', 'extent', 'money']
values = [3, 2, 2, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ac2195')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['farm', 'roof']","[1, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['farm', 'roof']
values = [1, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#200efd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['latter', 'camp', 'ranch', 'terror', 'jungle']","[7, 4, 5, 7, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['latter', 'camp', 'ranch', 'terror', 'jungle']
values = [7, 4, 5, 7, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#024362')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['skirt', 'temple', 'laugh', 'amount']","[10, 80, 90, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['skirt', 'temple', 'laugh', 'amount']
values = [10, 80, 90, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#86d14d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['review', 'twenty', 'style', 'device', 'favor']","[3, 5, 6, 4, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['review', 'twenty', 'style', 'device', 'favor']
values = [3, 5, 6, 4, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c05189')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sense', 'guilt', 'reform', 'color', 'tool', 'reach']","[60, 50, 90, 40, 50, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sense', 'guilt', 'reform', 'color', 'tool', 'reach']
values = [60, 50, 90, 40, 50, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#785f0a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lead', 'power', 'income', 'scale', 'bureau']","[1000, 1000000, 10000, 10, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lead', 'power', 'income', 'scale', 'bureau']
values = [1000, 1000000, 10000, 10, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#309d12')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['artery', 'vice', 'check', 'blood', 'harbor', 'mold', 'stroke', 'killer']","[100, 10, 10000, 10000, 100000000, 1000000, 100000000, 100000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['artery', 'vice', 'check', 'blood', 'harbor', 'mold', 'stroke', 'killer']
values = [100, 10, 10000, 10000, 100000000, 1000000, 100000000, 100000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#59c367')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['glass', 'play', 'grass', 'budget']","[6, 1, 5, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['glass', 'play', 'grass', 'budget']
values = [6, 1, 5, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2c1f53')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['string', 'switch', 'queen', 'suite']","[9, 2, 4, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['string', 'switch', 'queen', 'suite']
values = [9, 2, 4, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6d5bbd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['week', 'critic', 'blow']","[20, 20, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['week', 'critic', 'blow']
values = [20, 20, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#75c8e1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bar', 'savage', 'wisdom', 'silver', 'middle', 'lunch']","[1, 4, 2, 3, 8, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bar', 'savage', 'wisdom', 'silver', 'middle', 'lunch']
values = [1, 4, 2, 3, 8, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4a72eb')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['world', 'curve']","[1, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['world', 'curve']
values = [1, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#22b672')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['meal', 'loan']","[5, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['meal', 'loan']
values = [5, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9e21e8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['half', 'grant', 'lawyer', 'water', 'cup', 'safety']","[70, 50, 10, 20, 60, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['half', 'grant', 'lawyer', 'water', 'cup', 'safety']
values = [70, 50, 10, 20, 60, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4bbb1f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['doctor', 'gift', 'hand', 'hole', 'era']","[6, 4, 5, 5, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['doctor', 'gift', 'hand', 'hole', 'era']
values = [6, 4, 5, 5, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3614b9')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['latter', 'staff', 'shock']","[9, 8, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['latter', 'staff', 'shock']
values = [9, 8, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f9d189')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['desire', 'wood']","[20, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['desire', 'wood']
values = [20, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#29092b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['grace', 'sand', 'army']","[70, 90, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['grace', 'sand', 'army']
values = [70, 90, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b2d17b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['beer', 'suit', 'guilt', 'jar', 'hell', 'south']","[4, 1, 9, 9, 9, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['beer', 'suit', 'guilt', 'jar', 'hell', 'south']
values = [4, 1, 9, 9, 9, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#830183')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['visit', 'victim', 'verse', 'driver', 'smoke', 'temple', 'board', 'sense']","[90, 40, 50, 60, 80, 30, 50, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['visit', 'victim', 'verse', 'driver', 'smoke', 'temple', 'board', 'sense']
values = [90, 40, 50, 60, 80, 30, 50, 90]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ca8a03')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rage', 'meat', 'wave', 'chin']","[1000000, 100000000, 100000, 100]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rage', 'meat', 'wave', 'chin']
values = [1000000, 100000000, 100000, 100]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#df8527')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cancer', 'coffee', 'glance', 'foil', 'melody']","[70, 30, 80, 40, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cancer', 'coffee', 'glance', 'foil', 'melody']
values = [70, 30, 80, 40, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#238d9c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pot', 'adult', 'dealer', 'axis', 'joy', 'tire']","[9, 8, 6, 4, 4, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pot', 'adult', 'dealer', 'axis', 'joy', 'tire']
values = [9, 8, 6, 4, 4, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b289e6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['car', 'plant', 'hand', 'worth']","[3, 9, -2, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['car', 'plant', 'hand', 'worth']
values = [3, 9, -2, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#946b04')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['appeal', 'firm', 'guy', 'band', 'salary', 'panel', 'rush', 'moment']","[6, 2, 3, 2, 8, 5, 9, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['appeal', 'firm', 'guy', 'band', 'salary', 'panel', 'rush', 'moment']
values = [6, 2, 3, 2, 8, 5, 9, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8b3e57')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['artist', 'boat', 'bowl', 'lot', 'corps', 'plain']","[5, 8, 7, 4, 8, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['artist', 'boat', 'bowl', 'lot', 'corps', 'plain']
values = [5, 8, 7, 4, 8, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c0c0aa')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gang', 'gyro']","[7, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gang', 'gyro']
values = [7, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5e6330')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['jaw', 'panel', 'origin', 'sauce']","[4, 4, 7, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['jaw', 'panel', 'origin', 'sauce']
values = [4, 4, 7, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#05aaba')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['door', 'speech', 'code', 'check', 'guide']","[8, 9, 8, 1, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['door', 'speech', 'code', 'check', 'guide']
values = [8, 9, 8, 1, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#edc763')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['meat', 'guest', 'beer', 'valley', 'making']","[40, 70, 30, 60, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['meat', 'guest', 'beer', 'valley', 'making']
values = [40, 70, 30, 60, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0be8bc')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['object', 'cell', 'street']","[1, 2, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['object', 'cell', 'street']
values = [1, 2, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f7b20a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['aid', 'adult', 'right', 'mirror', 'light', 'mean']","[10, 20, 80, 20, 50, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['aid', 'adult', 'right', 'mirror', 'light', 'mean']
values = [10, 20, 80, 20, 50, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ede9a7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['coach', 'glass', 'rain', 'pipe', 'wall']","[50, 20, 20, 40, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['coach', 'glass', 'rain', 'pipe', 'wall']
values = [50, 20, 20, 40, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1c57e9')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['brick', 'shame', 'study', 'drop', 'pistol', 'food', 'stand']","[1, 8, 5, 4, 1, 6, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['brick', 'shame', 'study', 'drop', 'pistol', 'food', 'stand']
values = [1, 8, 5, 4, 1, 6, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#441fb9')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['moon', 'essay', 'coal']","[5, 4, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['moon', 'essay', 'coal']
values = [5, 4, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#84c4a2')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['letter', 'studio', 'plan', 'means', 'fog', 'lock']","[6, 6, 4, 4, 3, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['letter', 'studio', 'plan', 'means', 'fog', 'lock']
values = [6, 6, 4, 4, 3, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#793748')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['auto', 'jury', 'rifle', 'uncle', 'peace', 'fruit']","[10000000, 1000, 100000, 1000000000, 10000000, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['auto', 'jury', 'rifle', 'uncle', 'peace', 'fruit']
values = [10000000, 1000, 100000, 1000000000, 10000000, 100000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2646ac')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['plane', 'work', 'museum', 'soap', 'excuse', 'future']","[80, 40, 30, 40, 50, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['plane', 'work', 'museum', 'soap', 'excuse', 'future']
values = [80, 40, 30, 40, 50, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#181b5b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bread', 'colony', 'trial', 'firm']","[2, 9, 1, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bread', 'colony', 'trial', 'firm']
values = [2, 9, 1, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#26c657')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stem', 'ideal', 'melody', 'beat', 'card']","[4, 1, 4, 6, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stem', 'ideal', 'melody', 'beat', 'card']
values = [4, 1, 4, 6, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a28a14')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bench', 'jury', 'style', 'tone', 'thing']","[8, 7, 7, 3, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bench', 'jury', 'style', 'tone', 'thing']
values = [8, 7, 7, 3, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e848bf')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hero', 'breath', 'choice', 'motel']","[5, 8, 6, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hero', 'breath', 'choice', 'motel']
values = [5, 8, 6, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#07aea0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['impact', 'bus', 'craft', 'issue', 'ocean', 'tape']","[40, 20, 60, 40, 60, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['impact', 'bus', 'craft', 'issue', 'ocean', 'tape']
values = [40, 20, 60, 40, 60, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#cff8fa')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['clock', 'foam', 'saline', 'wonder']","[10000, 100000, 10000000, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['clock', 'foam', 'saline', 'wonder']
values = [10000, 100000, 10000000, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f95c8a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['escape', 'thing']","[1000, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['escape', 'thing']
values = [1000, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8556a0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['grave', 'window', 'dark']","[4, 6, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['grave', 'window', 'dark']
values = [4, 6, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#72966f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['search', 'holder', 'scheme', 'dozen', 'dancer', 'detail', 'dress', 'hill']","[8, 9, 8, 4, 6, 5, 5, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['search', 'holder', 'scheme', 'dozen', 'dancer', 'detail', 'dress', 'hill']
values = [8, 9, 8, 4, 6, 5, 5, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6e9a0b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['corps', 'breath', 'paper', 'train', 'planet', 'policy']","[-7, 1, 8, -6, 1, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['corps', 'breath', 'paper', 'train', 'planet', 'policy']
values = [-7, 1, 8, -6, 1, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#bc9f38')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['soil', 'reader', 'ladder', 'mature', 'safety', 'post', 'harm']","[3, 7, 2, 3, 1, 2, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['soil', 'reader', 'ladder', 'mature', 'safety', 'post', 'harm']
values = [3, 7, 2, 3, 1, 2, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c51ac6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sleep', 'spite']","[6, -7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sleep', 'spite']
values = [6, -7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#233d5b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['school', 'deal', 'sun', 'cell']","[1, 9, 0, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['school', 'deal', 'sun', 'cell']
values = [1, 9, 0, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3344c1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fury', 'guilt', 'unity', 'studio', 'birth']","[6, 8, 6, 3, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fury', 'guilt', 'unity', 'studio', 'birth']
values = [6, 8, 6, 3, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7fd57c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['meat', 'sphere', 'youth', 'data', 'circle', 'pot', 'desire']","[20, 70, 20, 30, 90, 50, 20]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['meat', 'sphere', 'youth', 'data', 'circle', 'pot', 'desire']
values = [20, 70, 20, 30, 90, 50, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#eff385')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cap', 'regime', 'affair']","[5, 6, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cap', 'regime', 'affair']
values = [5, 6, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6b2893')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['charge', 'unity']","[5, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['charge', 'unity']
values = [5, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#056b00')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['noise', 'focus', 'remark', 'race', 'note', 'rate', 'handle']","[6, 1, 1, 5, 6, 4, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['noise', 'focus', 'remark', 'race', 'note', 'rate', 'handle']
values = [6, 1, 1, 5, 6, 4, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#aff86d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['shadow', 'world', 'size', 'pink', 'rage', 'dance', 'branch', 'shape']","[70, 70, 90, 10, 40, 30, 30, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shadow', 'world', 'size', 'pink', 'rage', 'dance', 'branch', 'shape']
values = [70, 70, 90, 10, 40, 30, 30, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#12e6c6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bay', 'anyone', 'travel']","[10, 80, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bay', 'anyone', 'travel']
values = [10, 80, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6c3cd4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['remark', 'excess']","[8, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['remark', 'excess']
values = [8, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#aa632c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hen', 'spite', 'waste', 'energy', 'fly', 'route', 'piece', 'sleep']","[0, 80, 60, 90, 10, 90, 40, 90]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hen', 'spite', 'waste', 'energy', 'fly', 'route', 'piece', 'sleep']
values = [0, 80, 60, 90, 10, 90, 40, 90]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#78c8df')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wagon', 'state']","[9, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wagon', 'state']
values = [9, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#153df6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fact', 'regard', 'gown', 'injury', 'way', 'wound', 'excuse']","[4, 3, -4, 9, 2, -1, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fact', 'regard', 'gown', 'injury', 'way', 'wound', 'excuse']
values = [4, 3, -4, 9, 2, -1, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7f92d7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['father', 'source', 'cover', 'use', 'corner']","[7, 7, 3, 9, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['father', 'source', 'cover', 'use', 'corner']
values = [7, 7, 3, 9, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0f59de')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cabin', 'mirror', 'god']","[60, 70, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cabin', 'mirror', 'god']
values = [60, 70, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#763570')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['party', 'frame']","[7, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['party', 'frame']
values = [7, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b15348')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pace', 'signal', 'driver']","[9, 4, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pace', 'signal', 'driver']
values = [9, 4, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#727ac3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gas', 'terror', 'look']","[5, 6, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gas', 'terror', 'look']
values = [5, 6, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7f3243')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['clouds', 'bath', 'count']","[8, 7, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['clouds', 'bath', 'count']
values = [8, 7, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e3e16c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['reach', 'aid', 'sand']","[1, 8, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['reach', 'aid', 'sand']
values = [1, 8, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#48c7ef')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['chip', 'impact', 'source']","[6, 7, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chip', 'impact', 'source']
values = [6, 7, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e2d748')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['nobody', 'tent', 'text', 'view', 'wage', 'height', 'legend']","[80, 60, 60, 50, 60, 30, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['nobody', 'tent', 'text', 'view', 'wage', 'height', 'legend']
values = [80, 60, 60, 50, 60, 30, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a061a5')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bath', 'fiber', 'mirror']","[1, 4, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bath', 'fiber', 'mirror']
values = [1, 4, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d008d5')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['guilt', 'doubt', 'market', 'liquor', 'pitch', 'agent', 'pastor', 'hay']","[7, 5, 2, 8, 7, 2, 9, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['guilt', 'doubt', 'market', 'liquor', 'pitch', 'agent', 'pastor', 'hay']
values = [7, 5, 2, 8, 7, 2, 9, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#07c0aa')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['list', 'attack', 'study', 'brand']","[4, 2, 1, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['list', 'attack', 'study', 'brand']
values = [4, 2, 1, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1398f1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['till', 'care', 'scheme', 'sera', 'worry']","[5, 3, 3, 5, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['till', 'care', 'scheme', 'sera', 'worry']
values = [5, 3, 3, 5, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f5cfd3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hat', 'deal', 'speech', 'thirty', 'bread']","[6, 8, 7, 2, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hat', 'deal', 'speech', 'thirty', 'bread']
values = [6, 8, 7, 2, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2ff94d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pond', 'sky', 'pastor', 'choice']","[3, 3, 2, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pond', 'sky', 'pastor', 'choice']
values = [3, 3, 2, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f1608b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['peace', 'chair', 'gift', 'camera']","[2, 1, 6, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['peace', 'chair', 'gift', 'camera']
values = [2, 1, 6, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3172b0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['region', 'date', 'moment']","[4, 4, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['region', 'date', 'moment']
values = [4, 4, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#30b6c6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['affair', 'period']","[3, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['affair', 'period']
values = [3, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#34afd3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fire', 'turn', 'tire', 'range', 'goal', 'sake', 'clay']","[1, 4, 8, 6, 5, 7, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fire', 'turn', 'tire', 'range', 'goal', 'sake', 'clay']
values = [1, 4, 8, 6, 5, 7, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a04fa8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['crop', 'whisky']","[70, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crop', 'whisky']
values = [70, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7e1c37')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['search', 'budget', 'light', 'tail']","[1, -9, 0, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['search', 'budget', 'light', 'tail']
values = [1, -9, 0, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c29537')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cure', 'house', 'future']","[80, 60, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cure', 'house', 'future']
values = [80, 60, 70]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f3a59a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['making', 'barrel', 'iron', 'regime', 'warmth']","[0, 4, 2, 9, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['making', 'barrel', 'iron', 'regime', 'warmth']
values = [0, 4, 2, 9, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#08cfdd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['baby', 'dive', 'plane', 'plug', 'vision', 'event']","[9, 6, 7, 8, 2, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['baby', 'dive', 'plane', 'plug', 'vision', 'event']
values = [9, 6, 7, 8, 2, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#118e40')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bit', 'salt', 'coat', 'mean', 'killer', 'sorry']","[7, 0, 6, 1, 9, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bit', 'salt', 'coat', 'mean', 'killer', 'sorry']
values = [7, 0, 6, 1, 9, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e27aae')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sale', 'movie', 'jungle', 'half', 'team', 'limit', 'wash']","[9, 5, 8, 9, 8, 1, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sale', 'movie', 'jungle', 'half', 'team', 'limit', 'wash']
values = [9, 5, 8, 9, 8, 1, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3841fb')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['post', 'tape', 'tire']","[8, 2, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['post', 'tape', 'tire']
values = [8, 2, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f76caa')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fly', 'loss', 'damage', 'ten']","[4, 4, 4, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fly', 'loss', 'damage', 'ten']
values = [4, 4, 4, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#89a4b5')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['skill', 'staff']","[8, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['skill', 'staff']
values = [8, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6ecbfb')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['feed', 'midst', 'love', 'match']","[5, 9, 5, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['feed', 'midst', 'love', 'match']
values = [5, 9, 5, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8b5f21')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['reader', 'cent', 'earth', 'work']","[10, 90, 40, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['reader', 'cent', 'earth', 'work']
values = [10, 90, 40, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#43fdde')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['graph', 'debate', 'studio', 'mood', 'impact']","[6, 8, 5, 8, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['graph', 'debate', 'studio', 'mood', 'impact']
values = [6, 8, 5, 8, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e3560c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['judge', 'thing', 'genius']","[90, 50, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['judge', 'thing', 'genius']
values = [90, 50, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#84f79a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fog', 'reader', 'bus', 'farm', 'arm', 'past', 'atom', 'movie']","[90, 20, 30, 70, 50, 20, 30, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fog', 'reader', 'bus', 'farm', 'arm', 'past', 'atom', 'movie']
values = [90, 20, 30, 70, 50, 20, 30, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#17672c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['army', 'honor', 'level', 'sir', 'folk']","[6, 3, 3, 1, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['army', 'honor', 'level', 'sir', 'folk']
values = [6, 3, 3, 1, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#25ae2b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['behalf', 'point', 'plan', 'sleep', 'ride', 'dawn', 'danger', 'twelve', 'entry']","[3, 5, 7, 5, 4, 7, 1, 7, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['behalf', 'point', 'plan', 'sleep', 'ride', 'dawn', 'danger', 'twelve', 'entry']
values = [3, 5, 7, 5, 4, 7, 1, 7, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b07b99')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['thick', 'roll', 'stress', 'twenty', 'scene']","[8, 4, 3, 3, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['thick', 'roll', 'stress', 'twenty', 'scene']
values = [8, 4, 3, 3, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1ffe61')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wave', 'bowl', 'deal', 'charge']","[100000000, 100000000, 1, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wave', 'bowl', 'deal', 'charge']
values = [100000000, 100000000, 1, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#235526')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pond', 'powder', 'fog']","[4, 7, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pond', 'powder', 'fog']
values = [4, 7, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c88729')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cash', 'blonde', 'chain']","[9, 2, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cash', 'blonde', 'chain']
values = [9, 2, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#74ecb0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['brief', 'favor', 'paper', 'fly']","[3, 1, 1, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['brief', 'favor', 'paper', 'fly']
values = [3, 1, 1, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#07b6c2')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wall', 'jaw', 'colony', 'price', 'date', 'memory']","[9, 2, 6, 6, 8, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wall', 'jaw', 'colony', 'price', 'date', 'memory']
values = [9, 2, 6, 6, 8, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#fb7dab')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cure', 'screen', 'throat', 'fun']","[5, 3, 2, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cure', 'screen', 'throat', 'fun']
values = [5, 3, 2, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1a51e0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['soul', 'route', 'bulk', 'match']","[3, 3, 2, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['soul', 'route', 'bulk', 'match']
values = [3, 3, 2, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#04da0a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['worker', 'cell', 'seed', 'scale', 'blonde']","[4, 5, 5, 7, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['worker', 'cell', 'seed', 'scale', 'blonde']
values = [4, 5, 5, 7, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c9a3a0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['crowd', 'vice']","[1, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crowd', 'vice']
values = [1, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#764000')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['kid', 'island', 'moment', 'lot']","[7, 8, 1, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['kid', 'island', 'moment', 'lot']
values = [7, 8, 1, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2b4794')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['piece', 'detail', 'suit']","[3, 1, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['piece', 'detail', 'suit']
values = [3, 1, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#062e5c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cabin', 'studio']","[7, 0]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cabin', 'studio']
values = [7, 0]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#61808c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lot', 'wound', 'fact', 'cloud', 'member', 'army', 'appeal', 'drug']","[70, 20, 20, 40, 50, 50, 40, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lot', 'wound', 'fact', 'cloud', 'member', 'army', 'appeal', 'drug']
values = [70, 20, 20, 40, 50, 50, 40, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#727ced')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lunch', 'amount', 'truck', 'bay', 'ease']","[40, 70, 90, 70, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lunch', 'amount', 'truck', 'bay', 'ease']
values = [40, 70, 90, 70, 70]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#aa326a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['music', 'string', 'trial']","[3, 2, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['music', 'string', 'trial']
values = [3, 2, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9f3fe0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sale', 'latter']","[7, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sale', 'latter']
values = [7, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4038e8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['court', 'career', 'base', 'living']","[6, 9, 7, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['court', 'career', 'base', 'living']
values = [6, 9, 7, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7d080f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['motor', 'making', 'corps', 'jail']","[2, 4, 5, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['motor', 'making', 'corps', 'jail']
values = [2, 4, 5, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ed5afc')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['soil', 'budget', 'policy']","[7, 6, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['soil', 'budget', 'policy']
values = [7, 6, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9f930e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['coal', 'plant', 'genius', 'square', 'loss']","[2, 9, 1, 9, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['coal', 'plant', 'genius', 'square', 'loss']
values = [2, 9, 1, 9, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e9accb')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cloth', 'trust', 'summer', 'stroke', 'legend']","[60, 30, 40, 20, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cloth', 'trust', 'summer', 'stroke', 'legend']
values = [60, 30, 40, 20, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#324b15')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['handle', 'well', 'rhythm', 'glance', 'cannot', 'savage', 'doubt', 'value']","[2, 2, 7, 2, 8, 4, 3, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['handle', 'well', 'rhythm', 'glance', 'cannot', 'savage', 'doubt', 'value']
values = [2, 2, 7, 2, 8, 4, 3, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#bf9d4f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['flood', 'story', 'fish', 'height', 'record', 'boss']","[7, 1, 7, 2, 9, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['flood', 'story', 'fish', 'height', 'record', 'boss']
values = [7, 1, 7, 2, 9, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5a5ccf')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['loss', 'sex', 'nation', 'grade', 'herd', 'cup']","[6, 5, 2, 8, 7, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['loss', 'sex', 'nation', 'grade', 'herd', 'cup']
values = [6, 5, 2, 8, 7, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4b3bea')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['flow', 'chance', 'mode', 'sign', 'law', 'paint', 'access', 'dollar']","[4, 8, 5, 8, 1, 6, 9, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['flow', 'chance', 'mode', 'sign', 'law', 'paint', 'access', 'dollar']
values = [4, 8, 5, 8, 1, 6, 9, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f7b880')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pay', 'injury']","[50, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pay', 'injury']
values = [50, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6c9d9a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['coffee', 'horror', 'term', 'limit']","[1, 4, 5, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['coffee', 'horror', 'term', 'limit']
values = [1, 4, 5, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8e75cd')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['nature', 'melody', 'pot', 'cereal']","[60, 10, 80, 90]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['nature', 'melody', 'pot', 'cereal']
values = [60, 10, 80, 90]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ad4770')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['beach', 'lie']","[1, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['beach', 'lie']
values = [1, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#72f0ef')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fish', 'widow', 'agency']","[2, 8, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fish', 'widow', 'agency']
values = [2, 8, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2522b5')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ten', 'gun', 'share']","[40, 50, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ten', 'gun', 'share']
values = [40, 50, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#086869')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bone', 'fan', 'twenty', 'share', 'weight', 'salt']","[80, 70, 30, 60, 60, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bone', 'fan', 'twenty', 'share', 'weight', 'salt']
values = [80, 70, 30, 60, 60, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#aca6af')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['self', 'angle', 'editor', 'bone']","[4, 1, 6, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['self', 'angle', 'editor', 'bone']
values = [4, 1, 6, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4b16b5')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['skin', 'town', 'window', 'canvas', 'cap', 'stage', 'fog', 'liquor', 'adult']","[6, 5, 7, 7, 8, 3, 4, 1, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['skin', 'town', 'window', 'canvas', 'cap', 'stage', 'fog', 'liquor', 'adult']
values = [6, 5, 7, 7, 8, 3, 4, 1, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ceb8a2')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bag', 'expert']","[60, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bag', 'expert']
values = [60, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#522d4f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wash', 'book', 'theory']","[1000000, 100000000, 1000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wash', 'book', 'theory']
values = [1000000, 100000000, 1000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c6a2da')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['job', 'claim']","[7, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['job', 'claim']
values = [7, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#27ac54')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['threat', 'aid', 'herd', 'date']","[6, 6, 5, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['threat', 'aid', 'herd', 'date']
values = [6, 6, 5, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e54e1a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['birth', 'valley', 'living', 'bowl', 'bone', 'ear', 'source', 'set']","[50, 80, 30, 50, 80, 90, 40, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['birth', 'valley', 'living', 'bowl', 'bone', 'ear', 'source', 'set']
values = [50, 80, 30, 50, 80, 90, 40, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6d9af2')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dome', 'truck', 'snow', 'fence', 'wood', 'artist']","[5, 7, 8, 7, 7, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dome', 'truck', 'snow', 'fence', 'wood', 'artist']
values = [5, 7, 8, 7, 7, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#319191')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['valley', 'cellar', 'owner', 'race', 'date', 'rhythm', 'scale', 'bay']","[7, 2, 9, 3, 8, 2, 8, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['valley', 'cellar', 'owner', 'race', 'date', 'rhythm', 'scale', 'bay']
values = [7, 2, 9, 3, 8, 2, 8, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7635da')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['income', 'warmth', 'study']","[7, 1, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['income', 'warmth', 'study']
values = [7, 1, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7c22d1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['scene', 'evil', 'study', 'health', 'sign', 'chair', 'flux', 'growth']","[2, 5, 8, 5, 9, 3, 4, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['scene', 'evil', 'study', 'health', 'sign', 'chair', 'flux', 'growth']
values = [2, 5, 8, 5, 9, 3, 4, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b44c39')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['artery', 'rhythm', 'home', 'mass']","[3, 4, 3, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['artery', 'rhythm', 'home', 'mass']
values = [3, 4, 3, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5b1184')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['reach', 'plane', 'sand', 'army', 'age', 'help', 'enemy', 'plan']","[2, 8, 4, 1, 4, 4, 5, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['reach', 'plane', 'sand', 'army', 'age', 'help', 'enemy', 'plan']
values = [2, 8, 4, 1, 4, 4, 5, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c5e962')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cheek', 'opera', 'walk', 'need', 'supply', 'brain']","[1, 1, 4, 2, 6, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cheek', 'opera', 'walk', 'need', 'supply', 'brain']
values = [1, 1, 4, 2, 6, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5f6895')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['writer', 'size', 'tone', 'blue']","[4, 7, 7, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['writer', 'size', 'tone', 'blue']
values = [4, 7, 7, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ad35c0')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['liquor', 'cut', 'hair', 'model', 'foil']","[90, 30, 60, 50, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['liquor', 'cut', 'hair', 'model', 'foil']
values = [90, 30, 60, 50, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7d58ab')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fact', 'view', 'neck', 'sewage', 'poetry', 'meal']","[10000000, 1000000000, 1000, 1, 1000000000, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fact', 'view', 'neck', 'sewage', 'poetry', 'meal']
values = [10000000, 1000000000, 1000, 1, 1000000000, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9e8224')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mark', 'amount', 'gift', 'fee', 'bottle']","[7, 1, 5, 3, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mark', 'amount', 'gift', 'fee', 'bottle']
values = [7, 1, 5, 3, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a9487b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sale', 'leader', 'skirt', 'floor', 'goal', 'pass', 'mercy']","[1000000, 1000, 1000, 10000000, 100, 100000000, 1000000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sale', 'leader', 'skirt', 'floor', 'goal', 'pass', 'mercy']
values = [1000000, 1000, 1000, 10000000, 100, 100000000, 1000000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#de4be8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['myth', 'sugar', 'data']","[60, 90, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['myth', 'sugar', 'data']
values = [60, 90, 50]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8c2584')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pride', 'get', 'movie', 'trail']","[70, 80, 20, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pride', 'get', 'movie', 'trail']
values = [70, 80, 20, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f5a5da')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lie', 'defeat', 'vice', 'figure', 'mind', 'editor']","[4, 1, 9, 5, 9, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lie', 'defeat', 'vice', 'figure', 'mind', 'editor']
values = [4, 1, 9, 5, 9, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#aa304f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['radar', 'gown', 'game', 'action', 'legs', 'vacuum', 'worker']","[2, 6, 1, 1, 5, 3, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['radar', 'gown', 'game', 'action', 'legs', 'vacuum', 'worker']
values = [2, 6, 1, 1, 5, 3, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#749a45')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['style', 'core', 'song', 'appeal', 'rest']","[5, 8, 5, 9, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['style', 'core', 'song', 'appeal', 'rest']
values = [5, 8, 5, 9, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#75131e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['paint', 'effort', 'bowl']","[5, 3, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['paint', 'effort', 'bowl']
values = [5, 3, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#60df41')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['worker', 'trust', 'pure']","[100000000, 100, 1000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['worker', 'trust', 'pure']
values = [100000000, 100, 1000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#25b12f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sugar', 'pond', 'ground', 'rate', 'wit', 'pitch']","[4, 4, 8, 3, 6, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sugar', 'pond', 'ground', 'rate', 'wit', 'pitch']
values = [4, 4, 8, 3, 6, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d91309')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['beach', 'club', 'neck', 'dinner', 'oxygen', 'extent']","[9, 2, 1, 3, 2, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['beach', 'club', 'neck', 'dinner', 'oxygen', 'extent']
values = [9, 2, 1, 3, 2, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ccff87')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['body', 'beer']","[5, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['body', 'beer']
values = [5, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1af45b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['evil', 'cell', 'news', 'team', 'club', 'supply', 'soap', 'visit', 'motel']","[6, 1, 7, 3, 7, 4, 3, 3, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['evil', 'cell', 'news', 'team', 'club', 'supply', 'soap', 'visit', 'motel']
values = [6, 1, 7, 3, 7, 4, 3, 3, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f89caa')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['excess', 'decade', 'volume', 'artist', 'harm', 'minute', 'appeal']","[5, 1, 8, 4, 1, 6, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['excess', 'decade', 'volume', 'artist', 'harm', 'minute', 'appeal']
values = [5, 1, 8, 4, 1, 6, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ac327f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['scope', 'inch', 'wait', 'judge', 'parade', 'value']","[80, 10, 20, 20, 70, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['scope', 'inch', 'wait', 'judge', 'parade', 'value']
values = [80, 10, 20, 20, 70, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1ad023')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['end', 'chance', 'status', 'aspect', 'pause', 'depth']","[1, 3, 5, -9, 3, -3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['end', 'chance', 'status', 'aspect', 'pause', 'depth']
values = [1, 3, 5, -9, 3, -3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#93246e')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mold', 'heart', 'pay']","[40, 60, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mold', 'heart', 'pay']
values = [40, 60, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ee64b2')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bulk', 'widow', 'season', 'budget', 'wound', 'fault']","[40, 60, 70, 50, 10, 40]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bulk', 'widow', 'season', 'budget', 'wound', 'fault']
values = [40, 60, 70, 50, 10, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3a8e02')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['answer', 'search', 'radio', 'boss']","[1000000000, 1000000000, 100000000, 100]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['answer', 'search', 'radio', 'boss']
values = [1000000000, 1000000000, 100000000, 100]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#77c7bb')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['birth', 'boy', 'cover', 'farm']","[4, 1, 3, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['birth', 'boy', 'cover', 'farm']
values = [4, 1, 3, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5103d4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['region', 'doctor', 'room', 'melody', 'letter']","[7, 4, 7, 1, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['region', 'doctor', 'room', 'melody', 'letter']
values = [7, 4, 7, 1, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#34870d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['injury', 'clerk', 'round', 'flash', 'height', 'plant', 'youth']","[3, 1, 1, 7, 9, 1, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['injury', 'clerk', 'round', 'flash', 'height', 'plant', 'youth']
values = [3, 1, 1, 7, 9, 1, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8e663f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['file', 'lesson', 'play', 'brass', 'trail']","[7, 8, 9, 9, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['file', 'lesson', 'play', 'brass', 'trail']
values = [7, 8, 9, 9, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#42017f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['weight', 'fury', 'choice', 'harbor', 'effect', 'fruit', 'excuse', 'vote']","[10000000, 1000000000, 10, 1000000, 100, 10, 10, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['weight', 'fury', 'choice', 'harbor', 'effect', 'fruit', 'excuse', 'vote']
values = [10000000, 1000000000, 10, 1000000, 100, 10, 10, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d31f91')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['view', 'snake']","[4, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['view', 'snake']
values = [4, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f8e628')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['closet', 'stand', 'winter']","[80, 70, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['closet', 'stand', 'winter']
values = [80, 70, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4e5ec8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['farm', 'herd', 'memory', 'sewage', 'signal']","[9, 7, 7, 8, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['farm', 'herd', 'memory', 'sewage', 'signal']
values = [9, 7, 7, 8, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c4b507')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['plate', 'turn', 'effort']","[8, 1, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['plate', 'turn', 'effort']
values = [8, 1, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#177a01')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['flesh', 'fly', 'sweat', 'mean', 'pistol', 'score']","[3, 7, 6, 5, 9, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['flesh', 'fly', 'sweat', 'mean', 'pistol', 'score']
values = [3, 7, 6, 5, 9, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#330b8a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cloth', 'chance']","[8, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cloth', 'chance']
values = [8, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#afac25')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['rise', 'left']","[1, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rise', 'left']
values = [1, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c634ad')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wind', 'remark', 'role', 'issue', 'hold', 'legs', 'area']","[90, 80, 70, 70, 60, 20, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wind', 'remark', 'role', 'issue', 'hold', 'legs', 'area']
values = [90, 80, 70, 70, 60, 20, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ed8100')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['group', 'stock', 'age', 'note', 'model']","[10000, 100000, 100000000, 1000000, 10000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['group', 'stock', 'age', 'note', 'model']
values = [10000, 100000, 100000000, 1000000, 10000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#df54ad')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['plenty', 'hole', 'roof', 'hunger']","[4, 8, 8, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['plenty', 'hole', 'roof', 'hunger']
values = [4, 8, 8, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6c7ce3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['shame', 'income', 'front', 'today', 'return', 'secret']","[6, 1, 7, 4, 6, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shame', 'income', 'front', 'today', 'return', 'secret']
values = [6, 1, 7, 4, 6, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#47f1c8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['brush', 'bread']","[2, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['brush', 'bread']
values = [2, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6e5db8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['feel', 'knife']","[30, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['feel', 'knife']
values = [30, 70]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#58ed37')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['heat', 'gay', 'pond', 'gift', 'coast', 'cream']","[8, 9, 7, 2, 5, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['heat', 'gay', 'pond', 'gift', 'coast', 'cream']
values = [8, 9, 7, 2, 5, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#fc549a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bride', 'site', 'hurry', 'day']","[3, 8, 3, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bride', 'site', 'hurry', 'day']
values = [3, 8, 3, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a76256')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['king', 'drug', 'drive', 'post']","[3, 8, 4, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['king', 'drug', 'drive', 'post']
values = [3, 8, 4, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d13503')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['coal', 'pipe']","[9, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['coal', 'pipe']
values = [9, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#09b640')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lobby', 'reason', 'end', 'relief']","[4, 2, 5, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lobby', 'reason', 'end', 'relief']
values = [4, 2, 5, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e53700')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['breath', 'clock', 'brass', 'back', 'cure', 'realm', 'grave']","[1, -9, 3, 4, 3, 6, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['breath', 'clock', 'brass', 'back', 'cure', 'realm', 'grave']
values = [1, -9, 3, 4, 3, 6, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e73eac')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['left', 'input', 'regime', 'fog']","[20, 90, 30, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['left', 'input', 'regime', 'fog']
values = [20, 90, 30, 90]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#21a082')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pack', 'humor']","[5, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pack', 'humor']
values = [5, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3a6514')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fluid', 'worry', 'youth', 'career', 'guy', 'truck']","[6, 5, 9, 5, 9, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fluid', 'worry', 'youth', 'career', 'guy', 'truck']
values = [6, 5, 9, 5, 9, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a5c934')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['shame', 'pair', 'threat', 'noise']","[20, 40, 90, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shame', 'pair', 'threat', 'noise']
values = [20, 40, 90, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ed4c40')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['denial', 'shop', 'valley', 'sugar']","[1, 1, 6, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['denial', 'shop', 'valley', 'sugar']
values = [1, 1, 6, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#91214b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['staff', 'man', 'look']","[3, 7, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['staff', 'man', 'look']
values = [3, 7, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4b26f7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['lack', 'family', 'grade', 'jungle']","[10000, 100000, 100, 1000000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lack', 'family', 'grade', 'jungle']
values = [10000, 100000, 100, 1000000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9baa07')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['murder', 'tail', 'mass', 'arm', 'noise', 'crisis', 'safety']","[5, 9, 4, 1, 9, 8, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['murder', 'tail', 'mass', 'arm', 'noise', 'crisis', 'safety']
values = [5, 9, 4, 1, 9, 8, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a92664')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['warmth', 'gyro', 'rear', 'smile', 'prize', 'lie']","[5, 7, 2, 2, 4, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['warmth', 'gyro', 'rear', 'smile', 'prize', 'lie']
values = [5, 7, 2, 2, 4, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a6d3ec')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['warmth', 'garage', 'paper']","[9, 8, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['warmth', 'garage', 'paper']
values = [9, 8, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b963db')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['extent', 'bench', 'store', 'sex', 'lawyer']","[20, 90, 20, 80, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['extent', 'bench', 'store', 'sex', 'lawyer']
values = [20, 90, 20, 80, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e30d35')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['porch', 'dancer', 'lot', 'valley', 'heart', 'beach', 'coffee']","[100000, 100000000, 10, 1000, 100000000, 10, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['porch', 'dancer', 'lot', 'valley', 'heart', 'beach', 'coffee']
values = [100000, 100000000, 10, 1000, 100000000, 10, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f41a96')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['woman', 'cry']","[7, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['woman', 'cry']
values = [7, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#281671')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['warmth', 'knee', 'truth', 'corn']","[9, 1, 5, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['warmth', 'knee', 'truth', 'corn']
values = [9, 1, 5, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ec2077')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pitch', 'stop', 'decade', 'tape']","[7, 7, 3, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pitch', 'stop', 'decade', 'tape']
values = [7, 7, 3, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#98b06f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['bottle', 'vision', 'vertex', 'data', 'lot', 'master']","[70, 30, 30, 0, 90, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bottle', 'vision', 'vertex', 'data', 'lot', 'master']
values = [70, 30, 30, 0, 90, 70]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b88427')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sweat', 'string']","[1, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sweat', 'string']
values = [1, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2e31d6')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['expert', 'living', 'bread']","[2, 6, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['expert', 'living', 'bread']
values = [2, 6, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#62ce22')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['year', 'rage', 'herd']","[3, 1, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['year', 'rage', 'herd']
values = [3, 1, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#20e223')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['foot', 'loan']","[10, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['foot', 'loan']
values = [10, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#3bccba')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['owner', 'estate', 'face', 'drunk']","[7, 2, 5, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['owner', 'estate', 'face', 'drunk']
values = [7, 2, 5, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a5fa45')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['fellow', 'state', 'deck', 'sitter']","[2, 6, 5, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fellow', 'state', 'deck', 'sitter']
values = [2, 6, 5, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e3fdc5')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['boat', 'bare', 'pond', 'thirty', 'data', 'boy']","[60, 10, 50, 50, 60, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['boat', 'bare', 'pond', 'thirty', 'data', 'boy']
values = [60, 10, 50, 50, 60, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f8008b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wire', 'crew', 'stock', 'poem', 'luck']","[5, 9, 4, 5, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wire', 'crew', 'stock', 'poem', 'luck']
values = [5, 9, 4, 5, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#df62ee')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['ticket', 'sake', 'growth', 'lesson']","[4, 8, 3, -6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ticket', 'sake', 'growth', 'lesson']
values = [4, 8, 3, -6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#23fe17')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['item', 'kind', 'terror']","[9, 3, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['item', 'kind', 'terror']
values = [9, 3, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f8f5eb')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['son', 'store', 'pond', 'bowl', 'vector']","[10, 60, 10, 50, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['son', 'store', 'pond', 'bowl', 'vector']
values = [10, 60, 10, 50, 60]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#23c90d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['agency', 'access', 'today', 'barn', 'drunk', 'box']","[6, 4, 2, 5, 2, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['agency', 'access', 'today', 'barn', 'drunk', 'box']
values = [6, 4, 2, 5, 2, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f1066d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wound', 'terror', 'dome', 'county', 'adult', 'lunch', 'strike']","[6, 3, 4, 6, 7, 2, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wound', 'terror', 'dome', 'county', 'adult', 'lunch', 'strike']
values = [6, 3, 4, 6, 7, 2, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b8a370')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['list', 'color', 'middle', 'cotton', 'wage', 'circle', 'cash', 'region']","[6, 1, 1, 8, 6, 6, 1, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['list', 'color', 'middle', 'cotton', 'wage', 'circle', 'cash', 'region']
values = [6, 1, 1, 8, 6, 6, 1, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#4783db')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['corps', 'pencil']","[7, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['corps', 'pencil']
values = [7, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d4c9c1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['metal', 'wait', 'reason', 'right', 'sound', 'start']","[10000000, 10, 10000, 1000000, 10000, 100]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['metal', 'wait', 'reason', 'right', 'sound', 'start']
values = [10000000, 10, 10000, 1000000, 10000, 100]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#744788')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['chief', 'scope']","[6, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chief', 'scope']
values = [6, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2c1191')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['till', 'rate', 'worry', 'start', 'stake', 'trap', 'cut']","[4, 6, 3, 2, 3, 2, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['till', 'rate', 'worry', 'start', 'stake', 'trap', 'cut']
values = [4, 6, 3, 2, 3, 2, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1fc53f')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['joy', 'vision', 'self', 'bottom', 'sin', 'road']","[9, 4, 9, -1, 7, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['joy', 'vision', 'self', 'bottom', 'sin', 'road']
values = [9, 4, 9, -1, 7, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c0db1d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['myth', 'folk', 'wound', 'base', 'spite']","[30, 60, 40, 70, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['myth', 'folk', 'wound', 'base', 'spite']
values = [30, 60, 40, 70, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1a0234')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['diet', 'focus', 'cash']","[2, 2, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['diet', 'focus', 'cash']
values = [2, 2, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#298461')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['barrel', 'whole']","[20, 90]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['barrel', 'whole']
values = [20, 90]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#08775b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['game', 'prison', 'canvas', 'aid']","[10000, 100000000, 100, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['game', 'prison', 'canvas', 'aid']
values = [10000, 100000000, 100, 100000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#bf1602')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Values', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['speech', 'glance']","[10, 1000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['speech', 'glance']
values = [10, 1000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5a74f7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wave', 'place', 'dirt']","[8, 4, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wave', 'place', 'dirt']
values = [8, 4, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c5d1a7')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sale', 'office', 'cross', 'horse', 'wit', 'west', 'tip']","[1, 2, 1, 5, 1, 1, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sale', 'office', 'cross', 'horse', 'wit', 'west', 'tip']
values = [1, 2, 1, 5, 1, 1, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d58ded')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['snake', 'radio', 'form', 'sky']","[8, 9, 1, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['snake', 'radio', 'form', 'sky']
values = [8, 9, 1, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9a5640')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['hole', 'bus', 'pair', 'jar', 'skill', 'lobby']","[4, 2, 5, 2, 6, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hole', 'bus', 'pair', 'jar', 'skill', 'lobby']
values = [4, 2, 5, 2, 6, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1aa005')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['uncle', 'body', 'talent', 'fault', 'drift', 'brief']","[7, 8, 7, 3, 8, -7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['uncle', 'body', 'talent', 'fault', 'drift', 'brief']
values = [7, 8, 7, 3, 8, -7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5c260b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gift', 'bare', 'nation', 'south', 'office', 'vice', 'ocean']","[3, 9, 8, 5, 8, 9, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gift', 'bare', 'nation', 'south', 'office', 'vice', 'ocean']
values = [3, 9, 8, 5, 8, 9, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6a2640')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gyro', 'master', 'floor', 'virtue']","[3, 2, 6, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gyro', 'master', 'floor', 'virtue']
values = [3, 2, 6, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#0fd893')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['anyone', 'hand', 'help', 'word', 'area', 'label']","[6, 4, 1, 2, 6, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['anyone', 'hand', 'help', 'word', 'area', 'label']
values = [6, 4, 1, 2, 6, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5a6c35')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['slave', 'garden', 'story', 'train', 'chest', 'dirt', 'letter']","[70, 80, 90, 10, 90, 50, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['slave', 'garden', 'story', 'train', 'chest', 'dirt', 'letter']
values = [70, 80, 90, 10, 90, 50, 10]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#71fc27')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['grace', 'film', 'sera']","[1000000000, 10, 1000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['grace', 'film', 'sera']
values = [1000000000, 10, 1000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#2c6704')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['grain', 'union', 'duty']","[2, 2, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['grain', 'union', 'duty']
values = [2, 2, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#6fdfd8')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['spread', 'sleep', 'melody', 'shade', 'copy', 'trail', 'glory']","[3, 5, 8, 6, 8, 6, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['spread', 'sleep', 'melody', 'shade', 'copy', 'trail', 'glory']
values = [3, 5, 8, 6, 8, 6, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8d91e9')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['crew', 'clerk', 'figure', 'water']","[7, 8, 7, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crew', 'clerk', 'figure', 'water']
values = [7, 8, 7, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#22c536')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['mess', 'twenty', 'teeth', 'coast']","[1, 5, 9, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mess', 'twenty', 'teeth', 'coast']
values = [1, 5, 9, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#ca62b3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['doubt', 'storm', 'honey', 'review', 'cow', 'leg', 'budget']","[20, 40, 10, 60, 80, 40, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['doubt', 'storm', 'honey', 'review', 'cow', 'leg', 'budget']
values = [20, 40, 10, 60, 80, 40, 70]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c22db3')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['strip', 'box', 'brush', 'coast', 'dive', 'return']","[4, 4, 5, 7, 5, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['strip', 'box', 'brush', 'coast', 'dive', 'return']
values = [4, 4, 5, 7, 5, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#b3de31')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['chin', 'art', 'drama', 'butter', 'show']","[6, 4, 4, 9, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chin', 'art', 'drama', 'butter', 'show']
values = [6, 4, 4, 9, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#a1ed94')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['steel', 'jazz', 'honey', 'trust']","[4, 3, 4, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['steel', 'jazz', 'honey', 'trust']
values = [4, 3, 4, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f4e622')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['sake', 'load', 'wound', 'editor', 'arc']","[60, 40, 80, 80, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sake', 'load', 'wound', 'editor', 'arc']
values = [60, 40, 80, 80, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#778993')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['season', 'plant', 'anger', 'guard', 'power', 'radio']","[7, 9, 3, 2, 9, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['season', 'plant', 'anger', 'guard', 'power', 'radio']
values = [7, 9, 3, 2, 9, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#23ab87')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['brass', 'coat', 'army', 'wagon', 'essay', 'poem']","[3, 3, 6, 7, 6, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['brass', 'coat', 'army', 'wagon', 'essay', 'poem']
values = [3, 3, 6, 7, 6, 2]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7bccc4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['train', 'cloud', 'sky', 'good', 'sex', 'till']","[-6, 5, 4, 5, 8, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['train', 'cloud', 'sky', 'good', 'sex', 'till']
values = [-6, 5, 4, 5, 8, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#f66d31')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['store', 'dirt', 'adult', 'bond', 'one']","[60, 40, 40, 80, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['store', 'dirt', 'adult', 'bond', 'one']
values = [60, 40, 40, 80, 90]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e316b4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['powder', 'drop', 'hurry', 'brain', 'throat', 'hero']","[6, 6, 5, 5, 7, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['powder', 'drop', 'hurry', 'brain', 'throat', 'hero']
values = [6, 6, 5, 5, 7, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1fe278')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['base', 'gas']","[8, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['base', 'gas']
values = [8, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d8bafc')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['faint', 'sweat']","[70, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['faint', 'sweat']
values = [70, 30]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#5208dc')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['garden', 'rear', 'dollar', 'money', 'string']","[1, 3, 9, 5, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['garden', 'rear', 'dollar', 'money', 'string']
values = [1, 3, 9, 5, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#8b3aba')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['jacket', 'sense', 'winter', 'skill']","[80, 40, 80, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['jacket', 'sense', 'winter', 'skill']
values = [80, 40, 80, 70]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#1689bc')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Values', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['pain', 'ride', 'habit', 'space']","[3, 1, -8, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pain', 'ride', 'habit', 'space']
values = [3, 1, -8, 5]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#fe9fba')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stage', 'input', 'salary', 'drive']","[4, 6, 4, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stage', 'input', 'salary', 'drive']
values = [4, 6, 4, 6]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#9c68af')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart
plt.xlabel('Categories', fontname='Verdana')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Verdana')  # Label for the y-axis

# Display the chart
plt.show()
"
"['gown', 'heat', 'skirt']","[20, 80, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gown', 'heat', 'skirt']
values = [20, 80, 40]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e29cd9')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['wait', 'health', 'girl', 'pitch', 'radio', 'file']","[6, 7, 3, 3, 2, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wait', 'health', 'girl', 'pitch', 'radio', 'file']
values = [6, 7, 3, 3, 2, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e2ca4b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['drink', 'cure', 'trap']","[7, 8, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drink', 'cure', 'trap']
values = [7, 8, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7cc33b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['stairs', 'cheek', 'week', 'tool']","[1, 3, 1, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stairs', 'cheek', 'week', 'tool']
values = [1, 3, 1, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#827618')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Number of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['dawn', 'yield', 'oil', 'view', 'luxury', 'joy', 'midst']","[90, 80, 60, 50, 80, 60, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dawn', 'yield', 'oil', 'view', 'luxury', 'joy', 'midst']
values = [90, 80, 60, 50, 80, 60, 80]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7aaccf')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['spread', 'hair', 'train']","[9, 5, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['spread', 'hair', 'train']
values = [9, 5, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#c17f3d')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['loss', 'slave', 'ballet']","[10000000, 1000, 10000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['loss', 'slave', 'ballet']
values = [10000000, 1000, 10000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#57243a')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Values', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['man', 'motor', 'artery', 'agent', 'brief', 'harbor', 'dark', 'chance', 'golf']","[4, 1, 4, 6, 7, 0, 1, 7, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['man', 'motor', 'artery', 'agent', 'brief', 'harbor', 'dark', 'chance', 'golf']
values = [4, 1, 4, 6, 7, 0, 1, 7, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e1450b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['canvas', 'film', 'verse']","[7, 5, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['canvas', 'film', 'verse']
values = [7, 5, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#647750')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['front', 'south', 'set']","[3, 6, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['front', 'south', 'set']
values = [3, 6, 9]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#d022e4')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['widow', 'run', 'switch', 'pistol', 'snake', 'son']","[8, 9, 6, 8, 7, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['widow', 'run', 'switch', 'pistol', 'snake', 'son']
values = [8, 9, 6, 8, 7, 8]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#fd862b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['remark', 'fly', 'ratio', 'item']","[100000, 100, 10000000, 10000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['remark', 'fly', 'ratio', 'item']
values = [100000, 100, 10000000, 10000000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7161a5')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['origin', 'lady', 'car', 'bureau', 'use', 'length']","[1000000, 1000000, 1000000000, 1000000, 10000000, 10000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['origin', 'lady', 'car', 'bureau', 'use', 'length']
values = [1000000, 1000000, 1000000000, 1000000, 10000000, 10000]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#bc56d1')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart
plt.xlabel('Categories', fontname='Arial')  # Label for the x-axis
plt.ylabel('Values', fontname='Arial')  # Label for the y-axis

# Display the chart
plt.show()
"
"['burden', 'critic', 'murder', 'letter']","[1, 2, 3, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['burden', 'critic', 'murder', 'letter']
values = [1, 2, 3, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#584766')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['goal', 'appeal', 'brief']","[7, 5, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['goal', 'appeal', 'brief']
values = [7, 5, 7]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#01409b')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Units sold', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['voice', 'fruit', 'guilt', 'luck', 'rain']","[5, 7, 5, 3, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['voice', 'fruit', 'guilt', 'luck', 'rain']
values = [5, 7, 5, 3, 4]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#46634c')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['novel', 'shore']","[2, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['novel', 'shore']
values = [2, 1]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#e68bb2')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart
plt.xlabel('Categories', fontname='Times New Roman')  # Label for the x-axis
plt.ylabel('Accuracy', fontname='Times New Roman')  # Label for the y-axis

# Display the chart
plt.show()
"
"['cast', 'man', 'phone', 'trail', 'damage', 'queen', 'wife']","[50, 30, 60, 10, 80, 40, 20]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cast', 'man', 'phone', 'trail', 'damage', 'queen', 'wife']
values = [50, 30, 60, 10, 80, 40, 20]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#7a7540')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart
plt.xlabel('Categories', fontname='Comic Sans MS')  # Label for the x-axis
plt.ylabel('Percent of People', fontname='Comic Sans MS')  # Label for the y-axis

# Display the chart
plt.show()
"
"['scale', 'look', 'ten', 'thing', 'energy', 'soul', 'gain']","[2, 5, 4, 8, 4, 5, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['scale', 'look', 'ten', 'thing', 'energy', 'soul', 'gain']
values = [2, 5, 4, 8, 4, 5, 3]

# Creating the scatter plot
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.scatter(categories, values, color='#050549')  # Plot the scatter points with a random color

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart
plt.xlabel('Categories', fontname='Courier New')  # Label for the x-axis
plt.ylabel('Values', fontname='Courier New')  # Label for the y-axis

# Display the chart
plt.show()
"
"['voting', 'second', 'medium', 'unit']","[5, 7, 6, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['voting', 'second', 'medium', 'unit']
values = [5.0, 7.0, 6.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['store', 'dust', 'stone', 'atom', 'foam', 'edge', 'heat']","[20, 70, 40, 20, 60, 90, 20]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['store', 'dust', 'stone', 'atom', 'foam', 'edge', 'heat']
values = [20.0, 70.0, 40.0, 20.0, 60.0, 90.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['coal', 'shop']","[6, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['coal', 'shop']
values = [6.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['impact', 'owner', 'ratio', 'grace', 'garden', 'steel']","[1, 8, 9, 5, 6, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['impact', 'owner', 'ratio', 'grace', 'garden', 'steel']
values = [1.0, 8.0, 9.0, 5.0, 6.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['proof', 'bundle', 'flux', 'chair', 'cream', 'flavor', 'race', 'tray']","[6, 8, -1, 2, 6, -4, 5, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['proof', 'bundle', 'flux', 'chair', 'cream', 'flavor', 'race', 'tray']
values = [6.0, 8.0, 1.0, 2.0, 6.0, 4.0, 5.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['root', 'estate', 'law']","[5, 3, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['root', 'estate', 'law']
values = [5.0, 3.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['stress', 'rice', 'honor', 'trade', 'term', 'track']","[4, 9, 2, 9, 9, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stress', 'rice', 'honor', 'trade', 'term', 'track']
values = [4.0, 9.0, 2.0, 9.0, 9.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['stress', 'place', 'affair', 'cash', 'shop']","[100000000, 100, 100000000, 100000, 1000000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stress', 'place', 'affair', 'cash', 'shop']
values = [100000000.0, 100.0, 100000000.0, 100000.0, 1000000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['earth', 'depth', 'month', 'deal', 'event']","[40, 10, 50, 20, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['earth', 'depth', 'month', 'deal', 'event']
values = [40.0, 10.0, 50.0, 20.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['river', 'night', 'south']","[1, 3, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['river', 'night', 'south']
values = [1.0, 3.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['excuse', 'drift', 'escape', 'anode', 'hair', 'temple']","[8, 5, 9, 9, -6, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['excuse', 'drift', 'escape', 'anode', 'hair', 'temple']
values = [8.0, 5.0, 9.0, 9.0, 6.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['clock', 'nature', 'affair', 'stress']","[8, 5, 1, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['clock', 'nature', 'affair', 'stress']
values = [8.0, 5.0, 1.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['life', 'host', 'father', 'paper', 'sweat']","[6, 3, 3, 6, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['life', 'host', 'father', 'paper', 'sweat']
values = [6.0, 3.0, 3.0, 6.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['fall', 'future']","[3, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fall', 'future']
values = [3.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['hand', 'worth', 'clock']","[60, 30, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hand', 'worth', 'clock']
values = [60.0, 30.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['victim', 'corner', 'inside', 'corps']","[8, 3, 8, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['victim', 'corner', 'inside', 'corps']
values = [8.0, 3.0, 8.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['center', 'sugar', 'start', 'fan', 'pipe', 'boy', 'event']","[7, 8, 9, 2, 1, 3, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['center', 'sugar', 'start', 'fan', 'pipe', 'boy', 'event']
values = [7.0, 8.0, 9.0, 2.0, 1.0, 3.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['prize', 'worth', 'grant', 'radar', 'chorus', 'wash']","[2, 6, 0, 9, 7, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['prize', 'worth', 'grant', 'radar', 'chorus', 'wash']
values = [2.0, 6.0, 0.0, 9.0, 7.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['east', 'legs', 'movie', 'dealer', 'pound']","[9, 6, 9, 2, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['east', 'legs', 'movie', 'dealer', 'pound']
values = [9.0, 6.0, 9.0, 2.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['shop', 'ratio', 'cap', 'faith', 'rifle', 'drama', 'worry', 'tire']","[7, 2, 4, 5, 1, 5, 9, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shop', 'ratio', 'cap', 'faith', 'rifle', 'drama', 'worry', 'tire']
values = [7.0, 2.0, 4.0, 5.0, 1.0, 5.0, 9.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['worry', 'gold', 'saline']","[8, 7, -7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['worry', 'gold', 'saline']
values = [8.0, 7.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['steel', 'pause', 'chin', 'voice', 'output']","[60, 50, 20, 50, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['steel', 'pause', 'chin', 'voice', 'output']
values = [60.0, 50.0, 20.0, 50.0, 60.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['brick', 'tie', 'day', 'heart']","[10000, 100000000, 10000000, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['brick', 'tie', 'day', 'heart']
values = [10000.0, 100000000.0, 10000000.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['watch', 'random', 'salary']","[7, 5, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['watch', 'random', 'salary']
values = [7.0, 5.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['week', 'voting', 'guitar']","[100, 100, 1000000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['week', 'voting', 'guitar']
values = [100.0, 100.0, 1000000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['screen', 'salary', 'dining', 'past']","[8, 8, 2, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['screen', 'salary', 'dining', 'past']
values = [8.0, 8.0, 2.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['role', 'sum', 'entry', 'coffee', 'age', 'worth', 'foot']","[5, 1, 2, 3, 8, 2, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['role', 'sum', 'entry', 'coffee', 'age', 'worth', 'foot']
values = [5.0, 1.0, 2.0, 3.0, 8.0, 2.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['lead', 'duty', 'belt']","[100, 100000, 1000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lead', 'duty', 'belt']
values = [100.0, 100000.0, 1000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['week', 'critic', 'blow']","[20, 20, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['week', 'critic', 'blow']
values = [20.0, 20.0, 60.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['root', 'child', 'back', 'bill', 'male']","[80, 40, 80, 60, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['root', 'child', 'back', 'bill', 'male']
values = [80.0, 40.0, 80.0, 60.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['lot', 'route', 'date', 'aspect', 'ground', 'youth', 'roof', 'heard', 'study']","[100000, 10000000, 100000, 100, 100000000, 1000000000, 100000000, 10000000, 100000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lot', 'route', 'date', 'aspect', 'ground', 'youth', 'roof', 'heard', 'study']
values = [100000.0, 10000000.0, 100000.0, 100.0, 100000000.0, 1000000000.0, 100000000.0, 10000000.0, 100000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['beat', 'budget', 'party', 'rage', 'ocean', 'health']","[4, 3, 1, 7, 1, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['beat', 'budget', 'party', 'rage', 'ocean', 'health']
values = [4.0, 3.0, 1.0, 7.0, 1.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['ten', 'gun', 'share']","[40, 50, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ten', 'gun', 'share']
values = [40.0, 50.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['phone', 'tea', 'spread']","[8, 1, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['phone', 'tea', 'spread']
values = [8.0, 1.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['party', 'path', 'fist']","[5, 4, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['party', 'path', 'fist']
values = [5.0, 4.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['shot', 'farm', 'health', 'belief']","[7, 4, 5, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shot', 'farm', 'health', 'belief']
values = [7.0, 4.0, 5.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['trial', 'sorry', 'lay', 'hung', 'favor']","[10000, 1000000000, 1000, 100000000, 1000000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['trial', 'sorry', 'lay', 'hung', 'favor']
values = [10000.0, 1000000000.0, 1000.0, 100000000.0, 1000000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['honey', 'bent', 'rate', 'town']","[20, 30, 60, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['honey', 'bent', 'rate', 'town']
values = [20.0, 30.0, 60.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['gas', 'good', 'ride', 'luxury']","[7, 7, 4, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gas', 'good', 'ride', 'luxury']
values = [7.0, 7.0, 4.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['meal', 'cool']","[3, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['meal', 'cool']
values = [3.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['match', 'peace', 'jacket', 'editor', 'bird']","[4, 8, 3, 6, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['match', 'peace', 'jacket', 'editor', 'bird']
values = [4.0, 8.0, 3.0, 6.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bunk', 'sera', 'effect', 'get', 'cloud']","[4, 7, 7, 4, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bunk', 'sera', 'effect', 'get', 'cloud']
values = [4.0, 7.0, 7.0, 4.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['diet', 'shop', 'doubt', 'garden', 'debate', 'series', 'taste', 'film']","[5, 3, 5, 8, 7, 7, 5, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['diet', 'shop', 'doubt', 'garden', 'debate', 'series', 'taste', 'film']
values = [5.0, 3.0, 5.0, 8.0, 7.0, 7.0, 5.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['chin', 'horror', 'unity', 'bay', 'fan']","[6, 4, 4, 1, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chin', 'horror', 'unity', 'bay', 'fan']
values = [6.0, 4.0, 4.0, 1.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['marine', 'beauty', 'studio', 'fool', 'skirt', 'clouds']","[8, 7, 4, 2, 2, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['marine', 'beauty', 'studio', 'fool', 'skirt', 'clouds']
values = [8.0, 7.0, 4.0, 2.0, 2.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['salary', 'plug', 'excess']","[7, 6, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['salary', 'plug', 'excess']
values = [7.0, 6.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['beat', 'angle', 'court', 'milk', 'touch', 'cabin']","[3, 4, 9, 7, 7, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['beat', 'angle', 'court', 'milk', 'touch', 'cabin']
values = [3.0, 4.0, 9.0, 7.0, 7.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['salt', 'evil', 'yield', 'beach']","[9, 8, 4, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['salt', 'evil', 'yield', 'beach']
values = [9.0, 8.0, 4.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['colony', 'front', 'mouth', 'dancer', 'beach', 'branch', 'crop', 'screen']","[6, 3, 6, 3, 7, 3, 6, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['colony', 'front', 'mouth', 'dancer', 'beach', 'branch', 'crop', 'screen']
values = [6.0, 3.0, 6.0, 3.0, 7.0, 3.0, 6.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['anode', 'power', 'piece', 'engine', 'type']","[20, 10, 70, 20, 30]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['anode', 'power', 'piece', 'engine', 'type']
values = [20.0, 10.0, 70.0, 20.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['metal', 'camera']","[4, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['metal', 'camera']
values = [4.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['start', 'cow', 'help', 'camp', 'past', 'front']","[3, 7, 9, -5, 4, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['start', 'cow', 'help', 'camp', 'past', 'front']
values = [3.0, 7.0, 9.0, 5.0, 4.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['ring', 'press', 'yield', 'cloth', 'cellar', 'cup']","[20, 30, 30, 60, 40, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ring', 'press', 'yield', 'cloth', 'cellar', 'cup']
values = [20.0, 30.0, 30.0, 60.0, 40.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['tax', 'limit', 'film', 'king', 'wheel', 'ballet']","[6, 1, 3, 5, 1, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tax', 'limit', 'film', 'king', 'wheel', 'ballet']
values = [6.0, 1.0, 3.0, 5.0, 1.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sir', 'method']","[60, 30]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sir', 'method']
values = [60.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['way', 'mass', 'guard']","[8, 9, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['way', 'mass', 'guard']
values = [8.0, 9.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['show', 'dance', 'pause', 'plot', 'soap']","[7, 8, 9, 6, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['show', 'dance', 'pause', 'plot', 'soap']
values = [7.0, 8.0, 9.0, 6.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['light', 'art', 'saline']","[30, 10, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['light', 'art', 'saline']
values = [30.0, 10.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['moment', 'tube']","[100000, 10000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['moment', 'tube']
values = [100000.0, 10000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['affair', 'period']","[3, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['affair', 'period']
values = [3.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['heard', 'random']","[10, 30]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['heard', 'random']
values = [10.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['jury', 'sight', 'string', 'feed', 'sweat', 'strike', 'cell', 'harm', 'wheel']","[1000000, 100000000, 100000, 100000000, 100, 1000, 100, 100, 1000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['jury', 'sight', 'string', 'feed', 'sweat', 'strike', 'cell', 'harm', 'wheel']
values = [1000000.0, 100000000.0, 100000.0, 100000000.0, 100.0, 1000.0, 100.0, 100.0, 1000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['metal', 'song', 'row']","[5, 5, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['metal', 'song', 'row']
values = [5.0, 5.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['strike', 'sense', 'shadow']","[3, 2, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['strike', 'sense', 'shadow']
values = [3.0, 2.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['shift', 'wind', 'unity']","[1, 6, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shift', 'wind', 'unity']
values = [1.0, 6.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['night', 'chip']","[9, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['night', 'chip']
values = [9.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['burden', 'guilt', 'father', 'flood']","[40, 60, 80, 90]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['burden', 'guilt', 'father', 'flood']
values = [40.0, 60.0, 80.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['trend', 'bank', 'valley', 'race']","[5, 6, 1, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['trend', 'bank', 'valley', 'race']
values = [5.0, 6.0, 1.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['right', 'glass']","[20, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['right', 'glass']
values = [20.0, 60.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['world', 'dust']","[70, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['world', 'dust']
values = [70.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['policy', 'thirty', 'regime']","[3, 4, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['policy', 'thirty', 'regime']
values = [3.0, 4.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['uncle', 'wise']","[90, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['uncle', 'wise']
values = [90.0, 70.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['rule', 'watch', 'level']","[3, 6, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rule', 'watch', 'level']
values = [3.0, 6.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['mass', 'murder', 'height', 'trend', 'name']","[4, 4, 6, 1, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mass', 'murder', 'height', 'trend', 'name']
values = [4.0, 4.0, 6.0, 1.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['park', 'noise', 'wit', 'patrol', 'pencil', 'fund', 'bed']","[1, 9, 6, 5, 3, 7, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['park', 'noise', 'wit', 'patrol', 'pencil', 'fund', 'bed']
values = [1.0, 9.0, 6.0, 5.0, 3.0, 7.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['foam', 'stroke', 'weight']","[40, 70, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['foam', 'stroke', 'weight']
values = [40.0, 70.0, 60.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['angle', 'screen', 'choice']","[1, 3, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['angle', 'screen', 'choice']
values = [1.0, 3.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sleep', 'spite']","[6, -7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sleep', 'spite']
values = [6.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['task', 'wound', 'shame', 'speed', 'review', 'breath']","[40, 80, 20, 40, 80, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['task', 'wound', 'shame', 'speed', 'review', 'breath']
values = [40.0, 80.0, 20.0, 40.0, 80.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cash', 'scheme', 'phrase', 'lack', 'visit', 'pride']","[90, 50, 50, 20, 90, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cash', 'scheme', 'phrase', 'lack', 'visit', 'pride']
values = [90.0, 50.0, 50.0, 20.0, 90.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sport', 'heart', 'campus', 'center', 'mature']","[2, 6, 3, 5, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sport', 'heart', 'campus', 'center', 'mature']
values = [2.0, 6.0, 3.0, 5.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['hung', 'sake', 'cold', 'weapon']","[2, 8, 3, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hung', 'sake', 'cold', 'weapon']
values = [2.0, 8.0, 3.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['honey', 'brass']","[2, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['honey', 'brass']
values = [2.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['luck', 'terror', 'amount', 'bomb', 'sex']","[9, 3, 1, 8, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['luck', 'terror', 'amount', 'bomb', 'sex']
values = [9.0, 3.0, 1.0, 8.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['record', 'region', 'steel', 'ground', 'bridge', 'child', 'liquid']","[2, 3, 4, 1, 8, 2, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['record', 'region', 'steel', 'ground', 'bridge', 'child', 'liquid']
values = [2.0, 3.0, 4.0, 1.0, 8.0, 2.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['hour', 'crime']","[80, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hour', 'crime']
values = [80.0, 40.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['stage', 'beer']","[1000000000, 100]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stage', 'beer']
values = [1000000000.0, 100.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['growth', 'hell']","[7, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['growth', 'hell']
values = [7.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['letter', 'fund', 'taxi']","[1, 2, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['letter', 'fund', 'taxi']
values = [1.0, 2.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['herd', 'effort', 'issue', 'draft', 'public']","[5, 1, 6, 8, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['herd', 'effort', 'issue', 'draft', 'public']
values = [5.0, 1.0, 6.0, 8.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['blow', 'flood', 'shade']","[5, 5, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['blow', 'flood', 'shade']
values = [5.0, 5.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['hell', 'gas', 'office', 'detail', 'copy', 'belt']","[50, 60, 20, 70, 10, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hell', 'gas', 'office', 'detail', 'copy', 'belt']
values = [50.0, 60.0, 20.0, 70.0, 10.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['tire', 'flood', 'night']","[7, 3, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tire', 'flood', 'night']
values = [7.0, 3.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['doctor', 'gang', 'lead', 'class', 'writer']","[5, 3, 5, 3, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['doctor', 'gang', 'lead', 'class', 'writer']
values = [5.0, 3.0, 5.0, 3.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['front', 'sugar', 'set', 'theme', 'grade', 'sport', 'plot', 'wife', 'ratio']","[3, 1, 1, 2, 6, 4, 3, 3, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['front', 'sugar', 'set', 'theme', 'grade', 'sport', 'plot', 'wife', 'ratio']
values = [3.0, 1.0, 1.0, 2.0, 6.0, 4.0, 3.0, 3.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bride', 'stock', 'labor', 'patent']","[1, 6, 7, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bride', 'stock', 'labor', 'patent']
values = [1.0, 6.0, 7.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['moon', 'wood']","[8, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['moon', 'wood']
values = [8.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['ocean', 'plug', 'access']","[80, 90, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ocean', 'plug', 'access']
values = [80.0, 90.0, 60.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['board', 'one', 'diet', 'god']","[6, 9, 7, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['board', 'one', 'diet', 'god']
values = [6.0, 9.0, 7.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['stone', 'wall', 'wire', 'front']","[9, 1, 2, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stone', 'wall', 'wire', 'front']
values = [9.0, 1.0, 2.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['action', 'scheme', 'team']","[9, 8, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['action', 'scheme', 'team']
values = [9.0, 8.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['label', 'excess']","[4, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['label', 'excess']
values = [4.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cut', 'sauce', 'cotton', 'drunk', 'mark']","[6, 9, 1, 8, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cut', 'sauce', 'cotton', 'drunk', 'mark']
values = [6.0, 9.0, 1.0, 8.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['origin', 'skirt', 'melody', 'tax', 'wagon']","[10, 20, 20, 90, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['origin', 'skirt', 'melody', 'tax', 'wagon']
values = [10.0, 20.0, 20.0, 90.0, 60.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['strike', 'fear', 'chief', 'wise', 'move', 'lamp']","[8, 6, 3, 5, 5, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['strike', 'fear', 'chief', 'wise', 'move', 'lamp']
values = [8.0, 6.0, 3.0, 5.0, 5.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['dinner', 'melody', 'lap', 'wood']","[9, 7, 6, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dinner', 'melody', 'lap', 'wood']
values = [9.0, 7.0, 6.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['affair', 'effect', 'comedy', 'shadow', 'king']","[5, 2, 3, 3, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['affair', 'effect', 'comedy', 'shadow', 'king']
values = [5.0, 2.0, 3.0, 3.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['role', 'patrol']","[5, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['role', 'patrol']
values = [5.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cellar', 'page', 'amount', 'beauty', 'dozen']","[80, 40, 40, 40, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cellar', 'page', 'amount', 'beauty', 'dozen']
values = [80.0, 40.0, 40.0, 40.0, 40.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cover', 'shape', 'friend', 'stuff', 'threat', 'danger', 'rice', 'risk']","[2, 1, 5, 6, 9, 4, 5, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cover', 'shape', 'friend', 'stuff', 'threat', 'danger', 'rice', 'risk']
values = [2.0, 1.0, 5.0, 6.0, 9.0, 4.0, 5.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['pack', 'play']","[60, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pack', 'play']
values = [60.0, 70.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['buffer', 'output', 'joy']","[4, 6, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['buffer', 'output', 'joy']
values = [4.0, 6.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['stand', 'mass', 'basis', 'bride']","[60, 40, 20, 90]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stand', 'mass', 'basis', 'bride']
values = [60.0, 40.0, 20.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['need', 'savage', 'essay', 'coffee', 'actor']","[6, 9, 8, 4, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['need', 'savage', 'essay', 'coffee', 'actor']
values = [6.0, 9.0, 8.0, 4.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['debate', 'denial', 'jet', 'rain']","[40, 50, 40, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['debate', 'denial', 'jet', 'rain']
values = [40.0, 50.0, 40.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['core', 'ship']","[4, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['core', 'ship']
values = [4.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['voyage', 'circle', 'root', 'top']","[20, 40, 60, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['voyage', 'circle', 'root', 'top']
values = [20.0, 40.0, 60.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['making', 'help', 'auto', 'owner', 'speed', 'host']","[10, 20, 40, 80, 30, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['making', 'help', 'auto', 'owner', 'speed', 'host']
values = [10.0, 20.0, 40.0, 80.0, 30.0, 70.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['union', 'expert', 'excuse', 'fluid', 'crash']","[2, 4, 8, 6, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['union', 'expert', 'excuse', 'fluid', 'crash']
values = [2.0, 4.0, 8.0, 6.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['iodine', 'yield', 'nature', 'nose', 'tax']","[8, 2, 3, 9, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['iodine', 'yield', 'nature', 'nose', 'tax']
values = [8.0, 2.0, 3.0, 9.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['past', 'beef', 'core', 'folk', 'room', 'smell', 'series']","[10000, 100, 10, 10000, 10000, 100, 1000000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['past', 'beef', 'core', 'folk', 'room', 'smell', 'series']
values = [10000.0, 100.0, 10.0, 10000.0, 10000.0, 100.0, 1000000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['motor', 'roll', 'gay', 'drama', 'horse']","[1, 3, 8, 5, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['motor', 'roll', 'gay', 'drama', 'horse']
values = [1.0, 3.0, 8.0, 5.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['label', 'clock', 'storm', 'depth', 'policy']","[3, 4, 3, 9, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['label', 'clock', 'storm', 'depth', 'policy']
values = [3.0, 4.0, 3.0, 9.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['stairs', 'owner', 'evil', 'terror', 'sugar', 'critic', 'sera', 'means', 'baby']","[4, 9, 3, 4, 9, 7, 4, 6, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stairs', 'owner', 'evil', 'terror', 'sugar', 'critic', 'sera', 'means', 'baby']
values = [4.0, 9.0, 3.0, 4.0, 9.0, 7.0, 4.0, 6.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['savage', 'today', 'guest', 'humor', 'year', 'cast', 'west']","[100, 100000, 1000, 100000000, 10000, 100000000, 100000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['savage', 'today', 'guest', 'humor', 'year', 'cast', 'west']
values = [100.0, 100000.0, 1000.0, 100000000.0, 10000.0, 100000000.0, 100000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['speed', 'rise', 'court', 'leader', 'angle', 'bay', 'sport', 'sense']","[30, 30, 30, 50, 50, 30, 40, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['speed', 'rise', 'court', 'leader', 'angle', 'bay', 'sport', 'sense']
values = [30.0, 30.0, 30.0, 50.0, 50.0, 30.0, 40.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['plate', 'rage', 'vector', 'brick']","[4, 9, 9, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['plate', 'rage', 'vector', 'brick']
values = [4.0, 9.0, 9.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['harbor', 'youth', 'beer']","[6, 7, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['harbor', 'youth', 'beer']
values = [6.0, 7.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['status', 'sewage', 'bed', 'cut']","[1, 1, 9, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['status', 'sewage', 'bed', 'cut']
values = [1.0, 1.0, 9.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['dear', 'plant', 'patent', 'round', 'inside', 'agent']","[4, 9, 5, 5, 8, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dear', 'plant', 'patent', 'round', 'inside', 'agent']
values = [4.0, 9.0, 5.0, 5.0, 8.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['source', 'air', 'pair']","[100000000, 100000000, 1000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['source', 'air', 'pair']
values = [100000000.0, 100000000.0, 1000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['muscle', 'growth', 'letter', 'output', 'hair']","[30, 20, 70, 40, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['muscle', 'growth', 'letter', 'output', 'hair']
values = [30.0, 20.0, 70.0, 40.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['impact', 'bus', 'craft', 'issue', 'ocean', 'tape']","[40, 20, 60, 40, 60, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['impact', 'bus', 'craft', 'issue', 'ocean', 'tape']
values = [40.0, 20.0, 60.0, 40.0, 60.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['holder', 'copy', 'strain', 'harm', 'poetry', 'whisky']","[1000000, 100000, 1000, 1000000000, 10000000, 10000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['holder', 'copy', 'strain', 'harm', 'poetry', 'whisky']
values = [1000000.0, 100000.0, 1000.0, 1000000000.0, 10000000.0, 10000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['credit', 'thick', 'cancer']","[5, 4, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['credit', 'thick', 'cancer']
values = [5.0, 4.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['task', 'action', 'atom']","[1, 8, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['task', 'action', 'atom']
values = [1.0, 8.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['night', 'claim', 'sphere', 'melody', 'saline', 'game', 'winter', 'terror', 'ocean']","[3, 7, 8, 9, 3, 3, 1, 6, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['night', 'claim', 'sphere', 'melody', 'saline', 'game', 'winter', 'terror', 'ocean']
values = [3.0, 7.0, 8.0, 9.0, 3.0, 3.0, 1.0, 6.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['growth', 'dollar', 'stock']","[40, 60, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['growth', 'dollar', 'stock']
values = [40.0, 60.0, 60.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['fish', 'horror']","[1, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fish', 'horror']
values = [1.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['career', 'tent', 'youth', 'steel', 'news', 'friend']","[70, 80, 40, 50, 80, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['career', 'tent', 'youth', 'steel', 'news', 'friend']
values = [70.0, 80.0, 40.0, 50.0, 80.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['voyage', 'bath', 'fly', 'ball', 'smoke', 'sex', 'cotton', 'estate']","[20, 80, 10, 10, 30, 40, 40, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['voyage', 'bath', 'fly', 'ball', 'smoke', 'sex', 'cotton', 'estate']
values = [20.0, 80.0, 10.0, 10.0, 30.0, 40.0, 40.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['stake', 'sun']","[6, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stake', 'sun']
values = [6.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['foot', 'evil', 'temple']","[4, 6, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['foot', 'evil', 'temple']
values = [4.0, 6.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['nose', 'stairs']","[2, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['nose', 'stairs']
values = [2.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['song', 'proof', 'circle', 'lamp', 'muscle']","[2, 3, 8, 8, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['song', 'proof', 'circle', 'lamp', 'muscle']
values = [2.0, 3.0, 8.0, 8.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sound', 'voting', 'couple']","[8, 7, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sound', 'voting', 'couple']
values = [8.0, 7.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['step', 'total', 'behalf']","[8, 5, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['step', 'total', 'behalf']
values = [8.0, 5.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['grain', 'debate', 'profit', 'twenty', 'house', 'anyone']","[6, 6, 1, 6, 6, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['grain', 'debate', 'profit', 'twenty', 'house', 'anyone']
values = [6.0, 6.0, 1.0, 6.0, 6.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['verse', 'case', 'cancer', 'buffer']","[8, 3, 5, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['verse', 'case', 'cancer', 'buffer']
values = [8.0, 3.0, 5.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sauce', 'fluid', 'month']","[20, 50, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sauce', 'fluid', 'month']
values = [20.0, 50.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['code', 'cloth', 'art', 'regard']","[9, 4, 2, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['code', 'cloth', 'art', 'regard']
values = [9.0, 4.0, 2.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['editor', 'test', 'judge']","[9, 7, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['editor', 'test', 'judge']
values = [9.0, 7.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['corps', 'worry', 'input', 'search']","[4, 3, 8, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['corps', 'worry', 'input', 'search']
values = [4.0, 3.0, 8.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['coat', 'pure', 'butter', 'sugar', 'range', 'talent', 'cause']","[5, 3, -4, 2, -6, 5, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['coat', 'pure', 'butter', 'sugar', 'range', 'talent', 'cause']
values = [5.0, 3.0, 4.0, 2.0, 6.0, 5.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['show', 'critic', 'holder', 'dream', 'rule', 'person', 'travel']","[5, 9, 2, 8, 3, 2, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['show', 'critic', 'holder', 'dream', 'rule', 'person', 'travel']
values = [5.0, 9.0, 2.0, 8.0, 3.0, 2.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['fan', 'loan', 'brick', 'labor', 'cotton', 'credit', 'widow']","[7, 1, 2, 9, 5, 1, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fan', 'loan', 'brick', 'labor', 'cotton', 'credit', 'widow']
values = [7.0, 1.0, 2.0, 9.0, 5.0, 1.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['silver', 'slope', 'city', 'degree', 'claim', 'ladder', 'bag']","[6, 9, 1, 4, 2, 9, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['silver', 'slope', 'city', 'degree', 'claim', 'ladder', 'bag']
values = [6.0, 9.0, 1.0, 4.0, 2.0, 9.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['valley', 'cellar', 'owner', 'race', 'date', 'rhythm', 'scale', 'bay']","[7, 2, 9, 3, 8, 2, 8, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['valley', 'cellar', 'owner', 'race', 'date', 'rhythm', 'scale', 'bay']
values = [7.0, 2.0, 9.0, 3.0, 8.0, 2.0, 8.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['trip', 'cabin', 'door', 'dark', 'index', 'limit']","[3, 2, 1, 8, 3, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['trip', 'cabin', 'door', 'dark', 'index', 'limit']
values = [3.0, 2.0, 1.0, 8.0, 3.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['hand', 'craft', 'rise', 'patent', 'supply', 'wound', 'class', 'cream', 'bench']","[50, 40, 40, 20, 80, 60, 90, 60, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hand', 'craft', 'rise', 'patent', 'supply', 'wound', 'class', 'cream', 'bench']
values = [50.0, 40.0, 40.0, 20.0, 80.0, 60.0, 90.0, 60.0, 40.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['center', 'path', 'fiber']","[8, 6, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['center', 'path', 'fiber']
values = [8.0, 6.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['help', 'pay', 'supper']","[5, 4, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['help', 'pay', 'supper']
values = [5.0, 4.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['pack', 'news', 'bullet', 'clay', 'front', 'food']","[4, 6, 1, 6, 3, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pack', 'news', 'bullet', 'clay', 'front', 'food']
values = [4.0, 6.0, 1.0, 6.0, 3.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['supply', 'rail', 'home']","[10, 40, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['supply', 'rail', 'home']
values = [10.0, 40.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['birth', 'heard']","[80, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['birth', 'heard']
values = [80.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['roof', 'gold']","[5, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['roof', 'gold']
values = [5.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['world', 'fist', 'meal', 'cloud']","[3, 8, 3, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['world', 'fist', 'meal', 'cloud']
values = [3.0, 8.0, 3.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['laugh', 'well', 'ladder', 'motion']","[3, 9, 1, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['laugh', 'well', 'ladder', 'motion']
values = [3.0, 9.0, 1.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['metal', 'sphere', 'vote', 'affair', 'mercy', 'plenty', 'book']","[6, 9, 3, 9, 7, 3, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['metal', 'sphere', 'vote', 'affair', 'mercy', 'plenty', 'book']
values = [6.0, 9.0, 3.0, 9.0, 7.0, 3.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['closet', 'care', 'market']","[3, 6, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['closet', 'care', 'market']
values = [3.0, 6.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['lock', 'impact', 'agent', 'income', 'check', 'chance']","[1, 7, 7, 3, 3, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lock', 'impact', 'agent', 'income', 'check', 'chance']
values = [1.0, 7.0, 7.0, 3.0, 3.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bone', 'rice', 'wealth', 'flavor', 'shop']","[9, 8, 8, 7, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bone', 'rice', 'wealth', 'flavor', 'shop']
values = [9.0, 8.0, 8.0, 7.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['plain', 'wind', 'form', 'iodine']","[3, 4, 3, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['plain', 'wind', 'form', 'iodine']
values = [3.0, 4.0, 3.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['wonder', 'lobby']","[6, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wonder', 'lobby']
values = [6.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['drop', 'wire', 'tray', 'skin', 'poet']","[1, 5, 2, 2, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drop', 'wire', 'tray', 'skin', 'poet']
values = [1.0, 5.0, 2.0, 2.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['son', 'store', 'pond', 'bowl', 'vector']","[10, 60, 10, 50, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['son', 'store', 'pond', 'bowl', 'vector']
values = [10.0, 60.0, 10.0, 50.0, 60.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['fee', 'joy', 'record', 'touch', 'oil', 'buffer']","[3, 6, 8, 2, 6, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fee', 'joy', 'record', 'touch', 'oil', 'buffer']
values = [3.0, 6.0, 8.0, 2.0, 6.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['area', 'dozen', 'reform', 'symbol']","[7, 5, 5, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['area', 'dozen', 'reform', 'symbol']
values = [7.0, 5.0, 5.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['nation', 'memory', 'bill', 'bay', 'face', 'shade', 'base', 'ranch']","[4, 7, 8, 4, 1, 4, 7, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['nation', 'memory', 'bill', 'bay', 'face', 'shade', 'base', 'ranch']
values = [4.0, 7.0, 8.0, 4.0, 1.0, 4.0, 7.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['hole', 'start', 'flesh']","[3, 1, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hole', 'start', 'flesh']
values = [3.0, 1.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bottle', 'letter', 'escape', 'throat', 'realm', 'season', 'fear']","[9, 2, 1, 3, 8, 1, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bottle', 'letter', 'escape', 'throat', 'realm', 'season', 'fear']
values = [9.0, 2.0, 1.0, 3.0, 8.0, 1.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['school', 'roll', 'fog', 'trail', 'rest', 'beef']","[6, 2, 2, 7, 5, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['school', 'roll', 'fog', 'trail', 'rest', 'beef']
values = [6.0, 2.0, 2.0, 7.0, 5.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['band', 'error']","[4, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['band', 'error']
values = [4.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['hair', 'dust', 'heart', 'rock']","[9, 6, 7, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hair', 'dust', 'heart', 'rock']
values = [9.0, 6.0, 7.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['ear', 'duty']","[1, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ear', 'duty']
values = [1.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['fish', 'widow', 'agency']","[2, 8, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fish', 'widow', 'agency']
values = [2.0, 8.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['film', 'drop', 'engine', 'run']","[4, 1, 2, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['film', 'drop', 'engine', 'run']
values = [4.0, 1.0, 2.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bureau', 'beat', 'smoke']","[6, 4, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bureau', 'beat', 'smoke']
values = [6.0, 4.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['drop', 'movie', 'engine', 'block', 'pitch', 'issue']","[10, 60, 70, 30, 50, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drop', 'movie', 'engine', 'block', 'pitch', 'issue']
values = [10.0, 60.0, 70.0, 30.0, 50.0, 70.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['detail', 'rate', 'pipe', 'impact']","[8, 7, 8, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['detail', 'rate', 'pipe', 'impact']
values = [8.0, 7.0, 8.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['drink', 'cut', 'stone', 'tone', 'budget', 'matter', 'worth']","[9, 9, 4, 1, 6, 1, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drink', 'cut', 'stone', 'tone', 'budget', 'matter', 'worth']
values = [9.0, 9.0, 4.0, 1.0, 6.0, 1.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['baby', 'data', 'ice', 'tire', 'good', 'action']","[9, 3, 9, 8, 6, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['baby', 'data', 'ice', 'tire', 'good', 'action']
values = [9.0, 3.0, 9.0, 8.0, 6.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['leg', 'move', 'stem', 'stress', 'lot']","[4, 9, 6, 4, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['leg', 'move', 'stem', 'stress', 'lot']
values = [4.0, 9.0, 6.0, 4.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['flash', 'method', 'house']","[1000000, 10000000, 100000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['flash', 'method', 'house']
values = [1000000.0, 10000000.0, 100000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['kind', 'ship', 'closet']","[3, 2, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['kind', 'ship', 'closet']
values = [3.0, 2.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['law', 'jet']","[30, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['law', 'jet']
values = [30.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['thirty', 'corner', 'impact', 'fit', 'house', 'stress']","[5, 4, 8, 9, 2, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['thirty', 'corner', 'impact', 'fit', 'house', 'stress']
values = [5.0, 4.0, 8.0, 9.0, 2.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['limit', 'family', 'boy', 'soap', 'tape', 'series']","[20, 20, 90, 40, 60, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['limit', 'family', 'boy', 'soap', 'tape', 'series']
values = [20.0, 20.0, 90.0, 40.0, 60.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['rage', 'ladder']","[10000000, 10000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rage', 'ladder']
values = [10000000.0, 10000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['fuel', 'table', 'skill', 'pocket', 'gay', 'lock', 'barn']","[5, 8, 1, 8, 3, 1, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fuel', 'table', 'skill', 'pocket', 'gay', 'lock', 'barn']
values = [5.0, 8.0, 1.0, 8.0, 3.0, 1.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sewage', 'board', 'client', 'hen', 'degree', 'data', 'self', 'play', 'column']","[1, 2, 3, 5, 8, 8, 2, 9, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sewage', 'board', 'client', 'hen', 'degree', 'data', 'self', 'play', 'column']
values = [1.0, 2.0, 3.0, 5.0, 8.0, 8.0, 2.0, 9.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['stick', 'hunger', 'union', 'god', 'past', 'label', 'news']","[1, 7, 5, 4, 9, 1, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stick', 'hunger', 'union', 'god', 'past', 'label', 'news']
values = [1.0, 7.0, 5.0, 4.0, 9.0, 1.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['fall', 'weight', 'brass', 'class', 'signal', 'piece']","[90, 30, 30, 20, 30, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fall', 'weight', 'brass', 'class', 'signal', 'piece']
values = [90.0, 30.0, 30.0, 20.0, 30.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['ladder', 'bit', 'track', 'degree', 'lunch']","[20, 60, 40, 10, 40]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ladder', 'bit', 'track', 'degree', 'lunch']
values = [20.0, 60.0, 40.0, 10.0, 40.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bed', 'piece', 'rush', 'wise']","[1, 5, 3, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bed', 'piece', 'rush', 'wise']
values = [1.0, 5.0, 3.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['snake', 'poetry', 'key', 'age', 'ranch']","[2, 6, 2, 2, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['snake', 'poetry', 'key', 'age', 'ranch']
values = [2.0, 6.0, 2.0, 2.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['taste', 'play', 'team', 'force']","[4, 8, 4, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['taste', 'play', 'team', 'force']
values = [4.0, 8.0, 4.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['piece', 'harm', 'prayer']","[4, 7, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['piece', 'harm', 'prayer']
values = [4.0, 7.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['owner', 'board', 'mark', 'army', 'cost', 'bride', 'image', 'wait']","[6, 4, 3, 1, 4, 5, 5, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['owner', 'board', 'mark', 'army', 'cost', 'bride', 'image', 'wait']
values = [6.0, 4.0, 3.0, 1.0, 4.0, 5.0, 5.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['feel', 'guy', 'cry']","[90, 60, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['feel', 'guy', 'cry']
values = [90.0, 60.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['agency', 'stone', 'random', 'future', 'ranch', 'visit']","[7, 3, 7, 2, 8, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['agency', 'stone', 'random', 'future', 'ranch', 'visit']
values = [7.0, 3.0, 7.0, 2.0, 8.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['grain', 'plug']","[3, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['grain', 'plug']
values = [3.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['favor', 'sin', 'stream', 'tent']","[0, 80, 90, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['favor', 'sin', 'stream', 'tent']
values = [0.0, 80.0, 90.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['lamp', 'square', 'series', 'lobby', 'throat']","[30, 10, 20, 80, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lamp', 'square', 'series', 'lobby', 'throat']
values = [30.0, 10.0, 20.0, 80.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cabin', 'move', 'injury', 'blue', 'sewage', 'escape', 'memory', 'court', 'branch']","[3, 4, 3, 9, 4, 9, 4, 9, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cabin', 'move', 'injury', 'blue', 'sewage', 'escape', 'memory', 'court', 'branch']
values = [3.0, 4.0, 3.0, 9.0, 4.0, 9.0, 4.0, 9.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['beef', 'model', 'action', 'chest', 'self', 'area', 'desire', 'music']","[-3, -9, -5, -3, 5, 7, 3, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['beef', 'model', 'action', 'chest', 'self', 'area', 'desire', 'music']
values = [3.0, 9.0, 5.0, 3.0, 5.0, 7.0, 3.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['front', 'iron', 'row', 'farmer', 'truck', 'pocket', 'pistol', 'light']","[6, 2, 5, 6, 1, 5, 3, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['front', 'iron', 'row', 'farmer', 'truck', 'pocket', 'pistol', 'light']
values = [6.0, 2.0, 5.0, 6.0, 1.0, 5.0, 3.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cup', 'one', 'bus', 'steel', 'film', 'match', 'roll']","[1, 9, 1, 2, 2, 4, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cup', 'one', 'bus', 'steel', 'film', 'match', 'roll']
values = [1.0, 9.0, 1.0, 2.0, 2.0, 4.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['crash', 'ranch', 'nation', 'step', 'device', 'loan']","[2, 4, 7, 8, 4, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crash', 'ranch', 'nation', 'step', 'device', 'loan']
values = [2.0, 4.0, 7.0, 8.0, 4.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['crash', 'refund', 'block', 'pound', 'entry']","[20, 40, 60, 30, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crash', 'refund', 'block', 'pound', 'entry']
values = [20.0, 40.0, 60.0, 30.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bureau', 'path', 'woman', 'ocean', 'policy', 'post']","[70, 30, 10, 10, 20, 20]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bureau', 'path', 'woman', 'ocean', 'policy', 'post']
values = [70.0, 30.0, 10.0, 10.0, 20.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['ladder', 'trail', 'ticket', 'entry', 'use', 'plenty', 'fury']","[1, 2, 2, 3, 6, 6, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ladder', 'trail', 'ticket', 'entry', 'use', 'plenty', 'fury']
values = [1.0, 2.0, 2.0, 3.0, 6.0, 6.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['scheme', 'tent', 'habit', 'bulk', 'sort']","[6, 3, 8, 4, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['scheme', 'tent', 'habit', 'bulk', 'sort']
values = [6.0, 3.0, 8.0, 4.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['valley', 'museum', 'island', 'motion']","[3, 7, 3, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['valley', 'museum', 'island', 'motion']
values = [3.0, 7.0, 3.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['type', 'ballet']","[9, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['type', 'ballet']
values = [9.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['place', 'row', 'warmth']","[5, 2, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['place', 'row', 'warmth']
values = [5.0, 2.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['outfit', 'flood', 'injury', 'hold', 'cause', 'style']","[4, 4, 5, 9, 4, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['outfit', 'flood', 'injury', 'hold', 'cause', 'style']
values = [4.0, 4.0, 5.0, 9.0, 4.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['plant', 'comedy', 'wall', 'ease', 'pause']","[1000000, 100000000, 10000, 1000, 100]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['plant', 'comedy', 'wall', 'ease', 'pause']
values = [1000000.0, 100000000.0, 10000.0, 1000.0, 100.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['rank', 'excess', 'prison', 'rifle']","[9, 8, 8, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rank', 'excess', 'prison', 'rifle']
values = [9.0, 8.0, 8.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['joy', 'tie', 'behalf', 'safety', 'cause']","[8, 9, 3, 4, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['joy', 'tie', 'behalf', 'safety', 'cause']
values = [8.0, 9.0, 3.0, 4.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['course', 'chance', 'faint', 'pack']","[9, 0, 7, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['course', 'chance', 'faint', 'pack']
values = [9.0, 0.0, 7.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['lady', 'grade']","[7, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lady', 'grade']
values = [7.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['beauty', 'tissue', 'poem']","[3, 7, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['beauty', 'tissue', 'poem']
values = [3.0, 7.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['trail', 'fault', 'shop', 'rush', 'anyone', 'growth', 'total', 'comedy', 'lumber']","[40, 30, 70, 40, 10, 80, 90, 60, 20]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['trail', 'fault', 'shop', 'rush', 'anyone', 'growth', 'total', 'comedy', 'lumber']
values = [40.0, 30.0, 70.0, 40.0, 10.0, 80.0, 90.0, 60.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['unity', 'sin']","[8, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['unity', 'sin']
values = [8.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['light', 'vertex', 'kind', 'fire', 'call']","[3, 8, 7, 7, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['light', 'vertex', 'kind', 'fire', 'call']
values = [3.0, 8.0, 7.0, 7.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['foot', 'comedy', 'mode', 'fury', 'honor', 'pastor']","[100000, 100, 10, 1000, 100, 10000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['foot', 'comedy', 'mode', 'fury', 'honor', 'pastor']
values = [100000.0, 100.0, 10.0, 1000.0, 100.0, 10000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['road', 'child', 'lumber', 'trip', 'storm', 'nose']","[4, 3, 6, 8, 4, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['road', 'child', 'lumber', 'trip', 'storm', 'nose']
values = [4.0, 3.0, 6.0, 8.0, 4.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['poet', 'period', 'manner', 'milk', 'cheek', 'mirror']","[7, 5, 2, 4, 2, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['poet', 'period', 'manner', 'milk', 'cheek', 'mirror']
values = [7.0, 5.0, 2.0, 4.0, 2.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['block', 'pastor', 'ice', 'fuel', 'basis', 'bit']","[4, 7, 1, 4, 1, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['block', 'pastor', 'ice', 'fuel', 'basis', 'bit']
values = [4.0, 7.0, 1.0, 4.0, 1.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['fun', 'word', 'cat']","[8, 4, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fun', 'word', 'cat']
values = [8.0, 4.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['rear', 'today', 'point', 'twenty', 'pass']","[30, 30, 80, 30, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rear', 'today', 'point', 'twenty', 'pass']
values = [30.0, 30.0, 80.0, 30.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cloud', 'author', 'rail']","[1000000000, 100000, 100]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cloud', 'author', 'rail']
values = [1000000000.0, 100000.0, 100.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['hero', 'drunk', 'size', 'prayer', 'strike', 'tea', 'rise']","[10, 90, 40, 60, 30, 90, 40]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hero', 'drunk', 'size', 'prayer', 'strike', 'tea', 'rise']
values = [10.0, 90.0, 40.0, 60.0, 30.0, 90.0, 40.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['stand', 'key', 'artery', 'bench', 'plant', 'tail', 'player']","[4, 7, 6, 5, 5, 9, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stand', 'key', 'artery', 'bench', 'plant', 'tail', 'player']
values = [4.0, 7.0, 6.0, 5.0, 5.0, 9.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['gun', 'train', 'driver', 'kind']","[90, 90, 80, 30]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gun', 'train', 'driver', 'kind']
values = [90.0, 90.0, 80.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['range', 'target', 'care', 'voyage', 'survey', 'child', 'sweat']","[3, 2, 7, 2, 5, 4, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['range', 'target', 'care', 'voyage', 'survey', 'child', 'sweat']
values = [3.0, 2.0, 7.0, 2.0, 5.0, 4.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['air', 'time', 'good', 'patent', 'south', 'cent']","[90, 50, 70, 10, 60, 20]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['air', 'time', 'good', 'patent', 'south', 'cent']
values = [90.0, 50.0, 70.0, 10.0, 60.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['snake', 'butter', 'pond', 'radar', 'cheek']","[50, 50, 40, 90, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['snake', 'butter', 'pond', 'radar', 'cheek']
values = [50.0, 50.0, 40.0, 90.0, 70.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['growth', 'back', 'rice', 'root', 'time', 'model', 'scale']","[0, 6, 3, 4, 9, 7, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['growth', 'back', 'rice', 'root', 'time', 'model', 'scale']
values = [0.0, 6.0, 3.0, 4.0, 9.0, 7.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['charm', 'brick', 'ratio', 'press', 'stroke', 'cycle', 'spot', 'use', 'salary']","[9, 7, 9, 6, 3, 4, 4, 7, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['charm', 'brick', 'ratio', 'press', 'stroke', 'cycle', 'spot', 'use', 'salary']
values = [9.0, 7.0, 9.0, 6.0, 3.0, 4.0, 4.0, 7.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['route', 'eye', 'floor', 'track', 'knee', 'advice', 'outfit']","[6, 1, 2, 4, 3, 5, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['route', 'eye', 'floor', 'track', 'knee', 'advice', 'outfit']
values = [6.0, 1.0, 2.0, 4.0, 3.0, 5.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['crash', 'return', 'gay', 'cool']","[1, 3, 0, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crash', 'return', 'gay', 'cool']
values = [1.0, 3.0, 0.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['pace', 'style', 'sign', 'ticket', 'cellar']","[2, 7, 8, 1, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pace', 'style', 'sign', 'ticket', 'cellar']
values = [2.0, 7.0, 8.0, 1.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['term', 'plain', 'south', 'root', 'man', 'break', 'run', 'snow']","[1000000000, 100, 100000, 10000000, 1000000, 10000000, 10000, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['term', 'plain', 'south', 'root', 'man', 'break', 'run', 'snow']
values = [1000000000.0, 100.0, 100000.0, 10000000.0, 1000000.0, 10000000.0, 10000.0, 100000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['rush', 'radio', 'inside', 'flash', 'random', 'clerk', 'bent']","[1, 6, 9, 8, 6, 6, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rush', 'radio', 'inside', 'flash', 'random', 'clerk', 'bent']
values = [1.0, 6.0, 9.0, 8.0, 6.0, 6.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['hero', 'door', 'credit']","[9, 8, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hero', 'door', 'credit']
values = [9.0, 8.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['handle', 'manner', 'mother', 'bunk', 'beef', 'camp', 'vein', 'talk', 'fuel']","[6, 4, 4, 1, 6, 8, 7, 8, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['handle', 'manner', 'mother', 'bunk', 'beef', 'camp', 'vein', 'talk', 'fuel']
values = [6.0, 4.0, 4.0, 1.0, 6.0, 8.0, 7.0, 8.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['kid', 'beer', 'joke', 'demand']","[6, 9, 6, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['kid', 'beer', 'joke', 'demand']
values = [6.0, 9.0, 6.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['worry', 'smell', 'stream']","[4, 6, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['worry', 'smell', 'stream']
values = [4.0, 6.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['one', 'flesh', 'hung']","[9, 9, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['one', 'flesh', 'hung']
values = [9.0, 9.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['house', 'output', 'legend', 'cannot', 'kind', 'flight']","[20, 90, 20, 60, 10, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['house', 'output', 'legend', 'cannot', 'kind', 'flight']
values = [20.0, 90.0, 20.0, 60.0, 10.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['ear', 'feed']","[2, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ear', 'feed']
values = [2.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['dancer', 'index', 'powder', 'song']","[80, 90, 70, 40]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dancer', 'index', 'powder', 'song']
values = [80.0, 90.0, 70.0, 40.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cotton', 'car', 'tube', 'beef', 'threat']","[6, 8, 7, 2, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cotton', 'car', 'tube', 'beef', 'threat']
values = [6.0, 8.0, 7.0, 2.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cross', 'voting', 'index', 'scheme', 'value', 'uncle', 'gyro', 'credit']","[9, 5, 8, 4, 4, 8, 9, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cross', 'voting', 'index', 'scheme', 'value', 'uncle', 'gyro', 'credit']
values = [9.0, 5.0, 8.0, 4.0, 4.0, 8.0, 9.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['oil', 'cross', 'editor', 'term', 'house', 'rice', 'ballet', 'lawyer']","[6, 8, 6, 0, 6, 1, 5, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['oil', 'cross', 'editor', 'term', 'house', 'rice', 'ballet', 'lawyer']
values = [6.0, 8.0, 6.0, 0.0, 6.0, 1.0, 5.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['behalf', 'bone']","[50, 0]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['behalf', 'bone']
values = [50.0, 0.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['corps', 'humor', 'branch']","[4, 8, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['corps', 'humor', 'branch']
values = [4.0, 8.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['rear', 'tour']","[5, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rear', 'tour']
values = [5.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['hill', 'heat', 'shop', 'liquid']","[4, 4, 7, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hill', 'heat', 'shop', 'liquid']
values = [4.0, 4.0, 7.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['murder', 'flash']","[5, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['murder', 'flash']
values = [5.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['case', 'road', 'body']","[3, 1, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['case', 'road', 'body']
values = [3.0, 1.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sun', 'harm', 'dance', 'pencil', 'share']","[8, 3, 2, 6, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sun', 'harm', 'dance', 'pencil', 'share']
values = [8.0, 3.0, 2.0, 6.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['wind', 'poem', 'pipe', 'change']","[2, 6, 5, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wind', 'poem', 'pipe', 'change']
values = [2.0, 6.0, 5.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['whisky', 'week', 'load', 'hole', 'golf']","[1, 5, 8, 3, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['whisky', 'week', 'load', 'hole', 'golf']
values = [1.0, 5.0, 8.0, 3.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cent', 'genius']","[6, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cent', 'genius']
values = [6.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['excess', 'judge', 'fund', 'genius', 'cow']","[8, 1, 6, 6, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['excess', 'judge', 'fund', 'genius', 'cow']
values = [8.0, 1.0, 6.0, 6.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['meat', 'bridge', 'era', 'pride', 'verse']","[40, 10, 70, 30, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['meat', 'bridge', 'era', 'pride', 'verse']
values = [40.0, 10.0, 70.0, 30.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['count', 'stick', 'play', 'flow', 'cool', 'sake']","[7, 9, 6, 9, 9, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['count', 'stick', 'play', 'flow', 'cool', 'sake']
values = [7.0, 9.0, 6.0, 9.0, 9.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['stake', 'chair', 'neck', 'grace', 'mouth', 'pink', 'stock']","[30, 50, 40, 80, 60, 50, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stake', 'chair', 'neck', 'grace', 'mouth', 'pink', 'stock']
values = [30.0, 50.0, 40.0, 80.0, 60.0, 50.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['input', 'crisis']","[30, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['input', 'crisis']
values = [30.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['class', 'field', 'style', 'twelve', 'scope', 'bone', 'glance']","[3, 1, 7, 7, 4, 7, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['class', 'field', 'style', 'twelve', 'scope', 'bone', 'glance']
values = [3.0, 1.0, 7.0, 7.0, 4.0, 7.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['one', 'melody']","[8, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['one', 'melody']
values = [8.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['feel', 'knife']","[30, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['feel', 'knife']
values = [30.0, 70.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['floor', 'planet', 'fault']","[20, 50, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['floor', 'planet', 'fault']
values = [20.0, 50.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['draft', 'shot', 'plug', 'honey', 'park']","[50, 80, 10, 60, 30]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['draft', 'shot', 'plug', 'honey', 'park']
values = [50.0, 80.0, 10.0, 60.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['rail', 'dress']","[9, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rail', 'dress']
values = [9.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cross', 'issue', 'blue', 'cabin', 'decade']","[40, 40, 20, 70, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cross', 'issue', 'blue', 'cabin', 'decade']
values = [40.0, 40.0, 20.0, 70.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['arc', 'random', 'title', 'sleep', 'middle', 'pure']","[10, 20, 20, 90, 90, 30]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['arc', 'random', 'title', 'sleep', 'middle', 'pure']
values = [10.0, 20.0, 20.0, 90.0, 90.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['use', 'floor', 'lamp', 'duty', 'mail', 'regime', 'terror', 'train']","[2, 3, 6, 1, 6, 9, 8, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['use', 'floor', 'lamp', 'duty', 'mail', 'regime', 'terror', 'train']
values = [2.0, 3.0, 6.0, 1.0, 6.0, 9.0, 8.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bureau', 'coast', 'jazz', 'bit', 'drop']","[6, 6, 9, 2, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bureau', 'coast', 'jazz', 'bit', 'drop']
values = [6.0, 6.0, 9.0, 2.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['none', 'well', 'birth']","[9, 9, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['none', 'well', 'birth']
values = [9.0, 9.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['course', 'bottom', 'charge', 'sound']","[4, 2, 3, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['course', 'bottom', 'charge', 'sound']
values = [4.0, 2.0, 3.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['plug', 'total', 'power', 'break']","[5, 4, 4, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['plug', 'total', 'power', 'break']
values = [5.0, 4.0, 4.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['crew', 'news', 'dirt', 'shot']","[90, 40, 30, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crew', 'news', 'dirt', 'shot']
values = [90.0, 40.0, 30.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['rank', 'center', 'pistol', 'fuel', 'past', 'table', 'dozen', 'wave']","[8, 8, 5, 3, 6, 1, 6, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rank', 'center', 'pistol', 'fuel', 'past', 'table', 'dozen', 'wave']
values = [8.0, 8.0, 5.0, 3.0, 6.0, 1.0, 6.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bath', 'step', 'smell', 'jar', 'serum', 'belief']","[6, 8, 2, 8, 5, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bath', 'step', 'smell', 'jar', 'serum', 'belief']
values = [6.0, 8.0, 2.0, 8.0, 5.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['wood', 'killer', 'shame']","[9, 9, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wood', 'killer', 'shame']
values = [9.0, 9.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['refund', 'cheek', 'brain', 'fate', 'tree']","[30, 50, 80, 40, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['refund', 'cheek', 'brain', 'fate', 'tree']
values = [30.0, 50.0, 80.0, 40.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['life', 'legend', 'panel']","[3, 4, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['life', 'legend', 'panel']
values = [3.0, 4.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['reach', 'wind', 'wait', 'stress', 'inside']","[1000000, 100, 100000000, 100000, 100000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['reach', 'wind', 'wait', 'stress', 'inside']
values = [1000000.0, 100.0, 100000000.0, 100000.0, 100000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bottle', 'copy', 'class']","[6, 9, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bottle', 'copy', 'class']
values = [6.0, 9.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['county', 'run']","[5, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['county', 'run']
values = [5.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['wealth', 'beauty', 'cash', 'mail', 'time', 'sea', 'paint']","[5, 1, 9, 5, 1, 3, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wealth', 'beauty', 'cash', 'mail', 'time', 'sea', 'paint']
values = [5.0, 1.0, 9.0, 5.0, 1.0, 3.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['drama', 'leg', 'rice', 'dining']","[0, 0, 7, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drama', 'leg', 'rice', 'dining']
values = [0.0, 0.0, 7.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['mud', 'planet', 'editor']","[1, 5, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mud', 'planet', 'editor']
values = [1.0, 5.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['music', 'bill', 'march', 'finger', 'ocean', 'virtue', 'land', 'budget']","[10000000, 1000000000, 1000000, 10000000, 100000000, 1000000, 1000000000, 1000000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['music', 'bill', 'march', 'finger', 'ocean', 'virtue', 'land', 'budget']
values = [10000000.0, 1000000000.0, 1000000.0, 10000000.0, 100000000.0, 1000000.0, 1000000000.0, 1000000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['answer', 'lip', 'lie', 'death', 'breath', 'autumn']","[-2, 7, -3, 1, -6, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['answer', 'lip', 'lie', 'death', 'breath', 'autumn']
values = [2.0, 7.0, 3.0, 1.0, 6.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['rear', 'noon']","[7, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rear', 'noon']
values = [7.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['fire', 'mean', 'forest', 'tone']","[50, 50, 80, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fire', 'mean', 'forest', 'tone']
values = [50.0, 50.0, 80.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['island', 'escape', 'drift']","[1, 2, -5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['island', 'escape', 'drift']
values = [1.0, 2.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['parade', 'run', 'basket', 'studio', 'effect']","[-3, 8, 9, 8, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['parade', 'run', 'basket', 'studio', 'effect']
values = [3.0, 8.0, 9.0, 8.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['size', 'second', 'dinner']","[6, -1, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['size', 'second', 'dinner']
values = [6.0, 1.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['shop', 'cotton', 'mine']","[6, 9, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shop', 'cotton', 'mine']
values = [6.0, 9.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['wound', 'hall', 'policy', 'row', 'trap', 'walk']","[8, 2, 1, 7, 7, -2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wound', 'hall', 'policy', 'row', 'trap', 'walk']
values = [8.0, 2.0, 1.0, 7.0, 7.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['church', 'tie', 'feel']","[2, 6, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['church', 'tie', 'feel']
values = [2.0, 6.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['novel', 'animal', 'till', 'bit', 'review']","[5, 6, 5, 8, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['novel', 'animal', 'till', 'bit', 'review']
values = [5.0, 6.0, 5.0, 8.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['silver', 'hero', 'snow', 'pilot', 'show']","[60, 30, 50, 0, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['silver', 'hero', 'snow', 'pilot', 'show']
values = [60.0, 30.0, 50.0, 0.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['hero', 'floor', 'stress', 'plane']","[90, 40, 80, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hero', 'floor', 'stress', 'plane']
values = [90.0, 40.0, 80.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['fish', 'state', 'man', 'burden', 'injury']","[7, 2, 9, 4, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fish', 'state', 'man', 'burden', 'injury']
values = [7.0, 2.0, 9.0, 4.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['curve', 'north', 'spite']","[6, 2, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['curve', 'north', 'spite']
values = [6.0, 2.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['arm', 'valley']","[80, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['arm', 'valley']
values = [80.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bottle', 'vision', 'vertex', 'data', 'lot', 'master']","[70, 30, 30, 0, 90, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bottle', 'vision', 'vertex', 'data', 'lot', 'master']
values = [70.0, 30.0, 30.0, 0.0, 90.0, 70.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cash', 'dancer', 'nature', 'step']","[8, 3, 8, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cash', 'dancer', 'nature', 'step']
values = [8.0, 3.0, 8.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['gun', 'play', 'cast', 'hole']","[1, 4, 2, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gun', 'play', 'cast', 'hole']
values = [1.0, 4.0, 2.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['tax', 'plot', 'money', 'cancer', 'basis', 'sugar', 'horse']","[2, 8, 9, 4, 1, 4, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tax', 'plot', 'money', 'cancer', 'basis', 'sugar', 'horse']
values = [2.0, 8.0, 9.0, 4.0, 1.0, 4.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['mouth', 'play', 'cold', 'liquor', 'phrase', 'bridge', 'wife']","[60, 50, 20, 80, 20, 80, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mouth', 'play', 'cold', 'liquor', 'phrase', 'bridge', 'wife']
values = [60.0, 50.0, 20.0, 80.0, 20.0, 80.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['window', 'hand', 'chin', 'deal', 'touch', 'scale']","[20, 80, 80, 40, 30, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['window', 'hand', 'chin', 'deal', 'touch', 'scale']
values = [20.0, 80.0, 80.0, 40.0, 30.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['front', 'moon', 'canvas', 'label', 'son', 'motel']","[4, 3, 9, 7, 5, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['front', 'moon', 'canvas', 'label', 'son', 'motel']
values = [4.0, 3.0, 9.0, 7.0, 5.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['vertex', 'foot']","[10, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vertex', 'foot']
values = [10.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['jazz', 'loan', 'method', 'effort']","[4, 6, 8, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['jazz', 'loan', 'method', 'effort']
values = [4.0, 6.0, 8.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['search', 'plain', 'bus', 'pool', 'sweat', 'gate']","[7, 3, 1, 7, 2, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['search', 'plain', 'bus', 'pool', 'sweat', 'gate']
values = [7.0, 3.0, 1.0, 7.0, 2.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['music', 'sera', 'threat', 'victim']","[9, 6, 2, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['music', 'sera', 'threat', 'victim']
values = [9.0, 6.0, 2.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['salt', 'worry', 'snow', 'crowd', 'sin', 'lumber']","[6, 7, 5, 7, 8, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['salt', 'worry', 'snow', 'crowd', 'sin', 'lumber']
values = [6.0, 7.0, 5.0, 7.0, 8.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['basket', 'reader', 'work', 'art', 'vice', 'shore']","[9, 3, -8, 6, 3, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['basket', 'reader', 'work', 'art', 'vice', 'shore']
values = [9.0, 3.0, 8.0, 6.0, 3.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['phone', 'outfit', 'strip', 'care', 'pistol', 'habit', 'meal']","[80, 70, 10, 30, 70, 30, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['phone', 'outfit', 'strip', 'care', 'pistol', 'habit', 'meal']
values = [80.0, 70.0, 10.0, 30.0, 70.0, 30.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['valley', 'noon']","[1000000000, 100]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['valley', 'noon']
values = [1000000000.0, 100.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['tool', 'middle', 'image', 'drift', 'person']","[70, 90, 70, 10, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tool', 'middle', 'image', 'drift', 'person']
values = [70.0, 90.0, 70.0, 10.0, 70.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['target', 'beach', 'blind']","[5, 2, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['target', 'beach', 'blind']
values = [5.0, 2.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['throat', 'sorry']","[5, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['throat', 'sorry']
values = [5.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['code', 'mess', 'plug', 'sorry', 'victim', 'mass', 'career', 'cereal', 'church']","[8, 6, 4, 9, 1, 2, 7, 7, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['code', 'mess', 'plug', 'sorry', 'victim', 'mass', 'career', 'cereal', 'church']
values = [8.0, 6.0, 4.0, 9.0, 1.0, 2.0, 7.0, 7.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['slave', 'proof', 'favor', 'road']","[1000000000, 1000000000, 100000000, 10000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['slave', 'proof', 'favor', 'road']
values = [1000000000.0, 1000000000.0, 100000000.0, 10000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['forest', 'pipe', 'cat']","[10, 90, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['forest', 'pipe', 'cat']
values = [10.0, 90.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['volume', 'bowl', 'tool', 'half', 'cycle', 'habit']","[10, 40, 40, 30, 10, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['volume', 'bowl', 'tool', 'half', 'cycle', 'habit']
values = [10.0, 40.0, 40.0, 30.0, 10.0, 60.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['author', 'use', 'index']","[3, 4, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['author', 'use', 'index']
values = [3.0, 4.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['coat', 'dozen', 'mother', 'peace']","[4, 6, 4, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['coat', 'dozen', 'mother', 'peace']
values = [4.0, 6.0, 4.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['prayer', 'north', 'herd', 'wall', 'screen']","[8, 8, 9, 7, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['prayer', 'north', 'herd', 'wall', 'screen']
values = [8.0, 8.0, 9.0, 7.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sitter', 'mode', 'random', 'count', 'beard', 'atom']","[8, 4, 1, 1, 9, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sitter', 'mode', 'random', 'count', 'beard', 'atom']
values = [8.0, 4.0, 1.0, 1.0, 9.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['brush', 'power']","[8, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['brush', 'power']
values = [8.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['steel', 'hunger', 'judge', 'text', 'clock']","[4, 4, 6, 7, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['steel', 'hunger', 'judge', 'text', 'clock']
values = [4.0, 4.0, 6.0, 7.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['ward', 'baby', 'half', 'flavor', 'level', 'honor', 'edge']","[9, 7, 4, 5, 3, 9, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ward', 'baby', 'half', 'flavor', 'level', 'honor', 'edge']
values = [9.0, 7.0, 4.0, 5.0, 3.0, 9.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bus', 'truth', 'kid', 'sugar', 'finger']","[5, 2, 5, 5, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bus', 'truth', 'kid', 'sugar', 'finger']
values = [5.0, 2.0, 5.0, 5.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['studio', 'artery', 'tone', 'oxygen', 'row']","[9, 2, 3, 5, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['studio', 'artery', 'tone', 'oxygen', 'row']
values = [9.0, 2.0, 3.0, 5.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['crowd', 'wound', 'leg', 'public', 'gay', 'lawyer']","[1, 5, 1, 6, 7, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crowd', 'wound', 'leg', 'public', 'gay', 'lawyer']
values = [1.0, 5.0, 1.0, 6.0, 7.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['crop', 'whisky']","[70, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crop', 'whisky']
values = [70.0, 60.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['track', 'shot', 'warmth', 'leader']","[1000, 1000000000, 1000, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['track', 'shot', 'warmth', 'leader']
values = [1000.0, 1000000000.0, 1000.0, 100000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['verse', 'ideal', 'sun', 'jacket', 'crisis', 'stem', 'angle', 'wind', 'switch']","[2, 9, 9, 6, 7, 5, 2, 4, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['verse', 'ideal', 'sun', 'jacket', 'crisis', 'stem', 'angle', 'wind', 'switch']
values = [2.0, 9.0, 9.0, 6.0, 7.0, 5.0, 2.0, 4.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['spring', 'notice', 'play', 'thick', 'key', 'row', 'night']","[1, 2, 5, 1, 7, 4, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['spring', 'notice', 'play', 'thick', 'key', 'row', 'night']
values = [1.0, 2.0, 5.0, 1.0, 7.0, 4.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sort', 'none']","[60, 30]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sort', 'none']
values = [60.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['letter', 'prison', 'cure', 'rest', 'drug', 'corn', 'serum']","[50, 90, 40, 40, 70, 70, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['letter', 'prison', 'cure', 'rest', 'drug', 'corn', 'serum']
values = [50.0, 90.0, 40.0, 40.0, 70.0, 70.0, 40.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['shot', 'root', 'disk', 'flesh', 'supply', 'unit', 'parade', 'pool', 'snake']","[90, 10, 40, 10, 40, 10, 30, 70, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shot', 'root', 'disk', 'flesh', 'supply', 'unit', 'parade', 'pool', 'snake']
values = [90.0, 10.0, 40.0, 10.0, 40.0, 10.0, 30.0, 70.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['lobby', 'joy', 'index', 'iodine']","[1, 5, 6, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lobby', 'joy', 'index', 'iodine']
values = [1.0, 5.0, 6.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['motor', 'seed', 'gift', 'fish', 'chip', 'county']","[1, 1, 3, 6, 6, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['motor', 'seed', 'gift', 'fish', 'chip', 'county']
values = [1.0, 1.0, 3.0, 6.0, 6.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['mind', 'fist', 'grace', 'vice', 'motion']","[8, 1, 5, 8, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mind', 'fist', 'grace', 'vice', 'motion']
values = [8.0, 1.0, 5.0, 8.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['touch', 'grip', 'pipe', 'breath', 'trust', 'master', 'pilot', 'finger']","[1, 3, 2, 1, 8, 1, 4, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['touch', 'grip', 'pipe', 'breath', 'trust', 'master', 'pilot', 'finger']
values = [1.0, 3.0, 2.0, 1.0, 8.0, 1.0, 4.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['test', 'client']","[30, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['test', 'client']
values = [30.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['union', 'card', 'stream']","[5, 6, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['union', 'card', 'stream']
values = [5.0, 6.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['danger', 'motel', 'dawn', 'ring', 'risk', 'bone', 'couple', 'detail']","[1, 3, -5, 8, -4, 9, -7, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['danger', 'motel', 'dawn', 'ring', 'risk', 'bone', 'couple', 'detail']
values = [1.0, 3.0, 5.0, 8.0, 4.0, 9.0, 7.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['arc', 'drive', 'wit', 'value', 'report', 'while', 'wonder', 'poem']","[60, 20, 20, 30, 70, 60, 80, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['arc', 'drive', 'wit', 'value', 'report', 'while', 'wonder', 'poem']
values = [60.0, 20.0, 20.0, 30.0, 70.0, 60.0, 80.0, 70.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['root', 'cream', 'rhythm', 'index', 'night']","[100, 100000, 10, 100000, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['root', 'cream', 'rhythm', 'index', 'night']
values = [100.0, 100000.0, 10.0, 100000.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['god', 'handle', 'guard', 'model', 'thing']","[80, 20, 50, 60, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['god', 'handle', 'guard', 'model', 'thing']
values = [80.0, 20.0, 50.0, 60.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['graph', 'nation', 'sewage', 'murder', 'glance', 'leg', 'entry', 'prison', 'denial']","[7, 7, 2, 3, 1, 3, 5, 2, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['graph', 'nation', 'sewage', 'murder', 'glance', 'leg', 'entry', 'prison', 'denial']
values = [7.0, 7.0, 2.0, 3.0, 1.0, 3.0, 5.0, 2.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['mode', 'grant', 'camp']","[6, 9, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mode', 'grant', 'camp']
values = [6.0, 9.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['column', 'crowd', 'making', 'law', 'month']","[8, 9, 7, 7, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['column', 'crowd', 'making', 'law', 'month']
values = [8.0, 9.0, 7.0, 7.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['roof', 'origin', 'input', 'oxygen', 'leg', 'decade', 'fence', 'piano']","[6, 9, 3, 7, 9, 2, 7, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['roof', 'origin', 'input', 'oxygen', 'leg', 'decade', 'fence', 'piano']
values = [6.0, 9.0, 3.0, 7.0, 9.0, 2.0, 7.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bone', 'depth', 'fire', 'dog', 'bulk', 'pay', 'line', 'ship']","[40, 80, 10, 30, 50, 20, 70, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bone', 'depth', 'fire', 'dog', 'bulk', 'pay', 'line', 'ship']
values = [40.0, 80.0, 10.0, 30.0, 50.0, 20.0, 70.0, 70.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['fear', 'state', 'total']","[5, 4, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fear', 'state', 'total']
values = [5.0, 4.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['handle', 'well', 'rhythm', 'glance', 'cannot', 'savage', 'doubt', 'value']","[2, 2, 7, 2, 8, 4, 3, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['handle', 'well', 'rhythm', 'glance', 'cannot', 'savage', 'doubt', 'value']
values = [2.0, 2.0, 7.0, 2.0, 8.0, 4.0, 3.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['terror', 'back', 'relief']","[5, 3, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['terror', 'back', 'relief']
values = [5.0, 3.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['moon', 'age', 'cry', 'rhythm', 'aim', 'duty', 'branch']","[8, 3, 6, 1, 4, 2, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['moon', 'age', 'cry', 'rhythm', 'aim', 'duty', 'branch']
values = [8.0, 3.0, 6.0, 1.0, 4.0, 2.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['feel', 'battle', 'clock', 'cause', 'foot', 'axis']","[2, 9, 3, 4, 4, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['feel', 'battle', 'clock', 'cause', 'foot', 'axis']
values = [2.0, 9.0, 3.0, 4.0, 4.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['habit', 'burden', 'stroke', 'axis', 'record']","[10, 70, 80, 60, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['habit', 'burden', 'stroke', 'axis', 'record']
values = [10.0, 70.0, 80.0, 60.0, 70.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['left', 'member', 'hand', 'review', 'kid', 'year', 'fellow']","[-1, 9, -8, 4, 7, 1, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['left', 'member', 'hand', 'review', 'kid', 'year', 'fellow']
values = [1.0, 9.0, 8.0, 4.0, 7.0, 1.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['advice', 'outfit', 'gate', 'square', 'heard']","[1, 6, 7, 9, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['advice', 'outfit', 'gate', 'square', 'heard']
values = [1.0, 6.0, 7.0, 9.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['answer', 'cream', 'theory', 'terror', 'expert', 'tie', 'today']","[7, 8, -7, 6, 1, -9, -6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['answer', 'cream', 'theory', 'terror', 'expert', 'tie', 'today']
values = [7.0, 8.0, 7.0, 6.0, 1.0, 9.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['text', 'path', 'sum', 'player', 'shore', 'talent', 'grave']","[50, 70, 70, 40, 90, 90, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['text', 'path', 'sum', 'player', 'shore', 'talent', 'grave']
values = [50.0, 70.0, 70.0, 40.0, 90.0, 90.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['item', 'form', 'good', 'demand', 'word', 'pool']","[1, 3, 3, 8, 9, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['item', 'form', 'good', 'demand', 'word', 'pool']
values = [1.0, 3.0, 3.0, 8.0, 9.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['effect', 'hall']","[10000000, 1000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['effect', 'hall']
values = [10000000.0, 1000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sake', 'myth', 'law', 'wash', 'stake', 'train', 'cellar', 'flight']","[9, 4, 1, 4, 8, 4, 8, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sake', 'myth', 'law', 'wash', 'stake', 'train', 'cellar', 'flight']
values = [9.0, 4.0, 1.0, 4.0, 8.0, 4.0, 8.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['point', 'widow']","[5, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['point', 'widow']
values = [5.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['grass', 'mean', 'queen', 'back', 'making', 'hold', 'essay']","[8, 1, 2, 3, 5, 1, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['grass', 'mean', 'queen', 'back', 'making', 'hold', 'essay']
values = [8.0, 1.0, 2.0, 3.0, 5.0, 1.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['piano', 'cream', 'comedy', 'value']","[30, 10, 50, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['piano', 'cream', 'comedy', 'value']
values = [30.0, 10.0, 50.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['tent', 'roll']","[4, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tent', 'roll']
values = [4.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sauce', 'inch', 'artist', 'idea', 'crowd', 'voice', 'style', 'drift']","[7, 8, 4, 2, 7, 8, 6, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sauce', 'inch', 'artist', 'idea', 'crowd', 'voice', 'style', 'drift']
values = [7.0, 8.0, 4.0, 2.0, 7.0, 8.0, 6.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bone', 'left', 'widow']","[50, 90, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bone', 'left', 'widow']
values = [50.0, 90.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['dozen', 'house', 'sorry', 'stake']","[3, 4, 4, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dozen', 'house', 'sorry', 'stake']
values = [3.0, 4.0, 4.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['travel', 'cover', 'heard', 'horror', 'hero']","[9, 7, 4, 1, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['travel', 'cover', 'heard', 'horror', 'hero']
values = [9.0, 7.0, 4.0, 1.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['town', 'carbon', 'watch']","[5, 2, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['town', 'carbon', 'watch']
values = [5.0, 2.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cream', 'tie', 'trust']","[60, 10, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cream', 'tie', 'trust']
values = [60.0, 10.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['rear', 'good', 'edge']","[2, 7, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rear', 'good', 'edge']
values = [2.0, 7.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['talk', 'sky', 'blonde']","[2, 9, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['talk', 'sky', 'blonde']
values = [2.0, 9.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['party', 'run', 'merit', 'barrel']","[1, 7, 9, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['party', 'run', 'merit', 'barrel']
values = [1.0, 7.0, 9.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['issue', 'book', 'era']","[90, 20, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['issue', 'book', 'era']
values = [90.0, 20.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bit', 'slope', 'gay', 'cold', 'skill']","[4, 7, 9, 3, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bit', 'slope', 'gay', 'cold', 'skill']
values = [4.0, 7.0, 9.0, 3.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bond', 'master']","[8, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bond', 'master']
values = [8.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['wait', 'bomb', 'spring']","[1, 2, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wait', 'bomb', 'spring']
values = [1.0, 2.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['jaw', 'feel', 'motion', 'style']","[0, 8, 2, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['jaw', 'feel', 'motion', 'style']
values = [0.0, 8.0, 2.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['faint', 'sweat']","[70, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['faint', 'sweat']
values = [70.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['poet', 'issue', 'result', 'file', 'garage', 'knife', 'input']","[3, 4, 9, 1, 1, 9, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['poet', 'issue', 'result', 'file', 'garage', 'knife', 'input']
values = [3.0, 4.0, 9.0, 1.0, 1.0, 9.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sound', 'story', 'law', 'notice', 'master', 'cent', 'garden', 'lack', 'unit']","[3, 5, 3, 3, 5, 3, 9, 8, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sound', 'story', 'law', 'notice', 'master', 'cent', 'garden', 'lack', 'unit']
values = [3.0, 5.0, 3.0, 3.0, 5.0, 3.0, 9.0, 8.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['guilt', 'course', 'object', 'volume', 'league', 'sheet', 'head']","[90, 40, 60, 40, 40, 70, 40]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['guilt', 'course', 'object', 'volume', 'league', 'sheet', 'head']
values = [90.0, 40.0, 60.0, 40.0, 40.0, 70.0, 40.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['demand', 'charm', 'impact', 'dozen']","[2, 8, 4, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['demand', 'charm', 'impact', 'dozen']
values = [2.0, 8.0, 4.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['plane', 'pay', 'prison', 'closet', 'store']","[8, 4, 9, 6, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['plane', 'pay', 'prison', 'closet', 'store']
values = [8.0, 4.0, 9.0, 6.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['note', 'blood', 'fruit', 'pistol', 'cross']","[3, 7, 8, 2, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['note', 'blood', 'fruit', 'pistol', 'cross']
values = [3.0, 7.0, 8.0, 2.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['data', 'check', 'show', 'fuel', 'regime', 'hope']","[5, 4, 3, 4, 9, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['data', 'check', 'show', 'fuel', 'regime', 'hope']
values = [5.0, 4.0, 3.0, 4.0, 9.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['rock', 'thing']","[8, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rock', 'thing']
values = [8.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['whole', 'signal', 'load']","[7, 6, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['whole', 'signal', 'load']
values = [7.0, 6.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['serum', 'cost']","[3, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['serum', 'cost']
values = [3.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['medium', 'tip', 'merger', 'hen', 'income']","[100000, 10000, 1000000000, 100000, 10000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['medium', 'tip', 'merger', 'hen', 'income']
values = [100000.0, 10000.0, 1000000000.0, 100000.0, 10000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bullet', 'means', 'cellar', 'bit', 'myth']","[5, 7, 6, 4, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bullet', 'means', 'cellar', 'bit', 'myth']
values = [5.0, 7.0, 6.0, 4.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['wealth', 'trend']","[6, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wealth', 'trend']
values = [6.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['poetry', 'kind', 'ocean']","[2, 2, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['poetry', 'kind', 'ocean']
values = [2.0, 2.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['island', 'medium', 'ear', 'eye', 'device', 'birth', 'marine']","[80, 80, 70, 30, 80, 30, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['island', 'medium', 'ear', 'eye', 'device', 'birth', 'marine']
values = [80.0, 80.0, 70.0, 30.0, 80.0, 30.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['train', 'stem', 'melody', 'car']","[3, 2, 5, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['train', 'stem', 'melody', 'car']
values = [3.0, 2.0, 5.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['dollar', 'trend', 'review', 'valley', 'bond', 'break', 'rise', 'habit']","[6, 2, 6, 4, 6, 4, 5, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dollar', 'trend', 'review', 'valley', 'bond', 'break', 'rise', 'habit']
values = [6.0, 2.0, 6.0, 4.0, 6.0, 4.0, 5.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['motel', 'remark', 'trail', 'peace', 'camera', 'pink', 'rank', 'cap']","[1, 1, 6, 2, 8, 5, 7, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['motel', 'remark', 'trail', 'peace', 'camera', 'pink', 'rank', 'cap']
values = [1.0, 1.0, 6.0, 2.0, 8.0, 5.0, 7.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['goal', 'access', 'opera', 'slave', 'fluid', 'seed', 'bond', 'chest']","[9, 9, 7, 3, 4, 9, 1, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['goal', 'access', 'opera', 'slave', 'fluid', 'seed', 'bond', 'chest']
values = [9.0, 9.0, 7.0, 3.0, 4.0, 9.0, 1.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['degree', 'unit', 'sitter', 'battle']","[5, 4, 6, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['degree', 'unit', 'sitter', 'battle']
values = [5.0, 4.0, 6.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['spread', 'sleep', 'melody', 'shade', 'copy', 'trail', 'glory']","[3, 5, 8, 6, 8, 6, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['spread', 'sleep', 'melody', 'shade', 'copy', 'trail', 'glory']
values = [3.0, 5.0, 8.0, 6.0, 8.0, 6.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['skin', 'thirty', 'basis', 'nature', 'behalf', 'excuse', 'genius', 'folk']","[3, 2, 1, 4, 3, 8, 6, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['skin', 'thirty', 'basis', 'nature', 'behalf', 'excuse', 'genius', 'folk']
values = [3.0, 2.0, 1.0, 4.0, 3.0, 8.0, 6.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['gas', 'reach', 'golf', 'sewage', 'aim']","[4, 3, 6, 7, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gas', 'reach', 'golf', 'sewage', 'aim']
values = [4.0, 3.0, 6.0, 7.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sort', 'event', 'snow']","[-2, 1, -1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sort', 'event', 'snow']
values = [2.0, 1.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['neck', 'behalf', 'core', 'access', 'plant']","[2, 7, 4, 3, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['neck', 'behalf', 'core', 'access', 'plant']
values = [2.0, 7.0, 4.0, 3.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['affair', 'survey', 'random']","[80, 10, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['affair', 'survey', 'random']
values = [80.0, 10.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['vacuum', 'bread', 'gain', 'lesson', 'female', 'case', 'army', 'party']","[9, 7, 3, 9, 1, 7, 4, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vacuum', 'bread', 'gain', 'lesson', 'female', 'case', 'army', 'party']
values = [9.0, 7.0, 3.0, 9.0, 1.0, 7.0, 4.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['round', 'silver', 'plate', 'end', 'pencil']","[3, 8, 7, 3, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['round', 'silver', 'plate', 'end', 'pencil']
values = [3.0, 8.0, 7.0, 3.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sense', 'guilt', 'reform', 'color', 'tool', 'reach']","[60, 50, 90, 40, 50, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sense', 'guilt', 'reform', 'color', 'tool', 'reach']
values = [60.0, 50.0, 90.0, 40.0, 50.0, 60.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['blind', 'flow', 'while', 'tip']","[20, 30, 70, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['blind', 'flow', 'while', 'tip']
values = [20.0, 30.0, 70.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sand', 'chief', 'corps', 'reply', 'grain', 'labor']","[9, 3, 9, 6, 1, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sand', 'chief', 'corps', 'reply', 'grain', 'labor']
values = [9.0, 3.0, 9.0, 6.0, 1.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['team', 'leader', 'visit', 'method', 'arm', 'terror']","[80, 70, 20, 50, 60, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['team', 'leader', 'visit', 'method', 'arm', 'terror']
values = [80.0, 70.0, 20.0, 50.0, 60.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['reply', 'visit', 'sand', 'chin']","[3, 3, 3, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['reply', 'visit', 'sand', 'chin']
values = [3.0, 3.0, 3.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['heard', 'driver', 'sex', 'curve', 'jaw']","[2, 2, 6, 9, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['heard', 'driver', 'sex', 'curve', 'jaw']
values = [2.0, 2.0, 6.0, 9.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['future', 'jet', 'strike', 'world', 'blonde', 'harbor', 'pencil']","[50, 90, 90, 80, 40, 90, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['future', 'jet', 'strike', 'world', 'blonde', 'harbor', 'pencil']
values = [50.0, 90.0, 90.0, 80.0, 40.0, 90.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['closet', 'tour', 'sum', 'ground']","[6, 9, 1, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['closet', 'tour', 'sum', 'ground']
values = [6.0, 9.0, 1.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['air', 'supply', 'author']","[8, 2, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['air', 'supply', 'author']
values = [8.0, 2.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['well', 'proof', 'search']","[8, 5, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['well', 'proof', 'search']
values = [8.0, 5.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['stem', 'age', 'lap', 'face']","[9, 5, 1, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stem', 'age', 'lap', 'face']
values = [9.0, 5.0, 1.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['jazz', 'wealth', 'merger', 'gang', 'left', 'city', 'inside', 'poem', 'sitter']","[8, 1, 7, 5, 2, 0, 2, 9, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['jazz', 'wealth', 'merger', 'gang', 'left', 'city', 'inside', 'poem', 'sitter']
values = [8.0, 1.0, 7.0, 5.0, 2.0, 0.0, 2.0, 9.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['level', 'lot']","[8, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['level', 'lot']
values = [8.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['none', 'engine', 'hope', 'clock', 'spot', 'bank', 'region']","[9, 6, 8, 9, 5, 5, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['none', 'engine', 'hope', 'clock', 'spot', 'bank', 'region']
values = [9.0, 6.0, 8.0, 9.0, 5.0, 5.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['safety', 'sewage']","[8, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['safety', 'sewage']
values = [8.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['hair', 'mail', 'good', 'blind', 'word', 'phrase', 'stage', 'laugh', 'moon']","[70, 90, 90, 20, 30, 30, 40, 50, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hair', 'mail', 'good', 'blind', 'word', 'phrase', 'stage', 'laugh', 'moon']
values = [70.0, 90.0, 90.0, 20.0, 30.0, 30.0, 40.0, 50.0, 40.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['row', 'month', 'worker', 'wait']","[5, 1, 2, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['row', 'month', 'worker', 'wait']
values = [5.0, 1.0, 2.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['fist', 'wall', 'factor']","[70, 90, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fist', 'wall', 'factor']
values = [70.0, 90.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['belief', 'baby', 'table', 'dog', 'sake']","[4, 8, 5, 7, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['belief', 'baby', 'table', 'dog', 'sake']
values = [4.0, 8.0, 5.0, 7.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['door', 'market', 'task', 'nation', 'need']","[6, 8, 8, 2, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['door', 'market', 'task', 'nation', 'need']
values = [6.0, 8.0, 8.0, 2.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['feel', 'pause', 'vector']","[3, 9, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['feel', 'pause', 'vector']
values = [3.0, 9.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['opera', 'baby', 'fear', 'claim', 'roof', 'cat', 'spot', 'coffee']","[30, 20, 50, 20, 50, 40, 20, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['opera', 'baby', 'fear', 'claim', 'roof', 'cat', 'spot', 'coffee']
values = [30.0, 20.0, 50.0, 20.0, 50.0, 40.0, 20.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['handle', 'belt']","[30, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['handle', 'belt']
values = [30.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['post', 'whisky', 'basket', 'folk', 'mail']","[90, 30, 90, 40, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['post', 'whisky', 'basket', 'folk', 'mail']
values = [90.0, 30.0, 90.0, 40.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bullet', 'bureau', 'style', 'era', 'deck', 'dinner', 'bird', 'factor', 'brand']","[9, 3, 9, 9, 6, 3, 6, 5, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bullet', 'bureau', 'style', 'era', 'deck', 'dinner', 'bird', 'factor', 'brand']
values = [9.0, 3.0, 9.0, 9.0, 6.0, 3.0, 6.0, 5.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['injury', 'circle', 'round', 'train']","[4, 6, 2, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['injury', 'circle', 'round', 'train']
values = [4.0, 6.0, 2.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['owner', 'theory', 'storm']","[90, 50, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['owner', 'theory', 'storm']
values = [90.0, 50.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['heard', 'phrase', 'role']","[3, 3, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['heard', 'phrase', 'role']
values = [3.0, 3.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['chief', 'sight', 'strip', 'cotton', 'thirty', 'closet']","[1000000000, 1000000000, 1000000000, 1000000, 100, 10000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chief', 'sight', 'strip', 'cotton', 'thirty', 'closet']
values = [1000000000.0, 1000000000.0, 1000000000.0, 1000000.0, 100.0, 10000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['leg', 'tip', 'phrase', 'roof', 'debate', 'sample', 'hurry']","[80, 20, 70, 70, 80, 70, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['leg', 'tip', 'phrase', 'roof', 'debate', 'sample', 'hurry']
values = [80.0, 20.0, 70.0, 70.0, 80.0, 70.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['winter', 'camera', 'canvas', 'hair', 'belief']","[6, 9, 8, 8, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['winter', 'camera', 'canvas', 'hair', 'belief']
values = [6.0, 9.0, 8.0, 8.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['answer', 'master', 'growth', 'bath', 'corner', 'garage', 'life', 'soil', 'farmer']","[60, 70, 10, 60, 20, 30, 40, 30, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['answer', 'master', 'growth', 'bath', 'corner', 'garage', 'life', 'soil', 'farmer']
values = [60.0, 70.0, 10.0, 60.0, 20.0, 30.0, 40.0, 30.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['heat', 'worry']","[10, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['heat', 'worry']
values = [10.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['mouth', 'bent']","[3, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mouth', 'bent']
values = [3.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['battle', 'box', 'wood', 'rest', 'county', 'holder', 'salt']","[9, 8, 5, 7, 9, 9, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['battle', 'box', 'wood', 'rest', 'county', 'holder', 'salt']
values = [9.0, 8.0, 5.0, 7.0, 9.0, 9.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['device', 'prize', 'wagon', 'cross']","[20, 60, 20, 90]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['device', 'prize', 'wagon', 'cross']
values = [20.0, 60.0, 20.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['spot', 'drama', 'light', 'fury', 'mature', 'bare']","[6, 5, 6, 3, 7, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['spot', 'drama', 'light', 'fury', 'mature', 'bare']
values = [6.0, 5.0, 6.0, 3.0, 7.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bottle', 'memory', 'master', 'cent']","[7, 7, 2, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bottle', 'memory', 'master', 'cent']
values = [7.0, 7.0, 2.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['truth', 'award', 'foot']","[7, 6, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['truth', 'award', 'foot']
values = [7.0, 6.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['male', 'dog', 'blue', 'estate', 'stake', 'food']","[20, 40, 40, 30, 60, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['male', 'dog', 'blue', 'estate', 'stake', 'food']
values = [20.0, 40.0, 40.0, 30.0, 60.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['state', 'means', 'advice', 'pilot', 'muscle', 'truth']","[8, 5, 3, 1, 9, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['state', 'means', 'advice', 'pilot', 'muscle', 'truth']
values = [8.0, 5.0, 3.0, 1.0, 9.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['humor', 'pistol']","[70, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['humor', 'pistol']
values = [70.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['place', 'bar']","[40, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['place', 'bar']
values = [40.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['plant', 'mercy', 'fist', 'brick', 'sum', 'chest', 'book', 'pastor']","[2, 4, 1, 2, 5, 4, 7, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['plant', 'mercy', 'fist', 'brick', 'sum', 'chest', 'book', 'pastor']
values = [2.0, 4.0, 1.0, 2.0, 5.0, 4.0, 7.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['minute', 'voting']","[2, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['minute', 'voting']
values = [2.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['class', 'girl']","[30, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['class', 'girl']
values = [30.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sand', 'search', 'coat', 'steel', 'seat', 'wash', 'hall']","[3, 4, 6, 1, 6, 7, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sand', 'search', 'coat', 'steel', 'seat', 'wash', 'hall']
values = [3.0, 4.0, 6.0, 1.0, 6.0, 7.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['pair', 'result', 'cover', 'crew']","[30, 70, 90, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pair', 'result', 'cover', 'crew']
values = [30.0, 70.0, 90.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['denial', 'excess', 'post', 'bureau', 'bit', 'today', 'closet']","[5, 2, 3, 1, 6, 8, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['denial', 'excess', 'post', 'bureau', 'bit', 'today', 'closet']
values = [5.0, 2.0, 3.0, 1.0, 6.0, 8.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['butter', 'tie', 'safety', 'cost', 'realm', 'artery', 'farm']","[7, 5, 3, 9, 3, 9, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['butter', 'tie', 'safety', 'cost', 'realm', 'artery', 'farm']
values = [7.0, 5.0, 3.0, 9.0, 3.0, 9.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['reason', 'fist', 'finger', 'bank']","[7, 2, 5, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['reason', 'fist', 'finger', 'bank']
values = [7.0, 2.0, 5.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['patrol', 'tongue', 'file']","[90, 10, 30]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['patrol', 'tongue', 'file']
values = [90.0, 10.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['god', 'budget', 'file', 'degree']","[10, 70, 90, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['god', 'budget', 'file', 'degree']
values = [10.0, 70.0, 90.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['party', 'horse']","[8, -2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['party', 'horse']
values = [8.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['lack', 'word', 'tail']","[9, 8, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lack', 'word', 'tail']
values = [9.0, 8.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['strike', 'shock', 'search', 'voting']","[7, 3, 4, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['strike', 'shock', 'search', 'voting']
values = [7.0, 3.0, 4.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['rank', 'taste', 'season', 'height']","[60, 50, 60, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rank', 'taste', 'season', 'height']
values = [60.0, 50.0, 60.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['list', 'twelve']","[0, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['list', 'twelve']
values = [0.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['shadow', 'idea', 'none']","[6, 8, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shadow', 'idea', 'none']
values = [6.0, 8.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['love', 'grain', 'remark', 'mother']","[90, 20, 60, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['love', 'grain', 'remark', 'mother']
values = [90.0, 20.0, 60.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['vacuum', 'parlor', 'bar']","[4, 2, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vacuum', 'parlor', 'bar']
values = [4.0, 2.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['movie', 'vice', 'style']","[1, 8, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['movie', 'vice', 'style']
values = [1.0, 8.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['client', 'baby', 'club']","[7, 8, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['client', 'baby', 'club']
values = [7.0, 8.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['motor', 'scheme']","[6, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['motor', 'scheme']
values = [6.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['lawyer', 'river', 'tea']","[8, 7, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lawyer', 'river', 'tea']
values = [8.0, 7.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['path', 'energy', 'today']","[60, 30, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['path', 'energy', 'today']
values = [60.0, 30.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['iodine', 'career', 'clouds', 'joy']","[1, 1, 8, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['iodine', 'career', 'clouds', 'joy']
values = [1.0, 1.0, 8.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['animal', 'trail', 'wisdom', 'city', 'crop', 'bread']","[40, 70, 50, 30, 20, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['animal', 'trail', 'wisdom', 'city', 'crop', 'bread']
values = [40.0, 70.0, 50.0, 30.0, 20.0, 40.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['blue', 'loan', 'stuff', 'shirt', 'bureau', 'cannot', 'hay', 'jet', 'bank']","[2, 3, 7, 5, 9, 3, 5, 7, -8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['blue', 'loan', 'stuff', 'shirt', 'bureau', 'cannot', 'hay', 'jet', 'bank']
values = [2.0, 3.0, 7.0, 5.0, 9.0, 3.0, 5.0, 7.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['threat', 'case']","[20, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['threat', 'case']
values = [20.0, 70.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['gas', 'canvas', 'jaw', 'diet', 'plate', 'pot', 'card']","[40, 70, 40, 60, 40, 20, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gas', 'canvas', 'jaw', 'diet', 'plate', 'pot', 'card']
values = [40.0, 70.0, 40.0, 60.0, 40.0, 20.0, 60.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['plane', 'river', 'action', 'extent', 'dust']","[10000, 10000, 1000, 10000000, 1000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['plane', 'river', 'action', 'extent', 'dust']
values = [10000.0, 10000.0, 1000.0, 10000000.0, 1000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['museum', 'player', 'arm']","[5, 6, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['museum', 'player', 'arm']
values = [5.0, 6.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['ratio', 'ten']","[8, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ratio', 'ten']
values = [8.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['block', 'ideal', 'flight', 'liquor', 'fluid']","[1, 6, 9, 3, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['block', 'ideal', 'flight', 'liquor', 'fluid']
values = [1.0, 6.0, 9.0, 3.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['dress', 'silver', 'drop', 'bride', 'path']","[5, 7, 1, 8, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dress', 'silver', 'drop', 'bride', 'path']
values = [5.0, 7.0, 1.0, 8.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['auto', 'frame', 'plot', 'tape', 'novel']","[70, 40, 40, 20, 60]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['auto', 'frame', 'plot', 'tape', 'novel']
values = [70.0, 40.0, 40.0, 20.0, 60.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['medium', 'widow', 'sample', 'mold', 'brick', 'size']","[70, 30, 10, 90, 80, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['medium', 'widow', 'sample', 'mold', 'brick', 'size']
values = [70.0, 30.0, 10.0, 90.0, 80.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['chest', 'trial', 'prize', 'mile', 'depth', 'string']","[3, 5, 1, 7, 1, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chest', 'trial', 'prize', 'mile', 'depth', 'string']
values = [3.0, 5.0, 1.0, 7.0, 1.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['storm', 'bare']","[30, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['storm', 'bare']
values = [30.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['crowd', 'theme', 'gown']","[80, 60, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crowd', 'theme', 'gown']
values = [80.0, 60.0, 40.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bond', 'city', 'belt', 'force']","[1, 9, 7, -5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bond', 'city', 'belt', 'force']
values = [1.0, 9.0, 7.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['idea', 'crew', 'brand', 'essay', 'shadow']","[100000, 100000, 10, 100000000, 1000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['idea', 'crew', 'brand', 'essay', 'shadow']
values = [100000.0, 100000.0, 10.0, 100000000.0, 1000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['vice', 'smoke']","[50, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vice', 'smoke']
values = [50.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['effort', 'stroke']","[6, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['effort', 'stroke']
values = [6.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['path', 'block', 'star']","[3, 6, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['path', 'block', 'star']
values = [3.0, 6.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['order', 'march']","[9, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['order', 'march']
values = [9.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['rain', 'winter', 'holder', 'self', 'dealer']","[9, 6, 9, 9, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rain', 'winter', 'holder', 'self', 'dealer']
values = [9.0, 6.0, 9.0, 9.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['lunch', 'beam', 'bit', 'test', 'midst', 'plot', 'talk', 'tie', 'dawn']","[4, 7, 2, 8, 8, 2, 9, 2, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lunch', 'beam', 'bit', 'test', 'midst', 'plot', 'talk', 'tie', 'dawn']
values = [4.0, 7.0, 2.0, 8.0, 8.0, 2.0, 9.0, 2.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['view', 'injury', 'lock', 'mess', 'beach', 'vein']","[8, 4, 3, 9, 9, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['view', 'injury', 'lock', 'mess', 'beach', 'vein']
values = [8.0, 4.0, 3.0, 9.0, 9.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['danger', 'answer', 'burden', 'denial', 'left', 'state', 'tissue']","[8, 1, 9, 7, 7, 1, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['danger', 'answer', 'burden', 'denial', 'left', 'state', 'tissue']
values = [8.0, 1.0, 9.0, 7.0, 7.0, 1.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['loss', 'slope', 'song', 'start', 'cabin', 'graph']","[3, 9, -3, -7, 3, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['loss', 'slope', 'song', 'start', 'cabin', 'graph']
values = [3.0, 9.0, 3.0, 7.0, 3.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['event', 'credit', 'cold', 'lumber', 'line', 'brass']","[3, 4, 1, 7, 8, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['event', 'credit', 'cold', 'lumber', 'line', 'brass']
values = [3.0, 4.0, 1.0, 7.0, 8.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['shot', 'track', 'sewage', 'grant', 'order', 'ease']","[2, 8, 5, 2, 4, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shot', 'track', 'sewage', 'grant', 'order', 'ease']
values = [2.0, 8.0, 5.0, 2.0, 4.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['strip', 'policy', 'brass', 'king']","[8, 2, 3, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['strip', 'policy', 'brass', 'king']
values = [8.0, 2.0, 3.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['wise', 'horror', 'writer', 'skin', 'table', 'size']","[2, 6, 4, 5, 8, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wise', 'horror', 'writer', 'skin', 'table', 'size']
values = [2.0, 6.0, 4.0, 5.0, 8.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['dozen', 'iodine', 'task']","[7, 3, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dozen', 'iodine', 'task']
values = [7.0, 3.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['north', 'ward', 'pace']","[2, 1, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['north', 'ward', 'pace']
values = [2.0, 1.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['radio', 'army', 'mean']","[20, 50, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['radio', 'army', 'mean']
values = [20.0, 50.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['closet', 'iodine', 'sphere', 'hero', 'mature', 'gay']","[6, 3, 5, 9, 4, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['closet', 'iodine', 'sphere', 'hero', 'mature', 'gay']
values = [6.0, 3.0, 5.0, 9.0, 4.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['way', 'hunger', 'bowl', 'murder']","[4, 5, 3, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['way', 'hunger', 'bowl', 'murder']
values = [4.0, 5.0, 3.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['number', 'roof', 'state', 'artery', 'talk', 'row']","[6, 9, 5, 9, 6, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['number', 'roof', 'state', 'artery', 'talk', 'row']
values = [6.0, 9.0, 5.0, 9.0, 6.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['motor', 'roll', 'trade', 'church', 'army', 'volume', 'road']","[9, 3, 7, 8, 8, 1, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['motor', 'roll', 'trade', 'church', 'army', 'volume', 'road']
values = [9.0, 3.0, 7.0, 8.0, 8.0, 1.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['speech', 'square', 'bath', 'unit', 'estate']","[2, 2, 2, 6, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['speech', 'square', 'bath', 'unit', 'estate']
values = [2.0, 2.0, 2.0, 6.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['career', 'hole']","[80, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['career', 'hole']
values = [80.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['view', 'weight', 'talk', 'fee']","[8, 3, 8, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['view', 'weight', 'talk', 'fee']
values = [8.0, 3.0, 8.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['snake', 'peace', 'campus', 'help', 'loss']","[5, 7, 4, 3, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['snake', 'peace', 'campus', 'help', 'loss']
values = [5.0, 7.0, 4.0, 3.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['use', 'horror', 'wise', 'work', 'cent', 'gate']","[2, 5, 1, 2, 4, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['use', 'horror', 'wise', 'work', 'cent', 'gate']
values = [2.0, 5.0, 1.0, 2.0, 4.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['trail', 'ear']","[1, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['trail', 'ear']
values = [1.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['proof', 'atom', 'pound']","[8, 6, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['proof', 'atom', 'pound']
values = [8.0, 6.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['tour', 'dream', 'voyage', 'right', 'reason', 'fact', 'talk', 'fish']","[50, 40, 60, 70, 80, 50, 60, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tour', 'dream', 'voyage', 'right', 'reason', 'fact', 'talk', 'fish']
values = [50.0, 40.0, 60.0, 70.0, 80.0, 50.0, 60.0, 70.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sweat', 'head']","[5, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sweat', 'head']
values = [5.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['wage', 'visit', 'bill']","[2, 4, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wage', 'visit', 'bill']
values = [2.0, 4.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['budget', 'basis', 'list', 'bomb', 'path', 'tail', 'ladder']","[6, 5, 4, 9, 2, 2, 0]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['budget', 'basis', 'list', 'bomb', 'path', 'tail', 'ladder']
values = [6.0, 5.0, 4.0, 9.0, 2.0, 2.0, 0.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['son', 'hour', 'essay']","[5, 7, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['son', 'hour', 'essay']
values = [5.0, 7.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['dozen', 'plate', 'scheme', 'area']","[6, 1, -4, -8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dozen', 'plate', 'scheme', 'area']
values = [6.0, 1.0, 4.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cream', 'random', 'power', 'goal']","[8, 1, 3, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cream', 'random', 'power', 'goal']
values = [8.0, 1.0, 3.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['spot', 'murder', 'means', 'tissue', 'farm']","[40, 30, 20, 30, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['spot', 'murder', 'means', 'tissue', 'farm']
values = [40.0, 30.0, 20.0, 30.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['trend', 'person', 'world', 'spot', 'prize', 'check', 'artery', 'canvas', 'breath']","[5, 5, 2, 3, 3, 6, -3, 8, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['trend', 'person', 'world', 'spot', 'prize', 'check', 'artery', 'canvas', 'breath']
values = [5.0, 5.0, 2.0, 3.0, 3.0, 6.0, 3.0, 8.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['part', 'detail']","[100000, 100]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['part', 'detail']
values = [100000.0, 100.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['jungle', 'power', 'damage']","[4, 1, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['jungle', 'power', 'damage']
values = [4.0, 1.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['knee', 'grass', 'cell']","[4, 5, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['knee', 'grass', 'cell']
values = [4.0, 5.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bass', 'wound', 'desire', 'second', 'self', 'switch', 'plug', 'choice']","[7, 2, 2, 1, 5, 5, 4, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bass', 'wound', 'desire', 'second', 'self', 'switch', 'plug', 'choice']
values = [7.0, 2.0, 2.0, 1.0, 5.0, 5.0, 4.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['round', 'thirty', 'inch', 'line', 'speech', 'valley']","[1, 9, 1, 2, 9, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['round', 'thirty', 'inch', 'line', 'speech', 'valley']
values = [1.0, 9.0, 1.0, 2.0, 9.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['oil', 'ballet', 'cat', 'lap', 'pound', 'farmer', 'estate', 'height']","[8, 5, 9, 7, 9, 7, 3, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['oil', 'ballet', 'cat', 'lap', 'pound', 'farmer', 'estate', 'height']
values = [8.0, 5.0, 9.0, 7.0, 9.0, 7.0, 3.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['spirit', 'jungle']","[7, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['spirit', 'jungle']
values = [7.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['grain', 'bridge', 'shape', 'angle', 'mass', 'pride', 'move']","[90, 10, 90, 80, 20, 80, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['grain', 'bridge', 'shape', 'angle', 'mass', 'pride', 'move']
values = [90.0, 10.0, 90.0, 80.0, 20.0, 80.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cancer', 'coffee', 'glance', 'foil', 'melody']","[70, 30, 80, 40, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cancer', 'coffee', 'glance', 'foil', 'melody']
values = [70.0, 30.0, 80.0, 40.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['output', 'strain']","[9, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['output', 'strain']
values = [9.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['relief', 'turn', 'artery', 'movie']","[60, 40, 70, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['relief', 'turn', 'artery', 'movie']
values = [60.0, 40.0, 70.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['result', 'hall', 'pitch', 'brain', 'post']","[5, 5, 9, 9, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['result', 'hall', 'pitch', 'brain', 'post']
values = [5.0, 5.0, 9.0, 9.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['brief', 'sale', 'weight', 'cellar', 'cloud']","[-4, 1, 9, 6, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['brief', 'sale', 'weight', 'cellar', 'cloud']
values = [4.0, 1.0, 9.0, 6.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['well', 'beat', 'desire', 'joy', 'post', 'plug', 'flight', 'fence']","[6, 3, 1, 7, 5, 4, 7, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['well', 'beat', 'desire', 'joy', 'post', 'plug', 'flight', 'fence']
values = [6.0, 3.0, 1.0, 7.0, 5.0, 4.0, 7.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['oxygen', 'dollar', 'fun', 'voyage', 'body', 'week']","[30, 50, 40, 30, 80, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['oxygen', 'dollar', 'fun', 'voyage', 'body', 'week']
values = [30.0, 50.0, 40.0, 30.0, 80.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['slope', 'leader', 'critic', 'paper']","[80, 70, 30, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['slope', 'leader', 'critic', 'paper']
values = [80.0, 70.0, 30.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['tape', 'foam', 'driver', 'wind', 'sheet', 'farm', 'smell', 'night']","[7, 2, 1, 7, 7, 1, 2, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tape', 'foam', 'driver', 'wind', 'sheet', 'farm', 'smell', 'night']
values = [7.0, 2.0, 1.0, 7.0, 7.0, 1.0, 2.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['code', 'excuse']","[4, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['code', 'excuse']
values = [4.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['roll', 'harbor']","[1, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['roll', 'harbor']
values = [1.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['battle', 'waste', 'maid', 'stand', 'trap']","[5, 9, 7, 2, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['battle', 'waste', 'maid', 'stand', 'trap']
values = [5.0, 9.0, 7.0, 2.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sake', 'corn', 'radio']","[6, 6, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sake', 'corn', 'radio']
values = [6.0, 6.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['father', 'behalf', 'garden']","[6, 9, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['father', 'behalf', 'garden']
values = [6.0, 9.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['state', 'edge', 'dog', 'public', 'voice', 'sale']","[8, 8, 7, 8, 1, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['state', 'edge', 'dog', 'public', 'voice', 'sale']
values = [8.0, 8.0, 7.0, 8.0, 1.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['mouth', 'bunk', 'limit', 'engine', 'ride']","[40, 60, 20, 30, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mouth', 'bunk', 'limit', 'engine', 'ride']
values = [40.0, 60.0, 20.0, 30.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['wood', 'piece', 'door', 'limit', 'fault', 'fire', 'atom']","[20, 30, 90, 10, 30, 70, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wood', 'piece', 'door', 'limit', 'fault', 'fire', 'atom']
values = [20.0, 30.0, 90.0, 10.0, 30.0, 70.0, 70.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['faint', 'engine', 'object', 'book', 'dollar', 'crash']","[3, 4, 4, 6, 1, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['faint', 'engine', 'object', 'book', 'dollar', 'crash']
values = [3.0, 4.0, 4.0, 6.0, 1.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['hotel', 'size', 'area', 'means']","[3, 0, 2, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hotel', 'size', 'area', 'means']
values = [3.0, 0.0, 2.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['strain', 'plan', 'foot', 'call', 'door', 'yard']","[80, 70, 50, 20, 10, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['strain', 'plan', 'foot', 'call', 'door', 'yard']
values = [80.0, 70.0, 50.0, 20.0, 10.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['habit', 'stop', 'piano', 'series', 'deck']","[10, 60, 80, 70, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['habit', 'stop', 'piano', 'series', 'deck']
values = [10.0, 60.0, 80.0, 70.0, 60.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['self', 'ocean', 'moment', 'game', 'gun', 'flavor']","[9, 2, 5, 4, 5, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['self', 'ocean', 'moment', 'game', 'gun', 'flavor']
values = [9.0, 2.0, 5.0, 4.0, 5.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['tire', 'spirit', 'world', 'space', 'pair']","[5, 9, 3, 3, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tire', 'spirit', 'world', 'space', 'pair']
values = [5.0, 9.0, 3.0, 3.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['set', 'plate']","[8, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['set', 'plate']
values = [8.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['lip', 'smell', 'game', 'note', 'harbor']","[10, 30, 50, 30, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lip', 'smell', 'game', 'note', 'harbor']
values = [10.0, 30.0, 50.0, 30.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['carbon', 'fan', 'estate', 'stream', 'visit', 'cry', 'load', 'lawyer', 'wit']","[50, 60, 20, 70, 30, 50, 60, 30, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['carbon', 'fan', 'estate', 'stream', 'visit', 'cry', 'load', 'lawyer', 'wit']
values = [50.0, 60.0, 20.0, 70.0, 30.0, 50.0, 60.0, 30.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['actor', 'tale', 'light']","[1, 5, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['actor', 'tale', 'light']
values = [1.0, 5.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['regard', 'belt', 'head', 'limit', 'mature', 'risk']","[9, 1, 1, 7, 7, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['regard', 'belt', 'head', 'limit', 'mature', 'risk']
values = [9.0, 1.0, 1.0, 7.0, 7.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['gay', 'piece']","[10, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gay', 'piece']
values = [10.0, 70.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['news', 'heart', 'space', 'leader', 'pack']","[7, 8, 0, 4, 0]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['news', 'heart', 'space', 'leader', 'pack']
values = [7.0, 8.0, 0.0, 4.0, 0.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['crop', 'mature', 'male', 'status', 'youth', 'cost', 'ship', 'case']","[5, 0, 5, 1, 4, 3, 9, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crop', 'mature', 'male', 'status', 'youth', 'cost', 'ship', 'case']
values = [5.0, 0.0, 5.0, 1.0, 4.0, 3.0, 9.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['show', 'force', 'cabin', 'pilot', 'bench']","[100, 100, 100000000, 10000000, 10000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['show', 'force', 'cabin', 'pilot', 'bench']
values = [100.0, 100.0, 100000000.0, 10000000.0, 10000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['ladder', 'angle', 'corn']","[90, 10, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ladder', 'angle', 'corn']
values = [90.0, 10.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['race', 'cheek', 'land', 'wage', 'cotton', 'move']","[20, 30, 70, 60, 10, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['race', 'cheek', 'land', 'wage', 'cotton', 'move']
values = [20.0, 30.0, 70.0, 60.0, 10.0, 60.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['factor', 'string', 'tube', 'whisky', 'tongue', 'square']","[60, 70, 70, 20, 70, 40]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['factor', 'string', 'tube', 'whisky', 'tongue', 'square']
values = [60.0, 70.0, 70.0, 20.0, 70.0, 40.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bomb', 'tone', 'cast', 'image', 'critic', 'price']","[1, 2, 6, 5, 7, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bomb', 'tone', 'cast', 'image', 'critic', 'price']
values = [1.0, 2.0, 6.0, 5.0, 7.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['stay', 'amount', 'matter', 'clay']","[6, 4, 4, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stay', 'amount', 'matter', 'clay']
values = [6.0, 4.0, 4.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['lie', 'defeat', 'vice', 'figure', 'mind', 'editor']","[4, 1, 9, 5, 9, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lie', 'defeat', 'vice', 'figure', 'mind', 'editor']
values = [4.0, 1.0, 9.0, 5.0, 9.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['garage', 'silver', 'spread', 'bone', 'wall', 'chest']","[9, -7, 8, 3, 2, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['garage', 'silver', 'spread', 'bone', 'wall', 'chest']
values = [9.0, 7.0, 8.0, 3.0, 2.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sauce', 'man', 'beer', 'target', 'star', 'fit']","[10, 40, 40, 50, 60, 90]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sauce', 'man', 'beer', 'target', 'star', 'fit']
values = [10.0, 40.0, 40.0, 50.0, 60.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cure', 'master', 'rock', 'board', 'help']","[7, 9, 3, 8, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cure', 'master', 'rock', 'board', 'help']
values = [7.0, 9.0, 3.0, 8.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['peace', 'chair', 'gift', 'camera']","[2, 1, 6, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['peace', 'chair', 'gift', 'camera']
values = [2.0, 1.0, 6.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['dear', 'ladder']","[7, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dear', 'ladder']
values = [7.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['pain', 'stock', 'graph']","[7, 2, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pain', 'stock', 'graph']
values = [7.0, 2.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['flight', 'drop']","[20, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['flight', 'drop']
values = [20.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['victim', 'grass']","[3, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['victim', 'grass']
values = [3.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['ratio', 'fish', 'head']","[1, 5, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ratio', 'fish', 'head']
values = [1.0, 5.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['temple', 'beach', 'fan', 'rate']","[8, 6, 2, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['temple', 'beach', 'fan', 'rate']
values = [8.0, 6.0, 2.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['stake', 'player']","[2, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stake', 'player']
values = [2.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['act', 'base']","[6, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['act', 'base']
values = [6.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['team', 'lady']","[7, 0]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['team', 'lady']
values = [7.0, 0.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['notice', 'woman', 'letter', 'motel', 'case']","[1, 9, 9, 5, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['notice', 'woman', 'letter', 'motel', 'case']
values = [1.0, 9.0, 9.0, 5.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['canvas', 'cause', 'output', 'boss', 'garden', 'cloth']","[30, 60, 40, 80, 40, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['canvas', 'cause', 'output', 'boss', 'garden', 'cloth']
values = [30.0, 60.0, 40.0, 80.0, 40.0, 70.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['soil', 'public', 'shell', 'virtue']","[3, 4, 4, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['soil', 'public', 'shell', 'virtue']
values = [3.0, 4.0, 4.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['waste', 'jungle', 'hurry', 'bass', 'dress']","[1, 8, 2, 4, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['waste', 'jungle', 'hurry', 'bass', 'dress']
values = [1.0, 8.0, 2.0, 4.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['drama', 'feed']","[8, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drama', 'feed']
values = [8.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['lamp', 'return']","[4, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lamp', 'return']
values = [4.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['poem', 'city']","[50, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['poem', 'city']
values = [50.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['liquor', 'cut', 'hair', 'model', 'foil']","[90, 30, 60, 50, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['liquor', 'cut', 'hair', 'model', 'foil']
values = [90.0, 30.0, 60.0, 50.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['tire', 'mile', 'bone']","[5, 9, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tire', 'mile', 'bone']
values = [5.0, 9.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['theme', 'title', 'fury', 'fluid']","[10, 80, 60, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['theme', 'title', 'fury', 'fluid']
values = [10.0, 80.0, 60.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['second', 'member', 'paper', 'talent']","[6, 2, 6, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['second', 'member', 'paper', 'talent']
values = [6.0, 2.0, 6.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['notion', 'edge', 'range']","[8, 5, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['notion', 'edge', 'range']
values = [8.0, 5.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['lunch', 'tent', 'mine', 'arc']","[9, -5, 9, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lunch', 'tent', 'mine', 'arc']
values = [9.0, 5.0, 9.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['name', 'heat', 'shadow']","[3, 8, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['name', 'heat', 'shadow']
values = [3.0, 8.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['coast', 'sex', 'today', 'beach']","[1, 5, 4, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['coast', 'sex', 'today', 'beach']
values = [1.0, 5.0, 4.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['mile', 'bread', 'play']","[100000000, 100, 1000000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mile', 'bread', 'play']
values = [100000000.0, 100.0, 1000000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['mother', 'food', 'firm', 'wise']","[2, 2, 4, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mother', 'food', 'firm', 'wise']
values = [2.0, 2.0, 4.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['house', 'term', 'text']","[3, 1, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['house', 'term', 'text']
values = [3.0, 1.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['notice', 'comedy', 'cry', 'fire']","[20, 60, 80, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['notice', 'comedy', 'cry', 'fire']
values = [20.0, 60.0, 80.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sex', 'blonde']","[4, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sex', 'blonde']
values = [4.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['faith', 'labor', 'grain', 'hour', 'bag', 'horror', 'growth']","[60, 50, 60, 80, 90, 80, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['faith', 'labor', 'grain', 'hour', 'bag', 'horror', 'growth']
values = [60.0, 50.0, 60.0, 80.0, 90.0, 80.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['table', 'fire', 'coat', 'vision', 'list', 'bank']","[4, 8, 2, 1, 5, 0]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['table', 'fire', 'coat', 'vision', 'list', 'bank']
values = [4.0, 8.0, 2.0, 1.0, 5.0, 0.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['period', 'plate', 'saline', 'injury', 'house']","[50, 70, 70, 10, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['period', 'plate', 'saline', 'injury', 'house']
values = [50.0, 70.0, 70.0, 10.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['joke', 'lie']","[1000, 10000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['joke', 'lie']
values = [1000.0, 10000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['symbol', 'pistol']","[4, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['symbol', 'pistol']
values = [4.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['voice', 'search', 'court', 'love']","[2, 6, 8, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['voice', 'search', 'court', 'love']
values = [2.0, 6.0, 8.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['core', 'genius', 'row', 'figure', 'ground', 'bread', 'salt', 'glass', 'gold']","[7, 3, 6, 6, 2, 9, 3, 3, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['core', 'genius', 'row', 'figure', 'ground', 'bread', 'salt', 'glass', 'gold']
values = [7.0, 3.0, 6.0, 6.0, 2.0, 9.0, 3.0, 3.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['chip', 'regime', 'cross', 'faint', 'saline']","[1, 7, 2, 9, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chip', 'regime', 'cross', 'faint', 'saline']
values = [1.0, 7.0, 2.0, 9.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['opera', 'mean', 'career']","[7, 1, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['opera', 'mean', 'career']
values = [7.0, 1.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['love', 'shift', 'model', 'camp']","[6, 9, 4, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['love', 'shift', 'model', 'camp']
values = [6.0, 9.0, 4.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['switch', 'stay', 'boy', 'town', 'crowd', 'dealer', 'tea', 'wait']","[4, 9, 5, 9, 1, 4, 8, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['switch', 'stay', 'boy', 'town', 'crowd', 'dealer', 'tea', 'wait']
values = [4.0, 9.0, 5.0, 9.0, 1.0, 4.0, 8.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['anyone', 'touch', 'loss', 'warmth', 'mold', 'self', 'radar']","[2, 8, 4, 6, 1, 9, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['anyone', 'touch', 'loss', 'warmth', 'mold', 'self', 'radar']
values = [2.0, 8.0, 4.0, 6.0, 1.0, 9.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sitter', 'advice', 'hurry', 'joy']","[7, 2, 3, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sitter', 'advice', 'hurry', 'joy']
values = [7.0, 2.0, 3.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['access', 'bent', 'butter', 'house', 'shot', 'object']","[5, 4, 8, 8, 5, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['access', 'bent', 'butter', 'house', 'shot', 'object']
values = [5.0, 4.0, 8.0, 8.0, 5.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['spot', 'rule']","[5, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['spot', 'rule']
values = [5.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['uncle', 'angle', 'vector', 'reform', 'sleep', 'fan', 'powder', 'poem', 'tip']","[9, 4, 1, 4, 1, 8, 3, 8, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['uncle', 'angle', 'vector', 'reform', 'sleep', 'fan', 'powder', 'poem', 'tip']
values = [9.0, 4.0, 1.0, 4.0, 1.0, 8.0, 3.0, 8.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['rest', 'title', 'today']","[30, 50, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rest', 'title', 'today']
values = [30.0, 50.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['woman', 'cry']","[7, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['woman', 'cry']
values = [7.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['enemy', 'honey']","[20, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['enemy', 'honey']
values = [20.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['murder', 'beat', 'hour']","[1, 4, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['murder', 'beat', 'hour']
values = [1.0, 4.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['lobby', 'reason', 'end', 'relief']","[4, 2, 5, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lobby', 'reason', 'end', 'relief']
values = [4.0, 2.0, 5.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['change', 'fun', 'deck', 'stop']","[6, 9, 5, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['change', 'fun', 'deck', 'stop']
values = [6.0, 9.0, 5.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['while', 'era', 'guide', 'bone', 'feel', 'canvas', 'valley']","[1, 1, 8, 6, 5, 6, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['while', 'era', 'guide', 'bone', 'feel', 'canvas', 'valley']
values = [1.0, 1.0, 8.0, 6.0, 5.0, 6.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['vertex', 'flux']","[2, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vertex', 'flux']
values = [2.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['gyro', 'master', 'floor', 'virtue']","[3, 2, 6, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gyro', 'master', 'floor', 'virtue']
values = [3.0, 2.0, 6.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['manner', 'bus', 'driver', 'doctor', 'damage', 'growth']","[4, 2, 5, 3, 1, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['manner', 'bus', 'driver', 'doctor', 'damage', 'growth']
values = [4.0, 2.0, 5.0, 3.0, 1.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['item', 'line', 'iodine', 'beam', 'kid', 'key']","[5, 3, 5, 9, 4, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['item', 'line', 'iodine', 'beam', 'kid', 'key']
values = [5.0, 3.0, 5.0, 9.0, 4.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['saline', 'mine', 'gas', 'travel', 'bottom', 'rock']","[6, 8, 2, 8, 4, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['saline', 'mine', 'gas', 'travel', 'bottom', 'rock']
values = [6.0, 8.0, 2.0, 8.0, 4.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['pass', 'strip']","[4, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pass', 'strip']
values = [4.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['wash', 'part', 'fist', 'reply', 'kid']","[8, 7, 6, 8, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wash', 'part', 'fist', 'reply', 'kid']
values = [8.0, 7.0, 6.0, 8.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['maid', 'input', 'neck']","[10, 1000, 1000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['maid', 'input', 'neck']
values = [10.0, 1000.0, 1000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['evil', 'fellow', 'phase', 'sample', 'matter', 'stock']","[7, 9, 6, 4, 5, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['evil', 'fellow', 'phase', 'sample', 'matter', 'stock']
values = [7.0, 9.0, 6.0, 4.0, 5.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['meal', 'father']","[3, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['meal', 'father']
values = [3.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['lack', 'lead']","[8, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lack', 'lead']
values = [8.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['harm', 'feel', 'sort', 'job', 'root']","[8, 8, 9, 6, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['harm', 'feel', 'sort', 'job', 'root']
values = [8.0, 8.0, 9.0, 6.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['form', 'front', 'twelve']","[4, 3, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['form', 'front', 'twelve']
values = [4.0, 3.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['pair', 'folk']","[50, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pair', 'folk']
values = [50.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['labor', 'look', 'cry']","[6, 4, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['labor', 'look', 'cry']
values = [6.0, 4.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['entry', 'cool', 'week']","[6, 8, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['entry', 'cool', 'week']
values = [6.0, 8.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['shift', 'charge', 'till', 'cause', 'faint']","[4, 5, 4, 3, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shift', 'charge', 'till', 'cause', 'faint']
values = [4.0, 5.0, 4.0, 3.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['set', 'stage', 'course']","[4, 6, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['set', 'stage', 'course']
values = [4.0, 6.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['gain', 'attack', 'tissue']","[3, 3, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gain', 'attack', 'tissue']
values = [3.0, 3.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['affair', 'murder', 'pocket']","[1, 7, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['affair', 'murder', 'pocket']
values = [1.0, 7.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['belt', 'cost', 'season']","[0, 4, 0]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['belt', 'cost', 'season']
values = [0.0, 4.0, 0.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['butter', 'share', 'ward', 'safety']","[2, 4, 7, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['butter', 'share', 'ward', 'safety']
values = [2.0, 4.0, 7.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['plan', 'weapon', 'close', 'ratio', 'bunk']","[8, 2, 2, 9, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['plan', 'weapon', 'close', 'ratio', 'bunk']
values = [8.0, 2.0, 2.0, 9.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['pot', 'finger', 'loan', 'breath', 'match', 'tool', 'market']","[6, 4, 8, 7, 2, 7, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pot', 'finger', 'loan', 'breath', 'match', 'tool', 'market']
values = [6.0, 4.0, 8.0, 7.0, 2.0, 7.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['club', 'coat', 'ball', 'bulk', 'deal', 'killer', 'night']","[40, 40, 10, 30, 90, 60, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['club', 'coat', 'ball', 'bulk', 'deal', 'killer', 'night']
values = [40.0, 40.0, 10.0, 30.0, 90.0, 60.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['hand', 'fly', 'career', 'regard', 'pure', 'yard', 'flow', 'twenty', 'error']","[4, 7, 2, 5, 9, 1, 7, 7, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hand', 'fly', 'career', 'regard', 'pure', 'yard', 'flow', 'twenty', 'error']
values = [4.0, 7.0, 2.0, 5.0, 9.0, 1.0, 7.0, 7.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['hair', 'youth', 'book', 'birth']","[9, 8, 4, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hair', 'youth', 'book', 'birth']
values = [9.0, 8.0, 4.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['slave', 'scene']","[6, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['slave', 'scene']
values = [6.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['roof', 'artist', 'friend', 'step', 'ride', 'drive']","[1000, 10000, 10000, 100000, 1000000000, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['roof', 'artist', 'friend', 'step', 'ride', 'drive']
values = [1000.0, 10000.0, 10000.0, 100000.0, 1000000000.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['loss', 'beef', 'injury', 'cure', 'march', 'branch']","[100000, 100000, 10000000, 100000, 10, 100]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['loss', 'beef', 'injury', 'cure', 'march', 'branch']
values = [100000.0, 100000.0, 10000000.0, 100000.0, 10.0, 100.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['salary', 'fellow', 'hair', 'fuel']","[7, 3, 7, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['salary', 'fellow', 'hair', 'fuel']
values = [7.0, 3.0, 7.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['shore', 'credit', 'start', 'circle']","[8, 5, 5, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shore', 'credit', 'start', 'circle']
values = [8.0, 5.0, 5.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['secret', 'twelve', 'minute', 'honey']","[0, 3, 7, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['secret', 'twelve', 'minute', 'honey']
values = [0.0, 3.0, 7.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['host', 'prayer', 'city', 'close', 'season', 'minute', 'sauce', 'bench', 'story']","[8, 7, 1, 8, 9, 4, 2, 1, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['host', 'prayer', 'city', 'close', 'season', 'minute', 'sauce', 'bench', 'story']
values = [8.0, 7.0, 1.0, 8.0, 9.0, 4.0, 2.0, 1.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['step', 'key', 'sweat']","[4, 9, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['step', 'key', 'sweat']
values = [4.0, 9.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['mercy', 'error', 'liquor', 'profit', 'radio', 'stand', 'gain']","[3, 2, 4, 8, 9, 2, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mercy', 'error', 'liquor', 'profit', 'radio', 'stand', 'gain']
values = [3.0, 2.0, 4.0, 8.0, 9.0, 2.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['race', 'skill', 'cancer', 'speech', 'teeth', 'butter']","[2, 9, 1, 7, 7, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['race', 'skill', 'cancer', 'speech', 'teeth', 'butter']
values = [2.0, 9.0, 1.0, 7.0, 7.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['drunk', 'guide']","[4, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drunk', 'guide']
values = [4.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['output', 'buffer', 'verse', 'debate', 'team']","[9, 3, 7, 3, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['output', 'buffer', 'verse', 'debate', 'team']
values = [9.0, 3.0, 7.0, 3.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['glance', 'charm', 'campus', 'city', 'blow', 'call']","[9, 6, 9, 6, 8, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['glance', 'charm', 'campus', 'city', 'blow', 'call']
values = [9.0, 6.0, 9.0, 6.0, 8.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['box', 'nation', 'moon', 'safety']","[10, 40, 90, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['box', 'nation', 'moon', 'safety']
values = [10.0, 40.0, 90.0, 60.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['heat', 'hero']","[7, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['heat', 'hero']
values = [7.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['motor', 'wall', 'merger']","[9, 1, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['motor', 'wall', 'merger']
values = [9.0, 1.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['fire', 'thick', 'value']","[30, 50, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fire', 'thick', 'value']
values = [30.0, 50.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['fury', 'news', 'pound', 'close']","[4, 4, 8, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fury', 'news', 'pound', 'close']
values = [4.0, 4.0, 8.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['gown', 'fury', 'money', 'fight', 'noon', 'path', 'studio']","[7, 9, 6, 4, 3, 1, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gown', 'fury', 'money', 'fight', 'noon', 'path', 'studio']
values = [7.0, 9.0, 6.0, 4.0, 3.0, 1.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['second', 'stand', 'dark', 'sort', 'phone', 'drink']","[10, 80, 90, 50, 50, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['second', 'stand', 'dark', 'sort', 'phone', 'drink']
values = [10.0, 80.0, 90.0, 50.0, 50.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sense', 'butter', 'height', 'heart']","[1, 7, 5, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sense', 'butter', 'height', 'heart']
values = [1.0, 7.0, 5.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['horror', 'yard', 'luxury', 'area', 'smoke', 'sea', 'figure']","[100000, 100, 1000000, 1000, 100000, 1000000000, 10000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['horror', 'yard', 'luxury', 'area', 'smoke', 'sea', 'figure']
values = [100000.0, 100.0, 1000000.0, 1000.0, 100000.0, 1000000000.0, 10000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['girl', 'feed', 'sweat', 'court']","[4, 8, 4, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['girl', 'feed', 'sweat', 'court']
values = [4.0, 8.0, 4.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['poem', 'crisis', 'speed', 'branch']","[80, 10, 50, 90]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['poem', 'crisis', 'speed', 'branch']
values = [80.0, 10.0, 50.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['code', 'age', 'harm', 'word', 'place', 'cry', 'murder', 'hay']","[90, 40, 30, 90, 70, 40, 30, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['code', 'age', 'harm', 'word', 'place', 'cry', 'murder', 'hay']
values = [90.0, 40.0, 30.0, 90.0, 70.0, 40.0, 30.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['park', 'card', 'vote', 'career', 'worth', 'wine', 'test']","[3, 2, 2, 4, 5, 5, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['park', 'card', 'vote', 'career', 'worth', 'wine', 'test']
values = [3.0, 2.0, 2.0, 4.0, 5.0, 5.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['spring', 'skill', 'plug', 'beat']","[7, 4, 5, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['spring', 'skill', 'plug', 'beat']
values = [7.0, 4.0, 5.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['clouds', 'ball', 'belt', 'flesh', 'harm', 'sight', 'flood', 'skill']","[30, 70, 70, 80, 50, 30, 60, 80]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['clouds', 'ball', 'belt', 'flesh', 'harm', 'sight', 'flood', 'skill']
values = [30.0, 70.0, 70.0, 80.0, 50.0, 30.0, 60.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['brass', 'crime', 'depth']","[8, 2, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['brass', 'crime', 'depth']
values = [8.0, 2.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['grant', 'cold', 'goal', 'top', 'vice']","[1, 9, 6, 7, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['grant', 'cold', 'goal', 'top', 'vice']
values = [1.0, 9.0, 6.0, 7.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['title', 'yard', 'test', 'lobby', 'motor', 'bulk', 'roll']","[50, 30, 90, 20, 40, 40, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['title', 'yard', 'test', 'lobby', 'motor', 'bulk', 'roll']
values = [50.0, 30.0, 90.0, 20.0, 40.0, 40.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['class', 'trust', 'bath', 'vote', 'watch']","[9, 8, 7, 3, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['class', 'trust', 'bath', 'vote', 'watch']
values = [9.0, 8.0, 7.0, 3.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['ring', 'dust', 'source']","[7, 4, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ring', 'dust', 'source']
values = [7.0, 4.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['lack', 'color', 'cycle', 'bridge']","[9, 5, 2, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lack', 'color', 'cycle', 'bridge']
values = [9.0, 5.0, 2.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['laugh', 'ocean']","[4, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['laugh', 'ocean']
values = [4.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['top', 'poetry', 'river']","[8, 9, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['top', 'poetry', 'river']
values = [8.0, 9.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['stem', 'till', 'story', 'teeth', 'peace', 'powder']","[2, 9, 5, 6, 5, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stem', 'till', 'story', 'teeth', 'peace', 'powder']
values = [2.0, 9.0, 5.0, 6.0, 5.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['board', 'credit', 'auto', 'spot', 'myth']","[10000000, 100, 1000000000, 1000000000, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['board', 'credit', 'auto', 'spot', 'myth']
values = [10000000.0, 100.0, 1000000000.0, 1000000000.0, 100000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['row', 'player', 'clock', 'gang', 'diet']","[4, 9, 6, 2, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['row', 'player', 'clock', 'gang', 'diet']
values = [4.0, 9.0, 6.0, 2.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['tent', 'saline', 'bullet', 'pay']","[5, 2, 9, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tent', 'saline', 'bullet', 'pay']
values = [5.0, 2.0, 9.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['vision', 'way', 'girl', 'maid']","[1, 4, 9, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vision', 'way', 'girl', 'maid']
values = [1.0, 4.0, 9.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cross', 'shock', 'court']","[10000000, 100, 1000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cross', 'shock', 'court']
values = [10000000.0, 100.0, 1000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['answer', 'tray', 'uncle', 'honor', 'hair', 'legs', 'sort']","[50, 60, 30, 80, 70, 20, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['answer', 'tray', 'uncle', 'honor', 'hair', 'legs', 'sort']
values = [50.0, 60.0, 30.0, 80.0, 70.0, 20.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bird', 'length', 'gyro', 'pass', 'origin', 'cold', 'barrel', 'cloud']","[50, 60, 20, 80, 60, 60, 80, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bird', 'length', 'gyro', 'pass', 'origin', 'cold', 'barrel', 'cloud']
values = [50.0, 60.0, 20.0, 80.0, 60.0, 60.0, 80.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['heard', 'making']","[1, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['heard', 'making']
values = [1.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['voice', 'foil', 'radar', 'harbor']","[5, 3, 3, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['voice', 'foil', 'radar', 'harbor']
values = [5.0, 3.0, 3.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['row', 'study', 'fault']","[1000, 1000000, 100000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['row', 'study', 'fault']
values = [1000.0, 1000000.0, 100000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bullet', 'depth', 'memory', 'fist']","[40, 90, 0, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bullet', 'depth', 'memory', 'fist']
values = [40.0, 90.0, 0.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['taste', 'bank', 'coffee', 'clouds', 'sitter', 'hold', 'line', 'idea', 'piece']","[80, 40, 40, 20, 70, 40, 80, 60, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['taste', 'bank', 'coffee', 'clouds', 'sitter', 'hold', 'line', 'idea', 'piece']
values = [80.0, 40.0, 40.0, 20.0, 70.0, 40.0, 80.0, 60.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['input', 'cabin', 'trust', 'half']","[5, 8, 9, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['input', 'cabin', 'trust', 'half']
values = [5.0, 8.0, 9.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['curve', 'task']","[8, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['curve', 'task']
values = [8.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['effect', 'campus']","[3, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['effect', 'campus']
values = [3.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['square', 'prayer']","[0, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['square', 'prayer']
values = [0.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['task', 'bar']","[50, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['task', 'bar']
values = [50.0, 40.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['rise', 'piece', 'phrase', 'core', 'worry', 'fence', 'bag']","[9, 8, 5, 4, 8, 5, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rise', 'piece', 'phrase', 'core', 'worry', 'fence', 'bag']
values = [9.0, 8.0, 5.0, 4.0, 8.0, 5.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['career', 'pool', 'hair', 'stuff', 'impact', 'danger', 'fee', 'device', 'coffee']","[60, 10, 70, 20, 30, 70, 60, 70, 20]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['career', 'pool', 'hair', 'stuff', 'impact', 'danger', 'fee', 'device', 'coffee']
values = [60.0, 10.0, 70.0, 20.0, 30.0, 70.0, 60.0, 70.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['breath', 'song']","[8, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['breath', 'song']
values = [8.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['figure', 'couple', 'year', 'crop']","[40, 50, 40, 40]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['figure', 'couple', 'year', 'crop']
values = [40.0, 50.0, 40.0, 40.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['blood', 'shift', 'patent']","[4, 1, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['blood', 'shift', 'patent']
values = [4.0, 1.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['labor', 'sum', 'ease', 'game', 'origin', 'sister']","[3, 6, 4, 6, 7, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['labor', 'sum', 'ease', 'game', 'origin', 'sister']
values = [3.0, 6.0, 4.0, 6.0, 7.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['style', 'rise', 'strip', 'part', 'root', 'origin', 'trade', 'beat', 'task']","[-3, 1, 4, 8, -5, 9, 8, 8, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['style', 'rise', 'strip', 'part', 'root', 'origin', 'trade', 'beat', 'task']
values = [3.0, 1.0, 4.0, 8.0, 5.0, 9.0, 8.0, 8.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['melody', 'fit', 'motor', 'cannot', 'aid', 'force', 'barn', 'seed', 'salt']","[3, 5, 2, 1, 2, 9, 9, 2, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['melody', 'fit', 'motor', 'cannot', 'aid', 'force', 'barn', 'seed', 'salt']
values = [3.0, 5.0, 2.0, 1.0, 2.0, 9.0, 9.0, 2.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sugar', 'firm', 'text', 'color', 'car', 'symbol', 'space', 'cabin']","[10000000, 100000, 100, 100, 1000000000, 1000000000, 100, 1000000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sugar', 'firm', 'text', 'color', 'car', 'symbol', 'space', 'cabin']
values = [10000000.0, 100000.0, 100.0, 100.0, 1000000000.0, 1000000000.0, 100.0, 1000000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['title', 'eye']","[2, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['title', 'eye']
values = [2.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['dollar', 'seat', 'knee', 'side', 'title']","[2, 4, 8, 7, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dollar', 'seat', 'knee', 'side', 'title']
values = [2.0, 4.0, 8.0, 7.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['animal', 'lack', 'stream']","[7, 7, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['animal', 'lack', 'stream']
values = [7.0, 7.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['campus', 'rear', 'harm', 'taste', 'survey', 'fog', 'merit']","[20, 10, 10, 70, 10, 30, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['campus', 'rear', 'harm', 'taste', 'survey', 'fog', 'merit']
values = [20.0, 10.0, 10.0, 70.0, 10.0, 30.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['dining', 'whisky', 'pot', 'jail', 'motel']","[60, 40, 20, 10, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dining', 'whisky', 'pot', 'jail', 'motel']
values = [60.0, 40.0, 20.0, 10.0, 40.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['price', 'rain', 'demand', 'loss', 'hurry', 'panel']","[50, 60, 40, 70, 50, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['price', 'rain', 'demand', 'loss', 'hurry', 'panel']
values = [50.0, 60.0, 40.0, 70.0, 50.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['coal', 'motor', 'fact']","[5, 9, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['coal', 'motor', 'fact']
values = [5.0, 9.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['war', 'heard', 'news']","[6, 7, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['war', 'heard', 'news']
values = [6.0, 7.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['weapon', 'touch', 'number', 'press', 'loss', 'agent', 'lay']","[7, 1, 3, 3, 3, 8, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['weapon', 'touch', 'number', 'press', 'loss', 'agent', 'lay']
values = [7.0, 1.0, 3.0, 3.0, 3.0, 8.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['dawn', 'beat', 'cause', 'turn', 'mark', 'god', 'light', 'gay']","[70, 10, 70, 80, 90, 40, 20, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dawn', 'beat', 'cause', 'turn', 'mark', 'god', 'light', 'gay']
values = [70.0, 10.0, 70.0, 80.0, 90.0, 40.0, 20.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['soul', 'motion', 'bone', 'auto', 'means']","[70, 70, 40, 50, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['soul', 'motion', 'bone', 'auto', 'means']
values = [70.0, 70.0, 40.0, 50.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['wash', 'heart', 'army', 'whole', 'twelve']","[80, 50, 70, 10, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wash', 'heart', 'army', 'whole', 'twelve']
values = [80.0, 50.0, 70.0, 10.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['star', 'soil', 'store']","[1, 3, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['star', 'soil', 'store']
values = [1.0, 3.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sera', 'cry', 'drama']","[3, 3, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sera', 'cry', 'drama']
values = [3.0, 3.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['host', 'whole', 'profit']","[20, 80, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['host', 'whole', 'profit']
values = [20.0, 80.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['title', 'theory', 'merit', 'film', 'powder']","[7, 9, 2, 5, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['title', 'theory', 'merit', 'film', 'powder']
values = [7.0, 9.0, 2.0, 5.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['vein', 'mine']","[1, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['vein', 'mine']
values = [1.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['forth', 'fee', 'sweat']","[2, -1, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['forth', 'fee', 'sweat']
values = [2.0, 1.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['shot', 'bill', 'panic', 'power', 'trust', 'dancer', 'carbon']","[6, 4, 6, 2, 3, 8, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shot', 'bill', 'panic', 'power', 'trust', 'dancer', 'carbon']
values = [6.0, 4.0, 6.0, 2.0, 3.0, 8.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['stuff', 'voting', 'savage', 'dancer', 'clock', 'work', 'ground']","[20, 40, 10, 50, 60, 60, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stuff', 'voting', 'savage', 'dancer', 'clock', 'work', 'ground']
values = [20.0, 40.0, 10.0, 50.0, 60.0, 60.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['floor', 'wonder', 'smoke']","[90, 60, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['floor', 'wonder', 'smoke']
values = [90.0, 60.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['legend', 'fee', 'tool', 'ocean', 'plane', 'chin', 'dinner']","[50, 80, 20, 60, 60, 50, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['legend', 'fee', 'tool', 'ocean', 'plane', 'chin', 'dinner']
values = [50.0, 80.0, 20.0, 60.0, 60.0, 50.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['month', 'pistol', 'strip', 'anger']","[80, 20, 90, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['month', 'pistol', 'strip', 'anger']
values = [80.0, 20.0, 90.0, 60.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['threat', 'flavor', 'get', 'visit']","[2, 5, 7, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['threat', 'flavor', 'get', 'visit']
values = [2.0, 5.0, 7.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['ticket', 'focus', 'need', 'cell', 'storm', 'desire', 'hat', 'beard']","[3, 9, 6, 0, 5, -1, 9, -4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ticket', 'focus', 'need', 'cell', 'storm', 'desire', 'hat', 'beard']
values = [3.0, 9.0, 6.0, 0.0, 5.0, 1.0, 9.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['rest', 'strip']","[40, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rest', 'strip']
values = [40.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['lawyer', 'cycle']","[40, 70]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lawyer', 'cycle']
values = [40.0, 70.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['birth', 'slope', 'spot']","[6, 7, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['birth', 'slope', 'spot']
values = [6.0, 7.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bridge', 'force', 'role', 'aspect', 'talk', 'demand', 'access']","[40, 40, 80, 90, 30, 70, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bridge', 'force', 'role', 'aspect', 'talk', 'demand', 'access']
values = [40.0, 40.0, 80.0, 90.0, 30.0, 70.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['wealth', 'leader']","[90, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wealth', 'leader']
values = [90.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['lack', 'means', 'advice']","[20, 70, 20]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lack', 'means', 'advice']
values = [20.0, 70.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['word', 'herd', 'point', 'rear', 'step', 'count']","[40, 10, 90, 30, 50, 90]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['word', 'herd', 'point', 'rear', 'step', 'count']
values = [40.0, 10.0, 90.0, 30.0, 50.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['faint', 'speech']","[9, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['faint', 'speech']
values = [9.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['beard', 'core', 'bread']","[8, 6, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['beard', 'core', 'bread']
values = [8.0, 6.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['blood', 'case', 'house']","[9, 5, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['blood', 'case', 'house']
values = [9.0, 5.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['brief', 'genius', 'share']","[6, 3, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['brief', 'genius', 'share']
values = [6.0, 3.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['adult', 'grave']","[30, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['adult', 'grave']
values = [30.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['ward', 'hung', 'blue']","[10, 80, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ward', 'hung', 'blue']
values = [10.0, 80.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['system', 'return', 'point', 'stairs']","[5, 8, 6, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['system', 'return', 'point', 'stairs']
values = [5.0, 8.0, 6.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['feel', 'view', 'party', 'fight', 'scene', 'group']","[5, 5, 1, 3, 8, 3]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['feel', 'view', 'party', 'fight', 'scene', 'group']
values = [5.0, 5.0, 1.0, 3.0, 8.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['estate', 'total', 'band', 'poet', 'paper', 'fault', 'joke']","[6, 1, 7, 6, 6, 2, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['estate', 'total', 'band', 'poet', 'paper', 'fault', 'joke']
values = [6.0, 1.0, 7.0, 6.0, 6.0, 2.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['corps', 'drug', 'feed', 'random', 'song', 'shift', 'crew', 'guard']","[2, 3, 3, 8, 8, 6, 3, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['corps', 'drug', 'feed', 'random', 'song', 'shift', 'crew', 'guard']
values = [2.0, 3.0, 3.0, 8.0, 8.0, 6.0, 3.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['range', 'beam', 'advice', 'killer']","[1, 9, 6, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['range', 'beam', 'advice', 'killer']
values = [1.0, 9.0, 6.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['mile', 'planet', 'phrase', 'beard', 'public']","[2, 8, 1, 9, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mile', 'planet', 'phrase', 'beard', 'public']
values = [2.0, 8.0, 1.0, 9.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['way', 'tip']","[30, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['way', 'tip']
values = [30.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['pipe', 'nation', 'park', 'thirty']","[1, 9, 1, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pipe', 'nation', 'park', 'thirty']
values = [1.0, 9.0, 1.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['taste', 'cell', 'garage', 'gift', 'cancer']","[8, 6, 2, 7, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['taste', 'cell', 'garage', 'gift', 'cancer']
values = [8.0, 6.0, 2.0, 7.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['care', 'jaw', 'sugar', 'sound', 'return', 'claim']","[10, 80, 20, 40, 40, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['care', 'jaw', 'sugar', 'sound', 'return', 'claim']
values = [10.0, 80.0, 20.0, 40.0, 40.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['title', 'east']","[7, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['title', 'east']
values = [7.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cry', 'temple', 'rock']","[60, 60, 40]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cry', 'temple', 'rock']
values = [60.0, 60.0, 40.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['liquid', 'world', 'pot', 'height', 'drunk', 'mercy']","[7, 9, 4, 7, 7, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['liquid', 'world', 'pot', 'height', 'drunk', 'mercy']
values = [7.0, 9.0, 4.0, 7.0, 7.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['ocean', 'issue', 'drug', 'muscle', 'poem', 'horror', 'reader']","[4, -2, 6, -3, 2, 5, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['ocean', 'issue', 'drug', 'muscle', 'poem', 'horror', 'reader']
values = [4.0, 2.0, 6.0, 3.0, 2.0, 5.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['habit', 'row', 'taste', 'tour']","[10000000, 1000000, 10000000, 1000000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['habit', 'row', 'taste', 'tour']
values = [10000000.0, 1000000.0, 10000000.0, 1000000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['voyage', 'stem', 'circle', 'mind']","[50, 10, 60, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['voyage', 'stem', 'circle', 'mind']
values = [50.0, 10.0, 60.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['party', 'bulk', 'rest']","[100, 1000, 1000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['party', 'bulk', 'rest']
values = [100.0, 1000.0, 1000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['grant', 'firm', 'reform', 'belt']","[4, 5, 9, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['grant', 'firm', 'reform', 'belt']
values = [4.0, 5.0, 9.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['second', 'tray', 'coast', 'doubt', 'rank', 'middle', 'smile', 'basis']","[9, 9, 2, 5, 7, 7, 3, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['second', 'tray', 'coast', 'doubt', 'rank', 'middle', 'smile', 'basis']
values = [9.0, 9.0, 2.0, 5.0, 7.0, 7.0, 3.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['period', 'feed', 'island', 'bench', 'cost']","[40, 40, 90, 60, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['period', 'feed', 'island', 'bench', 'cost']
values = [40.0, 40.0, 90.0, 60.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['voice', 'order', 'talk', 'opera', 'model', 'wise', 'threat']","[7, 5, 3, 6, 3, 8, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['voice', 'order', 'talk', 'opera', 'model', 'wise', 'threat']
values = [7.0, 5.0, 3.0, 6.0, 3.0, 8.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['clock', 'skill', 'fee', 'holder', 'dealer']","[9, 2, 5, 9, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['clock', 'skill', 'fee', 'holder', 'dealer']
values = [9.0, 2.0, 5.0, 9.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['author', 'shock', 'power', 'plan', 'oil']","[1, 7, 1, 9, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['author', 'shock', 'power', 'plan', 'oil']
values = [1.0, 7.0, 1.0, 9.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['chief', 'safety', 'branch', 'jungle', 'tire']","[2, 1, 2, 8, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chief', 'safety', 'branch', 'jungle', 'tire']
values = [2.0, 1.0, 2.0, 8.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['gas', 'pack', 'minute', 'truth', 'stay', 'injury', 'hand', 'device']","[6, 6, 1, 1, 3, 6, 3, 2]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gas', 'pack', 'minute', 'truth', 'stay', 'injury', 'hand', 'device']
values = [6.0, 6.0, 1.0, 1.0, 3.0, 6.0, 3.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['body', 'vote', 'term', 'female', 'touch']","[3, 2, 2, 5, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['body', 'vote', 'term', 'female', 'touch']
values = [3.0, 2.0, 2.0, 5.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['kind', 'matter', 'impact', 'firm', 'turn', 'dress', 'hand', 'piano']","[1, 1, 9, 3, 3, 3, 2, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['kind', 'matter', 'impact', 'firm', 'turn', 'dress', 'hand', 'piano']
values = [1.0, 1.0, 9.0, 3.0, 3.0, 3.0, 2.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['till', 'rate', 'worry', 'start', 'stake', 'trap', 'cut']","[4, 6, 3, 2, 3, 2, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['till', 'rate', 'worry', 'start', 'stake', 'trap', 'cut']
values = [4.0, 6.0, 3.0, 2.0, 3.0, 2.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['shirt', 'shadow', 'campus']","[6, 6, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shirt', 'shadow', 'campus']
values = [6.0, 6.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['body', 'camera']","[9, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['body', 'camera']
values = [9.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bed', 'show', 'deal']","[3, 3, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bed', 'show', 'deal']
values = [3.0, 3.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['mine', 'film', 'legs', 'team', 'evil', 'motel', 'memory', 'lack']","[60, 30, 70, 60, 70, 40, 10, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mine', 'film', 'legs', 'team', 'evil', 'motel', 'memory', 'lack']
values = [60.0, 30.0, 70.0, 60.0, 70.0, 40.0, 10.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['chest', 'clock', 'melody', 'text', 'theme', 'source', 'pot']","[9, 8, 7, 3, 5, 9, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chest', 'clock', 'melody', 'text', 'theme', 'source', 'pot']
values = [9.0, 8.0, 7.0, 3.0, 5.0, 9.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['fun', 'model', 'style', 'bunk', 'pool', 'habit']","[90, 70, 90, 80, 10, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fun', 'model', 'style', 'bunk', 'pool', 'habit']
values = [90.0, 70.0, 90.0, 80.0, 10.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['heart', 'radar', 'regard']","[20, 10, 30]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['heart', 'radar', 'regard']
values = [20.0, 10.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['season', 'suite', 'arm', 'rail', 'table', 'flux', 'page']","[20, 20, 40, 70, 30, 20, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['season', 'suite', 'arm', 'rail', 'table', 'flux', 'page']
values = [20.0, 20.0, 40.0, 70.0, 30.0, 20.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['travel', 'joy', 'cup', 'basis']","[20, 40, 50, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['travel', 'joy', 'cup', 'basis']
values = [20.0, 40.0, 50.0, 40.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['talk', 'fiber', 'fan']","[5, 6, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['talk', 'fiber', 'fan']
values = [5.0, 6.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['town', 'honey', 'whole', 'draft', 'plant', 'cabin', 'pitch', 'critic']","[5, 3, 2, 8, 9, 7, 4, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['town', 'honey', 'whole', 'draft', 'plant', 'cabin', 'pitch', 'critic']
values = [5.0, 3.0, 2.0, 8.0, 9.0, 7.0, 4.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['expert', 'pilot', 'wait', 'symbol', 'smile', 'voyage']","[1, 2, 3, 8, 3, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['expert', 'pilot', 'wait', 'symbol', 'smile', 'voyage']
values = [1.0, 2.0, 3.0, 8.0, 3.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['work', 'value', 'shade', 'baby', 'combat', 'light']","[3, 4, 6, 3, 4, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['work', 'value', 'shade', 'baby', 'combat', 'light']
values = [3.0, 4.0, 6.0, 3.0, 4.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bare', 'fool', 'shirt', 'bit', 'tail', 'life', 'nature', 'entry']","[90, 60, 70, 30, 30, 10, 10, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bare', 'fool', 'shirt', 'bit', 'tail', 'life', 'nature', 'entry']
values = [90.0, 60.0, 70.0, 30.0, 30.0, 10.0, 10.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['trial', 'ideal']","[6, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['trial', 'ideal']
values = [6.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['beat', 'sample', 'self', 'tissue']","[2, 4, 4, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['beat', 'sample', 'self', 'tissue']
values = [2.0, 4.0, 4.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['faith', 'beauty', 'earth', 'poetry', 'term', 'barrel', 'myth']","[1, 7, 5, 3, 8, 2, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['faith', 'beauty', 'earth', 'poetry', 'term', 'barrel', 'myth']
values = [1.0, 7.0, 5.0, 3.0, 8.0, 2.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['skin', 'trial', 'guard', 'aid', 'auto', 'cabin']","[10, 70, 50, 30, 20, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['skin', 'trial', 'guard', 'aid', 'auto', 'cabin']
values = [10.0, 70.0, 50.0, 30.0, 20.0, 60.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['piano', 'score', 'hung', 'figure']","[5, 2, 5, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['piano', 'score', 'hung', 'figure']
values = [5.0, 2.0, 5.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['minute', 'cell', 'marine', 'drunk', 'snake', 'teeth', 'duty', 'pistol', 'beer']","[7, 4, 9, 2, 2, 8, 6, 4, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['minute', 'cell', 'marine', 'drunk', 'snake', 'teeth', 'duty', 'pistol', 'beer']
values = [7.0, 4.0, 9.0, 2.0, 2.0, 8.0, 6.0, 4.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cover', 'text', 'gift']","[10, 30, 30]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cover', 'text', 'gift']
values = [10.0, 30.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['party', 'store', 'story', 'spring']","[6, 3, 8, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['party', 'store', 'story', 'spring']
values = [6.0, 3.0, 8.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['curve', 'use', 'defeat', 'door', 'sheet', 'seed', 'goal']","[6, 9, 9, 6, 3, 6, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['curve', 'use', 'defeat', 'door', 'sheet', 'seed', 'goal']
values = [6.0, 9.0, 9.0, 6.0, 3.0, 6.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['day', 'tail', 'kid']","[2, 7, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['day', 'tail', 'kid']
values = [2.0, 7.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['corn', 'grip', 'bundle', 'file', 'cheek', 'extent', 'index', 'editor', 'dome']","[70, 50, 70, 30, 80, 80, 90, 30, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['corn', 'grip', 'bundle', 'file', 'cheek', 'extent', 'index', 'editor', 'dome']
values = [70.0, 50.0, 70.0, 30.0, 80.0, 80.0, 90.0, 30.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['queen', 'joke', 'length']","[1, 9, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['queen', 'joke', 'length']
values = [1.0, 9.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['item', 'mode', 'symbol', 'set', 'golf', 'melody', 'relief', 'match', 'hair']","[3, 7, 8, 2, 1, 8, 1, 5, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['item', 'mode', 'symbol', 'set', 'golf', 'melody', 'relief', 'match', 'hair']
values = [3.0, 7.0, 8.0, 2.0, 1.0, 8.0, 1.0, 5.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['denial', 'block', 'tax']","[4, 5, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['denial', 'block', 'tax']
values = [4.0, 5.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['nose', 'cast', 'bureau']","[2, 7, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['nose', 'cast', 'bureau']
values = [2.0, 7.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['guest', 'day', 'ship']","[20, 80, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['guest', 'day', 'ship']
values = [20.0, 80.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['stock', 'lock']","[40, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stock', 'lock']
values = [40.0, 60.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['means', 'money']","[4, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['means', 'money']
values = [4.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['phrase', 'place']","[10, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['phrase', 'place']
values = [10.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['means', 'spirit', 'public']","[1, 7, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['means', 'spirit', 'public']
values = [1.0, 7.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['blue', 'jungle', 'radio', 'file', 'staff', 'twenty', 'loan', 'danger', 'oxygen']","[8, 4, 6, 3, 7, 7, 6, 7, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['blue', 'jungle', 'radio', 'file', 'staff', 'twenty', 'loan', 'danger', 'oxygen']
values = [8.0, 4.0, 6.0, 3.0, 7.0, 7.0, 6.0, 7.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['fun', 'closet', 'tissue', 'shift', 'dark']","[8, 6, 7, 4, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fun', 'closet', 'tissue', 'shift', 'dark']
values = [8.0, 6.0, 7.0, 4.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['front', 'march', 'angle']","[5, 2, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['front', 'march', 'angle']
values = [5.0, 2.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['metal', 'dollar']","[40, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['metal', 'dollar']
values = [40.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['door', 'couple', 'system', 'comedy', 'call', 'base']","[8, 5, 1, 4, -2, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['door', 'couple', 'system', 'comedy', 'call', 'base']
values = [8.0, 5.0, 1.0, 4.0, 2.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['symbol', 'knife', 'foil', 'island', 'ground', 'clock', 'guide']","[6, 6, 5, 6, 7, 3, 9]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['symbol', 'knife', 'foil', 'island', 'ground', 'clock', 'guide']
values = [6.0, 6.0, 5.0, 6.0, 7.0, 3.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['guilt', 'doubt', 'market', 'liquor', 'pitch', 'agent', 'pastor', 'hay']","[7, 5, 2, 8, 7, 2, 9, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['guilt', 'doubt', 'market', 'liquor', 'pitch', 'agent', 'pastor', 'hay']
values = [7.0, 5.0, 2.0, 8.0, 7.0, 2.0, 9.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['reader', 'cup']","[4, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['reader', 'cup']
values = [4.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['volume', 'mark', 'name', 'care', 'genius', 'piano']","[8, 1, 8, 4, 5, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['volume', 'mark', 'name', 'care', 'genius', 'piano']
values = [8.0, 1.0, 8.0, 4.0, 5.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['fish', 'breath', 'shore', 'skin']","[60, 10, 10, 60]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fish', 'breath', 'shore', 'skin']
values = [60.0, 10.0, 10.0, 60.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['lap', 'tent', 'month', 'poem']","[9, 6, 0, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lap', 'tent', 'month', 'poem']
values = [9.0, 6.0, 0.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['guitar', 'notice']","[9, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['guitar', 'notice']
values = [9.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['game', 'cloth']","[1, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['game', 'cloth']
values = [1.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['case', 'gay']","[9, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['case', 'gay']
values = [9.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['birth', 'speech', 'sample', 'place', 'pastor', 'bureau', 'area', 'bowl']","[30, 10, 70, 70, 50, 30, 30, 70]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['birth', 'speech', 'sample', 'place', 'pastor', 'bureau', 'area', 'bowl']
values = [30.0, 10.0, 70.0, 70.0, 50.0, 30.0, 30.0, 70.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['list', 'critic', 'male', 'rice', 'cover']","[5, 3, 4, 3, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['list', 'critic', 'male', 'rice', 'cover']
values = [5.0, 3.0, 4.0, 3.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['plan', 'camera', 'cell', 'basis', 'type']","[6, 8, 2, 8, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['plan', 'camera', 'cell', 'basis', 'type']
values = [6.0, 8.0, 2.0, 8.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['shadow', 'drug', 'crowd', 'self', 'regard', 'need', 'image']","[1, 6, 6, 4, 7, 7, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shadow', 'drug', 'crowd', 'self', 'regard', 'need', 'image']
values = [1.0, 6.0, 6.0, 4.0, 7.0, 7.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['brick', 'coat', 'bundle', 'steel', 'club', 'adult']","[50, 90, 80, 90, 80, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['brick', 'coat', 'bundle', 'steel', 'club', 'adult']
values = [50.0, 90.0, 80.0, 90.0, 80.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['engine', 'floor', 'saline', 'desk']","[9, 3, 6, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['engine', 'floor', 'saline', 'desk']
values = [9.0, 3.0, 6.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['war', 'market', 'age', 'shell']","[9, 8, 1, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['war', 'market', 'age', 'shell']
values = [9.0, 8.0, 1.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sorry', 'rifle', 'pay', 'forest', 'hell']","[7, 5, 7, 3, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sorry', 'rifle', 'pay', 'forest', 'hell']
values = [7.0, 5.0, 7.0, 3.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['talk', 'base', 'mind', 'making', 'day']","[60, 40, 10, 20, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['talk', 'base', 'mind', 'making', 'day']
values = [60.0, 40.0, 10.0, 20.0, 60.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cat', 'vector']","[4, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cat', 'vector']
values = [4.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['handle', 'clerk', 'snow', 'youth', 'mind', 'warmth', 'vertex', 'cycle']","[5, 6, 2, 5, 9, 7, 8, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['handle', 'clerk', 'snow', 'youth', 'mind', 'warmth', 'vertex', 'cycle']
values = [5.0, 6.0, 2.0, 5.0, 9.0, 7.0, 8.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['field', 'limit', 'memory']","[10, 30, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['field', 'limit', 'memory']
values = [10.0, 30.0, 70.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cover', 'vice', 'loss']","[60, 90, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cover', 'vice', 'loss']
values = [60.0, 90.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['herd', 'strike', 'master']","[4, 2, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['herd', 'strike', 'master']
values = [4.0, 2.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['skin', 'march', 'firm', 'pile', 'room', 'slope', 'wire']","[90, 0, 30, 50, 30, 30, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['skin', 'march', 'firm', 'pile', 'room', 'slope', 'wire']
values = [90.0, 0.0, 30.0, 50.0, 30.0, 30.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['brush', 'sum', 'number']","[100, 1000, 1000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['brush', 'sum', 'number']
values = [100.0, 1000.0, 1000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['dealer', 'shore', 'dozen', 'labor', 'flight']","[7, 7, 7, 1, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dealer', 'shore', 'dozen', 'labor', 'flight']
values = [7.0, 7.0, 7.0, 1.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['grace', 'essay', 'grant']","[4, 3, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['grace', 'essay', 'grant']
values = [4.0, 3.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['fire', 'hunger']","[60, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fire', 'hunger']
values = [60.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['place', 'cereal', 'agent']","[3, 5, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['place', 'cereal', 'agent']
values = [3.0, 5.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['pay', 'heart', 'foam', 'oxygen', 'effect', 'method']","[2, 1, -9, 3, 2, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pay', 'heart', 'foam', 'oxygen', 'effect', 'method']
values = [2.0, 1.0, 9.0, 3.0, 2.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['trade', 'radio', 'peace', 'anyone']","[3, 2, 3, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['trade', 'radio', 'peace', 'anyone']
values = [3.0, 2.0, 3.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['stand', 'source']","[4, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stand', 'source']
values = [4.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['widow', 'kid', 'liquor', 'feed', 'comedy']","[-2, 5, 9, 4, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['widow', 'kid', 'liquor', 'feed', 'comedy']
values = [2.0, 5.0, 9.0, 4.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['critic', 'cash', 'artery', 'essay', 'cast', 'unity', 'mean', 'harbor', 'action']","[-8, 9, -5, -2, 4, 9, 2, -1, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['critic', 'cash', 'artery', 'essay', 'cast', 'unity', 'mean', 'harbor', 'action']
values = [8.0, 9.0, 5.0, 2.0, 4.0, 9.0, 2.0, 1.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['tea', 'motion', 'barn', 'patrol', 'mean', 'step']","[80, 30, 70, 30, 50, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tea', 'motion', 'barn', 'patrol', 'mean', 'step']
values = [80.0, 30.0, 70.0, 30.0, 50.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['fee', 'cabin', 'code', 'air', 'pain', 'person', 'patent', 'ocean']","[4, 4, 2, 6, 3, 6, 1, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fee', 'cabin', 'code', 'air', 'pain', 'person', 'patent', 'ocean']
values = [4.0, 4.0, 2.0, 6.0, 3.0, 6.0, 1.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['loan', 'job', 'bath']","[8, 5, 5]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['loan', 'job', 'bath']
values = [8.0, 5.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['growth', 'planet', 'west', 'rain']","[7, 1, 9, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['growth', 'planet', 'west', 'rain']
values = [7.0, 1.0, 9.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['auto', 'jury', 'rifle', 'uncle', 'peace', 'fruit']","[10000000, 1000, 100000, 1000000000, 10000000, 100000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['auto', 'jury', 'rifle', 'uncle', 'peace', 'fruit']
values = [10000000.0, 1000.0, 100000.0, 1000000000.0, 10000000.0, 100000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['stay', 'porch', 'pure', 'desk', 'beef', 'pride']","[9, 8, 8, 3, 5, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stay', 'porch', 'pure', 'desk', 'beef', 'pride']
values = [9.0, 8.0, 8.0, 3.0, 5.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['wind', 'scene']","[80, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wind', 'scene']
values = [80.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['midst', 'faith', 'image', 'powder', 'bone', 'unit']","[3, 1, 2, 7, 9, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['midst', 'faith', 'image', 'powder', 'bone', 'unit']
values = [3.0, 1.0, 2.0, 7.0, 9.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sea', 'rest', 'voting', 'grip', 'defeat']","[5, 8, 5, 5, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sea', 'rest', 'voting', 'grip', 'defeat']
values = [5.0, 8.0, 5.0, 5.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['favor', 'watch', 'band', 'cancer', 'rear']","[2, 2, 9, 5, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['favor', 'watch', 'band', 'cancer', 'rear']
values = [2.0, 2.0, 9.0, 5.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['pool', 'drink', 'vote']","[9, 7, 5]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pool', 'drink', 'vote']
values = [9.0, 7.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['judge', 'sport', 'season', 'form']","[10, 60, 60, 30]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['judge', 'sport', 'season', 'form']
values = [10.0, 60.0, 60.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['fiber', 'store', 'joy', 'muscle', 'mess']","[8, 4, 4, 2, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fiber', 'store', 'joy', 'muscle', 'mess']
values = [8.0, 4.0, 4.0, 2.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['butter', 'boss', 'savage', 'gay']","[8, 5, 5, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['butter', 'boss', 'savage', 'gay']
values = [8.0, 5.0, 5.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['pile', 'girl', 'bridge']","[60, 70, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pile', 'girl', 'bridge']
values = [60.0, 70.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['prayer', 'factor']","[9, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['prayer', 'factor']
values = [9.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['course', 'point', 'cow', 'aid', 'post', 'today']","[2, 3, 4, 6, 6, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['course', 'point', 'cow', 'aid', 'post', 'today']
values = [2.0, 3.0, 4.0, 6.0, 6.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sound', 'wit']","[4, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sound', 'wit']
values = [4.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['aspect', 'vertex', 'strike', 'supper', 'church']","[80, 40, 30, 70, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['aspect', 'vertex', 'strike', 'supper', 'church']
values = [80.0, 40.0, 30.0, 70.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['supper', 'bunk', 'strain', 'hero', 'arc']","[1, 7, 6, 2, 7]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['supper', 'bunk', 'strain', 'hero', 'arc']
values = [1.0, 7.0, 6.0, 2.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['beard', 'canvas', 'guest', 'coach', 'thirty']","[2, 7, 2, 9, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['beard', 'canvas', 'guest', 'coach', 'thirty']
values = [2.0, 7.0, 2.0, 9.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bureau', 'town', 'closet', 'turn', 'moment']","[3, 5, 7, 4, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bureau', 'town', 'closet', 'turn', 'moment']
values = [3.0, 5.0, 7.0, 4.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['storm', 'good', 'smile', 'leg', 'dancer', 'table', 'museum', 'center', 'term']","[5, 2, 1, 9, 9, 9, 7, 3, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['storm', 'good', 'smile', 'leg', 'dancer', 'table', 'museum', 'center', 'term']
values = [5.0, 2.0, 1.0, 9.0, 9.0, 9.0, 7.0, 3.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['jar', 'game', 'mess', 'theory', 'trust', 'arc']","[5, 8, 1, 6, 1, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['jar', 'game', 'mess', 'theory', 'trust', 'arc']
values = [5.0, 8.0, 1.0, 6.0, 1.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bone', 'fan', 'twenty', 'share', 'weight', 'salt']","[80, 70, 30, 60, 60, 50]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bone', 'fan', 'twenty', 'share', 'weight', 'salt']
values = [80.0, 70.0, 30.0, 60.0, 60.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['lock', 'garden', 'one', 'fog']","[8, 2, 9, 4]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lock', 'garden', 'one', 'fog']
values = [8.0, 2.0, 9.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['wire', 'affair', 'murder']","[6, 4, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wire', 'affair', 'murder']
values = [6.0, 4.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['wave', 'hay', 'town', 'medium']","[5, 7, 2, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wave', 'hay', 'town', 'medium']
values = [5.0, 7.0, 2.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['touch', 'result']","[9, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['touch', 'result']
values = [9.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['youth', 'actor', 'bone', 'door', 'box', 'school', 'sound']","[7, 1, 3, 2, 9, 3, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['youth', 'actor', 'bone', 'door', 'box', 'school', 'sound']
values = [7.0, 1.0, 3.0, 2.0, 9.0, 3.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['spring', 'drunk', 'sorry', 'jazz']","[100000000, 1000000000, 1000, 1000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['spring', 'drunk', 'sorry', 'jazz']
values = [100000000.0, 1000000000.0, 1000.0, 1000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['son', 'corps', 'manner', 'move']","[40, 20, 50, 20]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['son', 'corps', 'manner', 'move']
values = [40.0, 20.0, 50.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['queen', 'guitar', 'loan', 'maid', 'denial', 'spot']","[70, 50, 70, 90, 50, 70]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['queen', 'guitar', 'loan', 'maid', 'denial', 'spot']
values = [70.0, 50.0, 70.0, 90.0, 50.0, 70.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['trial', 'wife', 'set']","[30, 10, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['trial', 'wife', 'set']
values = [30.0, 10.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sheet', 'doubt']","[70, 90]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sheet', 'doubt']
values = [70.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['music', 'closet', 'water', 'sorry']","[10, 60, 90, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['music', 'closet', 'water', 'sorry']
values = [10.0, 60.0, 90.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['move', 'close', 'cancer', 'stick']","[8, 0, 4, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['move', 'close', 'cancer', 'stick']
values = [8.0, 0.0, 4.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['worker', 'parlor', 'series', 'goal']","[50, 10, 60, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['worker', 'parlor', 'series', 'goal']
values = [50.0, 10.0, 60.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['order', 'drive']","[10, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['order', 'drive']
values = [10.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['child', 'glass', 'male']","[3, 4, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['child', 'glass', 'male']
values = [3.0, 4.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['yard', 'file']","[20, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['yard', 'file']
values = [20.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bundle', 'glory', 'muscle', 'corps', 'stand']","[20, 30, 90, 90, 80]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bundle', 'glory', 'muscle', 'corps', 'stand']
values = [20.0, 30.0, 90.0, 90.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['gun', 'tube', 'trap', 'rule']","[70, 0, 70, 0]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gun', 'tube', 'trap', 'rule']
values = [70.0, 0.0, 70.0, 0.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['chain', 'chorus', 'chair', 'coal', 'neck', 'act']","[1000000, 10000, 100000, 1000000, 1000, 100000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chain', 'chorus', 'chair', 'coal', 'neck', 'act']
values = [1000000.0, 10000.0, 100000.0, 1000000.0, 1000.0, 100000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bread', 'panic', 'look', 'body', 'honey']","[8, 8, 4, 6, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bread', 'panic', 'look', 'body', 'honey']
values = [8.0, 8.0, 4.0, 6.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['flesh', 'man', 'voice', 'grant']","[2, 6, 5, 7]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['flesh', 'man', 'voice', 'grant']
values = [2.0, 6.0, 5.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sand', 'moment', 'show', 'task']","[10, 60, 10, 10]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sand', 'moment', 'show', 'task']
values = [10.0, 60.0, 10.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cup', 'count', 'scene']","[9, 1, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cup', 'count', 'scene']
values = [9.0, 1.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['blind', 'yield', 'teeth', 'flesh']","[6, 1, 6, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['blind', 'yield', 'teeth', 'flesh']
values = [6.0, 1.0, 6.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bundle', 'cut', 'breath', 'army', 'bag', 'mark', 'barrel', 'yield', 'field']","[6, 6, 4, 2, 8, 6, 8, 5, 3]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bundle', 'cut', 'breath', 'army', 'bag', 'mark', 'barrel', 'yield', 'field']
values = [6.0, 6.0, 4.0, 2.0, 8.0, 6.0, 8.0, 5.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cast', 'voyage', 'author', 'wood']","[30, 10, 30, 80]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cast', 'voyage', 'author', 'wood']
values = [30.0, 10.0, 30.0, 80.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['era', 'cellar', 'fist']","[3, 5, 3]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['era', 'cellar', 'fist']
values = [3.0, 5.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['brand', 'dream', 'tire', 'brain']","[30, 50, 90, 50]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['brand', 'dream', 'tire', 'brain']
values = [30.0, 50.0, 90.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['chance', 'circle', 'hold', 'throat']","[100000000, 100000, 100000000, 1000000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chance', 'circle', 'hold', 'throat']
values = [100000000.0, 100000.0, 100000000.0, 1000000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['phrase', 'start', 'office', 'theory', 'lot', 'wind', 'clerk', 'copy', 'hotel']","[2, 3, -9, 9, 7, 7, -5, 7, -2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['phrase', 'start', 'office', 'theory', 'lot', 'wind', 'clerk', 'copy', 'hotel']
values = [2.0, 3.0, 9.0, 9.0, 7.0, 7.0, 5.0, 7.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['phrase', 'focus', 'bass', 'chief', 'base', 'county', 'agency']","[1000000000, 100000000, 10000000, 1000000, 100000000, 1000000, 1000]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['phrase', 'focus', 'bass', 'chief', 'base', 'county', 'agency']
values = [1000000000.0, 100000000.0, 10000000.0, 1000000.0, 100000000.0, 1000000.0, 1000.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['charm', 'load', 'ticket', 'clay', 'yield', 'tire', 'fluid', 'heard']","[6, 6, 7, 5, 1, 6, 4, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['charm', 'load', 'ticket', 'clay', 'yield', 'tire', 'fluid', 'heard']
values = [6.0, 6.0, 7.0, 5.0, 1.0, 6.0, 4.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['sale', 'ball', 'tie', 'jet', 'bag']","[3, 1, 5, 1, 2]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['sale', 'ball', 'tie', 'jet', 'bag']
values = [3.0, 1.0, 5.0, 1.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['paper', 'suite', 'rear', 'fluid', 'origin']","[5, 8, 9, 6, 8]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['paper', 'suite', 'rear', 'fluid', 'origin']
values = [5.0, 8.0, 9.0, 6.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['block', 'size', 'rage']","[4, 9, 6]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['block', 'size', 'rage']
values = [4.0, 9.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['key', 'entry', 'half', 'city', 'hold', 'face']","[4, 7, 5, 4, 3, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['key', 'entry', 'half', 'city', 'hold', 'face']
values = [4.0, 7.0, 5.0, 4.0, 3.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['wall', 'lunch', 'sense']","[4, 6, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['wall', 'lunch', 'sense']
values = [4.0, 6.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['unit', 'point', 'burden', 'term', 'cloth', 'owner', 'stem']","[20, 70, 60, 70, 10, 50, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['unit', 'point', 'burden', 'term', 'cloth', 'owner', 'stem']
values = [20.0, 70.0, 60.0, 70.0, 10.0, 50.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['total', 'stairs', 'branch']","[50, 40, 50]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['total', 'stairs', 'branch']
values = [50.0, 40.0, 50.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['dark', 'night', 'fiber', 'mold']","[4, 5, 9, 7]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dark', 'night', 'fiber', 'mold']
values = [4.0, 5.0, 9.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['twelve', 'screen', 'essay', 'medium', 'team', 'ballet', 'result', 'liquid', 'gain']","[5, 1, 3, 9, 7, 4, 7, 7, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['twelve', 'screen', 'essay', 'medium', 'team', 'ballet', 'result', 'liquid', 'gain']
values = [5.0, 1.0, 3.0, 9.0, 7.0, 4.0, 7.0, 7.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cabin', 'legs', 'unit', 'honey']","[1, 3, 3, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cabin', 'legs', 'unit', 'honey']
values = [1.0, 3.0, 3.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['lamp', 'future', 'cellar', 'suite', 'coat', 'stroke']","[9, 2, 8, 8, 8, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lamp', 'future', 'cellar', 'suite', 'coat', 'stroke']
values = [9.0, 2.0, 8.0, 8.0, 8.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['night', 'ease', 'nature', 'shell']","[2, 5, 8, 2]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['night', 'ease', 'nature', 'shell']
values = [2.0, 5.0, 8.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['total', 'list', 'inside', 'maid', 'left', 'pitch']","[10, 30, 60, 60, 90, 10]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['total', 'list', 'inside', 'maid', 'left', 'pitch']
values = [10.0, 30.0, 60.0, 60.0, 90.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['choice', 'cloud', 'coal']","[6, 9, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['choice', 'cloud', 'coal']
values = [6.0, 9.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['stick', 'inside', 'friend']","[60, 60, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['stick', 'inside', 'friend']
values = [60.0, 60.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['scope', 'inch', 'wait', 'judge', 'parade', 'value']","[80, 10, 20, 20, 70, 40]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['scope', 'inch', 'wait', 'judge', 'parade', 'value']
values = [80.0, 10.0, 20.0, 20.0, 70.0, 40.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bullet', 'child', 'force', 'drift', 'cabin', 'chest']","[4, 5, 4, 9, 6, 1]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bullet', 'child', 'force', 'drift', 'cabin', 'chest']
values = [4.0, 5.0, 4.0, 9.0, 6.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['fence', 'vertex', 'unity']","[3, 9, 8]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['fence', 'vertex', 'unity']
values = [3.0, 9.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['killer', 'club', 'volume']","[7, 7, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['killer', 'club', 'volume']
values = [7.0, 7.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['hung', 'arm']","[2, 1]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['hung', 'arm']
values = [2.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['crisis', 'art', 'dear', 'fun', 'vertex']","[1, 6, 1, 5, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crisis', 'art', 'dear', 'fun', 'vertex']
values = [1.0, 6.0, 1.0, 5.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['title', 'ranch', 'hunger']","[2, 9, 5]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['title', 'ranch', 'hunger']
values = [2.0, 9.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['gain', 'master', 'flight', 'victim', 'faith', 'rush']","[70, 10, 90, 90, 10, 60]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['gain', 'master', 'flight', 'victim', 'faith', 'rush']
values = [70.0, 10.0, 90.0, 90.0, 10.0, 60.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['chorus', 'rise', 'merit', 'medium', 'jury', 'plain', 'coat', 'front']","[6, 6, 5, 4, 6, 6, 6, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['chorus', 'rise', 'merit', 'medium', 'jury', 'plain', 'coat', 'front']
values = [6.0, 6.0, 5.0, 4.0, 6.0, 6.0, 6.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['lay', 'cost', 'fist', 'court', 'stem']","[8, 1, 5, 9, 4]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['lay', 'cost', 'fist', 'court', 'stem']
values = [8.0, 1.0, 5.0, 9.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['part', 'injury']","[6, 4]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['part', 'injury']
values = [6.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['shirt', 'mess', 'expert', 'tree', 'soap', 'trip']","[20, 30, 20, 60, 90, 20]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['shirt', 'mess', 'expert', 'tree', 'soap', 'trip']
values = [20.0, 30.0, 20.0, 60.0, 90.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['dawn', 'campus']","[5, 3]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['dawn', 'campus']
values = [5.0, 3.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['cloud', 'flash', 'worker', 'youth', 'anyone', 'colony', 'maid', 'truck']","[5, 9, 1, 9, 1, 9, 2, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['cloud', 'flash', 'worker', 'youth', 'anyone', 'colony', 'maid', 'truck']
values = [5.0, 9.0, 1.0, 9.0, 1.0, 9.0, 2.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['mother', 'plan', 'reply', 'horror']","[40, 70, 20, 30]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['mother', 'plan', 'reply', 'horror']
values = [40.0, 70.0, 20.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['glory', 'patrol', 'end']","[3, 3, 2]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['glory', 'patrol', 'end']
values = [3.0, 3.0, 2.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['virtue', 'chip', 'talent', 'walk', 'honey', 'path']","[70, 20, 90, 10, 50, 90]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['virtue', 'chip', 'talent', 'walk', 'honey', 'path']
values = [70.0, 20.0, 90.0, 10.0, 50.0, 90.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['butter', 'music', 'voyage']","[70, 10, 20]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['butter', 'music', 'voyage']
values = [70.0, 10.0, 20.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['crime', 'result', 'honor', 'powder']","[0, 90, 70, 30]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['crime', 'result', 'honor', 'powder']
values = [0.0, 90.0, 70.0, 30.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['soil', 'block', 'worth', 'ratio', 'radar', 'pass']","[4, 4, 6, 4, 4, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['soil', 'block', 'worth', 'ratio', 'radar', 'pass']
values = [4.0, 4.0, 6.0, 4.0, 4.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['total', 'gown', 'axis']","[6, 3, 9]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['total', 'gown', 'axis']
values = [6.0, 3.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['drop', 'today', 'death', 'foam', 'supper']","[1, 1, 6, 8, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['drop', 'today', 'death', 'foam', 'supper']
values = [1.0, 1.0, 6.0, 8.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['pond', 'powder', 'fog']","[4, 7, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pond', 'powder', 'fog']
values = [4.0, 7.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['blow', 'pause', 'search', 'worth', 'range', 'drop']","[3, 7, 4, 4, 6, 6]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['blow', 'pause', 'search', 'worth', 'range', 'drop']
values = [3.0, 7.0, 4.0, 4.0, 6.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['rain', 'opera', 'school', 'action', 'member', 'holder', 'crash']","[5, 4, 9, 6, 9, 1, 5]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rain', 'opera', 'school', 'action', 'member', 'holder', 'crash']
values = [5.0, 4.0, 9.0, 6.0, 9.0, 1.0, 5.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['tube', 'bath', 'south', 'porch', 'wait', 'ocean']","[1000, 100000, 100000, 10000, 1000000, 10]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tube', 'bath', 'south', 'porch', 'wait', 'ocean']
values = [1000.0, 100000.0, 100000.0, 10000.0, 1000000.0, 10.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['animal', 'church']","[7, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['animal', 'church']
values = [7.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['plate', 'ballet', 'pure', 'box', 'legs']","[5, 3, 2, 6, 4]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['plate', 'ballet', 'pure', 'box', 'legs']
values = [5.0, 3.0, 2.0, 6.0, 4.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['seed', 'rule', 'value']","[3, 5, 1]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['seed', 'rule', 'value']
values = [3.0, 5.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['pilot', 'seat', 'health', 'march', 'land', 'fact']","[2, 1, 5, 7, 6, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['pilot', 'seat', 'health', 'march', 'land', 'fact']
values = [2.0, 1.0, 5.0, 7.0, 6.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Times New Roman')  # Add a title to the chart

# Display the chart
plt.show()
"
"['coach', 'cup', 'loan']","[3, 7, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['coach', 'cup', 'loan']
values = [3.0, 7.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['tax', 'back', 'bridge', 'glance', 'camp', 'course']","[6, 5, 9, 4, 8, 7]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['tax', 'back', 'bridge', 'glance', 'camp', 'course']
values = [6.0, 5.0, 9.0, 4.0, 8.0, 7.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['second', 'smell', 'sign']","[7, 3, 8]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['second', 'smell', 'sign']
values = [7.0, 3.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['matter', 'south']","[3, 6]",Accuracy of different algorithms,Accuracy,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['matter', 'south']
values = [3.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Accuracy of different algorithms', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['color', 'storm']","[3, 6]",Most preferred objects,Number of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['color', 'storm']
values = [3.0, 6.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Comic Sans MS')  # Add a title to the chart

# Display the chart
plt.show()
"
"['twenty', 'client', 'target']","[7, 7, 9]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['twenty', 'client', 'target']
values = [7.0, 7.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['use', 'rain', 'extent', 'type', 'mind', 'lumber']","[5, 1, 9, 9, 5, 9]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['use', 'rain', 'extent', 'type', 'mind', 'lumber']
values = [5.0, 1.0, 9.0, 9.0, 5.0, 9.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
"['random', 'past', 'back', 'noon', 'field', 'butter', 'entry', 'root']","[40, 70, 70, 30, 90, 80, 80, 40]",Most preferred objects,Percent of People,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['random', 'past', 'back', 'noon', 'field', 'butter', 'entry', 'root']
values = [40.0, 70.0, 70.0, 30.0, 90.0, 80.0, 80.0, 40.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Most preferred objects', fontname='Courier New')  # Add a title to the chart

# Display the chart
plt.show()
"
"['bay', 'clay', 'weapon', 'word', 'man', 'animal', 'year', 'number']","[-2, -4, -4, 1, 2, 3, 8, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['bay', 'clay', 'weapon', 'word', 'man', 'animal', 'year', 'number']
values = [2.0, 4.0, 4.0, 1.0, 2.0, 3.0, 8.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['rock', 'money', 'report', 'dive', 'head']","[-3, 3, 2, 2, 1]",Title,Values,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['rock', 'money', 'report', 'dive', 'head']
values = [3.0, 3.0, 2.0, 2.0, 1.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Title', fontname='Arial')  # Add a title to the chart

# Display the chart
plt.show()
"
"['father', 'faith', 'tree']","[3, 2, 8]",Sales statistics for different items,Units sold,"
import matplotlib.pyplot as plt

# Categories and their corresponding values
categories = ['father', 'faith', 'tree']
values = [3.0, 2.0, 8.0]

# Creating the pie chart
plt.figure(figsize=(8, 5))  # Set the figure size (optional)
plt.pie(values, labels=categories, autopct='%1.1f%%', colors=plt.cm.Set3.colors)  # Plot the pie chart with percentages and a color map

# Adding title and labels
plt.title('Sales statistics for different items', fontname='Verdana')  # Add a title to the chart

# Display the chart
plt.show()
"
